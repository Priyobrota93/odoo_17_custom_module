)]}'
{"version": 3, "sources": ["/web/static/tests/ignore_missing_deps_start.js", "/base/static/tests/test_ir_model_fields_translation.js", "/web/static/tests/helpers/cleanup.js", "/web/static/tests/helpers/utils.js", "/web/static/tests/utils.js", "/mail/static/tests/tours/activity_date_format_tour.js", "/mail/static/tests/tours/discuss_channel_as_guest_tour.js", "/mail/static/tests/tours/discuss_channel_public_tour.js", "/mail/static/tests/tours/discuss_channel_tour.js", "/mail/static/tests/tours/mail_activity_schedule_from_chatter.js", "/mail/static/tests/tours/mail_composer_test_tour.js", "/mail/static/tests/tours/mail_message_load_order_tour.js", "/mail/static/tests/tours/mail_template_dynamic_placeholder_tour.js", "/mail/static/tests/tours/user_modify_own_profile_tour.js", "/portal/static/tests/tours/portal.js", "/account/static/tests/tours/tax_group_tests.js", "/sale/static/tests/tours/sale_signature.js", "/project/static/tests/tours/personal_stage_tour.js", "/project/static/tests/tours/project_burndown_chart_tour.js", "/project/static/tests/tours/project_sharing_tour.js", "/project/static/tests/tours/project_tags_filter_tour_tests.js", "/project/static/tests/tours/project_tour.js", "/project/static/tests/tours/project_update_tour_tests.js", "/contacts/static/tests/tours/debug_menu_set_defaults.js", "/mass_mailing/static/tests/tours/mailing_campaign.js", "/mass_mailing/static/tests/tours/mailing_editor.js", "/mass_mailing/static/tests/tours/mailing_editor_theme.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_document.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_list.js", "/mass_mailing/static/tests/tours/mailing_portal_unsubscribe_from_my.js", "/mass_mailing/static/tests/tours/mass_mailing_code_view.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_tabs.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_toolbar.js", "/mass_mailing/static/tests/tours/snippets_mailing_menu_toolbar_mobile.js", "/web_enterprise/static/tests/tours/web_enterprise_tours.js", "/web_studio/static/tests/tours/tour_helpers.js", "/web_studio/static/tests/tours/web_studio.js", "/web_studio/static/tests/tours/web_studio_main_tours.js", "/web_studio/static/tests/tours/web_studio_test_ui_unit_report_tours.js", "/web_studio/static/tests/tours/web_studio_test_ui_unit_tours.js", "/hr/static/tests/tours/hr_employee_flow.js", "/hr/static/tests/tours/user_modify_own_profile_tour.js", "/knowledge/static/tests/tours/commands/knowledge_article_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_calendar_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_file_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_index_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_kanban_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_list_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_outline_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_search_favorites_tour.js", "/knowledge/static/tests/tours/commands/knowledge_table_of_content_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_template_command_tour.js", "/knowledge/static/tests/tours/commands/knowledge_video_command_tour.js", "/knowledge/static/tests/tours/knowledge_article_thread_tours.js", "/knowledge/static/tests/tours/knowledge_cover_picker.js", "/knowledge/static/tests/tours/knowledge_cover_random_unplash.js", "/knowledge/static/tests/tours/knowledge_embedded_views_tour.js", "/knowledge/static/tests/tours/knowledge_history_tour.js", "/knowledge/static/tests/tours/knowledge_main_flow_tour.js", "/knowledge/static/tests/tours/knowledge_main_flow_tour_portal.js", "/knowledge/static/tests/tours/knowledge_pick_emoji_tour.js", "/knowledge/static/tests/tours/knowledge_properties_tour.js", "/knowledge/static/tests/tours/knowledge_readonly_favorite_tour.js", "/knowledge/static/tests/tours/knowledge_readonly_item_kanban_tour.js", "/knowledge/static/tests/tours/knowledge_readonly_item_list_tour.js", "/knowledge/static/tests/tours/knowledge_resequence_children_of_readonly_parent_tour.js", "/knowledge/static/tests/tours/knowledge_sidebar_readonly_tour.js", "/knowledge/static/tests/tours/knowledge_sidebar_tour.js", "/knowledge/static/tests/tours/knowledge_template_tour.js", "/knowledge/static/tests/tours/knowledge_tour_utils.js", "/sign/static/tests/tours/sign_request_shared_tour.js", "/sign/static/tests/tours/sign_template_creation_tour.js", "/sign/static/tests/tours/sign_widgets_tour.js", "/sign/static/tests/tours/test_report_modal_tour.js", "/sign/static/tests/tours/test_sign_flow_tour.js", "/sign/static/tests/tours/translate_sign_instructions_tour.js", "/planning/static/tests/tours/planning_split_shift_tours.js", "/planning/static/tests/tours/planning_tests_tours.js", "/calendar/static/tests/tours/calendar_tour.js", "/survey/static/tests/tours/certification_failure.js", "/survey/static/tests/tours/certification_success.js", "/survey/static/tests/tours/survey.js", "/survey/static/tests/tours/survey_chained_conditional_questions.js", "/survey/static/tests/tours/survey_conditional_questions_on_different_page.js", "/survey/static/tests/tours/survey_form.js", "/survey/static/tests/tours/survey_prefill.js", "/survey/static/tests/tours/survey_roaming_mandatory_questions.js", "/survey/static/tests/tours/survey_session_manage_test.js", "/survey/static/tests/tours/survey_tour_session_manage.js", "/survey/static/tests/tours/survey_tour_session_start.js", "/survey/static/tests/tours/survey_tour_session_tools.js", "/hr_skills/static/tests/tours/skills_tour.js", "/sale_external_tax/static/tests/tours/sale_external_optional_products.js", "/mail_enterprise/static/tests/tours/discuss_channel_expand_test_tour.js", "/auth_totp/static/tests/totp_flow.js", "/auth_totp_mail/static/tests/totp_flow.js", "/auth_totp_portal/static/tests/totp_portal.js", "/project_enterprise/static/tests/tours/task_gantt_tour_test.js", "/sale_planning/static/tests/tours/sale_planning_tour.js", "/sale_project/static/tests/tours/project_tour.js", "/web/static/tests/ignore_missing_deps_stop.js"], "mappings": "AAAA;;;;;AAAA;AACA;AACA;AACA;AACA;ACJA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjnkCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9sBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzlGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChIA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtlLA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjjIA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5JA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjvLA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1DA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClzlEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACjx7CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpzCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtYA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtPA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpPA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrtjMA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvzhtHA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvDA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChl7BA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClvLA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrdA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5FA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/MA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtKA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrzGA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxFA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpnxJA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlVA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC9CA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrtJA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtCA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnlVA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5EA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1HA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrEA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxBA;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrBA;;;;;AAAA;AACA", "sourcesContent": ["// This module has for sole purpose to mark all odoo modules defined between it\n// and ignore_missing_deps_stop as ignored for missing dependency errors.\n// see the template conditional_assets_tests to understand how it's used.\nwindow.__odooIgnoreMissingDependencies = true;\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nfunction checkLoginColumn(translation) {\n    return [\n        stepUtils.showAppsMenuItem(), {\n            content: \"Settings\",\n            trigger: 'a[data-menu-xmlid=\"base.menu_administration\"]',\n            run: 'click',\n        }, {\n            content: \"Open Users & Companies\",\n            trigger: '[data-menu-xmlid=\"base.menu_users\"]',\n            run: \"click\",\n        }, {\n            content: \"Open Users\",\n            trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n            run: \"click\",\n        }, {\n            content: `Login column should be ${translation}`,\n            trigger: `[data-name=\"login\"] span:contains(\"${translation}\")`,\n            isCheck: true,\n        }\n    ]\n}\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_en_tour', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Login')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_en_tour2', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Login2')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_fr_tour', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Identifiant')\n});\n\nregistry.category(\"web_tour.tours\").add('ir_model_fields_translation_fr_tour2', {\n    test: true,\n    url: '/web',\n    steps: () => checkLoginColumn('Identifiant2')\n});\n", "/** @odoo-module **/\n\n// -----------------------------------------------------------------------------\n// Cleanup\n// -----------------------------------------------------------------------------\n\nconst cleanups = [];\n\n/**\n * Register a cleanup callback that will be executed whenever the current test\n * is done.\n *\n * - the cleanups will be executed in reverse order\n * - they will be executed even if the test fails/crashes\n *\n * @param {Function} callback\n */\nexport function registerCleanup(callback) {\n    cleanups.push(callback);\n}\n\nif (window.QUnit) {\n    QUnit.on(\"OdooAfterTestHook\", (info) => {\n        if (QUnit.config.debug) {\n            return;\n        }\n        let cleanup;\n        // note that this calls the cleanup callbacks in reverse order!\n        while ((cleanup = cleanups.pop())) {\n            try {\n                cleanup(info);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    });\n\n    // -----------------------------------------------------------------------------\n    // Check leftovers\n    // -----------------------------------------------------------------------------\n\n    /**\n     * List of elements tolerated in the body after a test. The property \"keep\"\n     * prevents the element from being removed (typically: qunit suite elements).\n     */\n    const validElements = [\n        // always in the body:\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit\", keep: true },\n        { tagName: \"DIV\", attr: \"id\", value: \"qunit-fixture\", keep: true },\n        // shouldn't be in the body after a test but are tolerated:\n        { tagName: \"SCRIPT\", attr: \"id\", value: \"\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"o_notification_manager\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip fade bs-tooltip-auto\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip fade bs-tooltip-auto show\" },\n        { tagName: \"DIV\", attr: \"class\", value: \"tooltip tooltip-field-info fade bs-tooltip-auto\" },\n        {\n            tagName: \"DIV\",\n            attr: \"class\",\n            value: \"tooltip tooltip-field-info fade bs-tooltip-auto show\",\n        },\n        { tagName: \"SPAN\", attr: \"class\", value: \"select2-hidden-accessible\" },\n\n        // Due to a Document Kanban bug (already present in 12.0)\n        { tagName: \"DIV\", attr: \"class\", value: \"ui-helper-hidden-accessible\" },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete ui-front\",\n        },\n        {\n            tagName: \"UL\",\n            attr: \"class\",\n            value: \"ui-menu ui-widget ui-widget-content ui-autocomplete dropdown-menu ui-front\", // many2ones\n        },\n    ];\n\n    /**\n     * After each test, we check that there is no leftover in the DOM.\n     *\n     * Note: this event is not QUnit standard, we added it for this specific use case.\n     * As a payload, an object with keys 'moduleName' and 'testName' is provided. It\n     * is used to indicate the test that left elements in the DOM, when it happens.\n     */\n    QUnit.on(\"OdooAfterTestHook\", function (info) {\n        if (QUnit.config.debug) {\n            return;\n        }\n        const failed = info.testReport.getStatus() === \"failed\";\n        const toRemove = [];\n        // check for leftover elements in the body\n        for (const bodyChild of document.body.children) {\n            const tolerated = validElements.find(\n                (e) => e.tagName === bodyChild.tagName && bodyChild.getAttribute(e.attr) === e.value\n            );\n            if (!failed && !tolerated) {\n                QUnit.pushFailure(\n                    `Body still contains undesirable elements:\\n${bodyChild.outerHTML}`\n                );\n            }\n            if (!tolerated || !tolerated.keep) {\n                toRemove.push(bodyChild);\n            }\n        }\n        // cleanup leftovers in #qunit-fixture\n        const qunitFixture = document.getElementById(\"qunit-fixture\");\n        if (qunitFixture.children.length) {\n            toRemove.push(...qunitFixture.children);\n        }\n        // remove unwanted elements if not in debug\n        for (const el of toRemove) {\n            el.remove();\n        }\n        document.body.classList.remove(\"modal-open\");\n    });\n}\n", "/** @odoo-module **/\n\nimport { templates } from \"@web/core/assets\";\nimport { browser } from \"@web/core/browser/browser\";\nimport { isMacOS } from \"@web/core/browser/feature_detection\";\nimport { download } from \"@web/core/network/download\";\nimport { Deferred } from \"@web/core/utils/concurrency\";\nimport { patch } from \"@web/core/utils/patch\";\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { _t } from \"@web/core/l10n/translation\";\nimport { registerCleanup } from \"./cleanup\";\n\nimport {\n    App,\n    onError,\n    onMounted,\n    onPatched,\n    onRendered,\n    onWillDestroy,\n    onWillPatch,\n    onWillRender,\n    onWillStart,\n    onWillUnmount,\n    onWillUpdateProps,\n    useComponent,\n} from \"@odoo/owl\";\n\n/**\n * @typedef {keyof HTMLElementEventMap | keyof WindowEventMap} EventType\n *\n * @typedef {Side | `${Side}-${Side}` | { x?: number, y?: number }} Position\n *\n * @typedef {\"bottom\" | \"left\" | \"right\" | \"top\"} Side\n *\n * @typedef TriggerEventOptions\n * @property {boolean} [skipVisibilityCheck=false]\n * @property {boolean} [sync=false]\n */\n\n/**\n * Patch the native Date object\n *\n * Note that it will be automatically unpatched at the end of the test\n *\n * @param {number} [year]\n * @param {number} [month]\n * @param {number} [day]\n * @param {number} [hours]\n * @param {number} [minutes]\n * @param {number} [seconds]\n * @param {number} [ms=0]\n */\nexport function patchDate(year, month, day, hours, minutes, seconds, ms = 0) {\n    var RealDate = window.Date;\n    var actualDate = new RealDate();\n\n    // By default, RealDate uses the browser offset, so we must replace it with the offset fixed in luxon.\n    var fakeDate = new RealDate(year, month, day, hours, minutes, seconds, ms);\n    if (!(luxon.Settings.defaultZone instanceof luxon.FixedOffsetZone)) {\n        throw new Error(\"luxon.Settings.defaultZone must be a FixedOffsetZone\");\n    }\n    const browserOffset = -fakeDate.getTimezoneOffset();\n    const patchedOffset = luxon.Settings.defaultZone.offset();\n    const offsetDiff = patchedOffset - browserOffset;\n    const correctedMinutes = fakeDate.getMinutes() - offsetDiff;\n    fakeDate.setMinutes(correctedMinutes);\n\n    var timeInterval = actualDate.getTime() - fakeDate.getTime();\n\n    // eslint-disable-next-line no-global-assign\n    window.Date = (function (NativeDate) {\n        function Date(Y, M, D, h, m, s, ms) {\n            var length = arguments.length;\n            let date;\n            if (arguments.length > 0) {\n                date =\n                    length == 1 && String(Y) === Y // isString(Y)\n                        ? // We explicitly pass it through parse:\n                          new NativeDate(Date.parse(Y))\n                        : // We have to manually make calls depending on argument\n                        // length here\n                        length >= 7\n                        ? new NativeDate(Y, M, D, h, m, s, ms)\n                        : length >= 6\n                        ? new NativeDate(Y, M, D, h, m, s)\n                        : length >= 5\n                        ? new NativeDate(Y, M, D, h, m)\n                        : length >= 4\n                        ? new NativeDate(Y, M, D, h)\n                        : length >= 3\n                        ? new NativeDate(Y, M, D)\n                        : length >= 2\n                        ? new NativeDate(Y, M)\n                        : length >= 1\n                        ? new NativeDate(Y)\n                        : new NativeDate();\n                // Prevent mixups with unfixed Date object\n                date.constructor = Date;\n                return date;\n            } else {\n                date = new NativeDate();\n                var time = date.getTime();\n                time -= timeInterval;\n                date.setTime(time);\n                return date;\n            }\n        }\n\n        // Copy any custom methods a 3rd party library may have added\n        for (var key in NativeDate) {\n            Date[key] = NativeDate[key];\n        }\n\n        // Copy \"native\" methods explicitly; they may be non-enumerable\n        // exception: 'now' uses fake date as reference\n        Date.now = function () {\n            var date = new NativeDate();\n            var time = date.getTime();\n            time -= timeInterval;\n            return time;\n        };\n        Date.UTC = NativeDate.UTC;\n        Date.prototype = NativeDate.prototype;\n        Date.prototype.constructor = Date;\n\n        // Upgrade Date.parse to handle simplified ISO 8601 strings\n        Date.parse = NativeDate.parse;\n        return Date;\n    })(Date);\n\n    registerCleanup(() => {\n        window.Date = RealDate;\n    });\n}\n\n/**\n * Applies a fixed time zone to luxon based on an offset to the UTC time zone.\n *\n * @param {number} offset the number of minutes ahead or behind the UTC time zone\n *                          +120 => UTC+2\n *                          -120 => UTC-2\n */\nexport function patchTimeZone(offset) {\n    patchWithCleanup(luxon.Settings, { defaultZone: luxon.FixedOffsetZone.instance(offset) });\n}\n\n/**\n *\n * @param {Object} obj object to patch\n * @param {Object} patchValue the actual patch description\n */\nexport function patchWithCleanup(obj, patchValue) {\n    const unpatch = patch(obj, patchValue);\n    registerCleanup(() => {\n        unpatch();\n    });\n}\n\n/**\n * @returns {Element}\n */\nexport function getFixture() {\n    if (!window.QUnit) {\n        return document;\n    }\n    if (QUnit.config.debug) {\n        return document.body;\n    } else {\n        return document.getElementById(\"qunit-fixture\");\n    }\n}\n\nexport async function nextTick() {\n    await new Promise((resolve) => window.requestAnimationFrame(resolve));\n    await new Promise((resolve) => setTimeout(resolve));\n}\n\nexport function makeDeferred() {\n    return new Deferred();\n}\n\nexport function findElement(el, selector) {\n    let target = el;\n    if (selector) {\n        const els = el.querySelectorAll(selector);\n        if (els.length === 0) {\n            throw new Error(`No element found (selector: ${selector})`);\n        }\n        if (els.length > 1) {\n            throw new Error(`Found ${els.length} elements, instead of 1 (selector: ${selector})`);\n        }\n        target = els[0];\n    }\n    return target;\n}\n\n//-----------------------------------------------------------------------------\n// Event init attributes mappers\n//-----------------------------------------------------------------------------\n\n/** @param {EventInit} [args] */\nconst mapBubblingEvent = (args) => ({ ...args, bubbles: true });\n\n/** @param {EventInit} [args] */\nconst mapNonBubblingEvent = (args) => ({ ...args, bubbles: false });\n\n/** @param {EventInit} [args={}] */\nconst mapBubblingPointerEvent = (args = {}) => ({\n    clientX: args.pageX,\n    clientY: args.pageY,\n    ...args,\n    bubbles: true,\n    cancelable: true,\n    view: window,\n});\n\n/** @param {EventInit} [args] */\nconst mapNonBubblingPointerEvent = (args) => ({\n    ...mapBubblingPointerEvent(args),\n    bubbles: false,\n    cancelable: false,\n});\n\n/** @param {EventInit} [args={}] */\nconst mapCancelableTouchEvent = (args = {}) => ({\n    ...args,\n    bubbles: true,\n    cancelable: true,\n    composed: true,\n    rotation: 0.0,\n    touches: args.touches ? [...args.touches.map((e) => new Touch(e))] : undefined,\n    view: window,\n    zoom: 1.0,\n});\n\n/** @param {EventInit} [args] */\nconst mapNonCancelableTouchEvent = (args) => ({\n    ...mapCancelableTouchEvent(args),\n    cancelable: false,\n});\n\n/** @param {EventInit} [args] */\nconst mapKeyboardEvent = (args) => ({\n    ...args,\n    bubbles: true,\n    cancelable: true,\n});\n\n/**\n * @template {typeof Event} T\n * @param {EventType} eventType\n * @returns {[T, (attrs: EventInit) => EventInit]}\n */\nconst getEventConstructor = (eventType) => {\n    switch (eventType) {\n        // Mouse events\n        case \"auxclick\":\n        case \"click\":\n        case \"contextmenu\":\n        case \"dblclick\":\n        case \"mousedown\":\n        case \"mouseup\":\n        case \"mousemove\":\n        case \"mouseover\":\n        case \"mouseout\": {\n            return [MouseEvent, mapBubblingPointerEvent];\n        }\n        case \"mouseenter\":\n        case \"mouseleave\": {\n            return [MouseEvent, mapNonBubblingPointerEvent];\n        }\n        // Pointer events\n        case \"pointerdown\":\n        case \"pointerup\":\n        case \"pointermove\":\n        case \"pointerover\":\n        case \"pointerout\": {\n            return [PointerEvent, mapBubblingPointerEvent];\n        }\n        case \"pointerenter\":\n        case \"pointerleave\": {\n            return [PointerEvent, mapNonBubblingPointerEvent];\n        }\n        // Focus events\n        case \"focusin\": {\n            return [FocusEvent, mapBubblingEvent];\n        }\n        case \"focus\":\n        case \"blur\": {\n            return [FocusEvent, mapNonBubblingEvent];\n        }\n        // Clipboard events\n        case \"cut\":\n        case \"copy\":\n        case \"paste\": {\n            return [ClipboardEvent, mapBubblingEvent];\n        }\n        // Keyboard events\n        case \"keydown\":\n        case \"keypress\":\n        case \"keyup\": {\n            return [KeyboardEvent, mapKeyboardEvent];\n        }\n        // Drag events\n        case \"drag\":\n        case \"dragend\":\n        case \"dragenter\":\n        case \"dragstart\":\n        case \"dragleave\":\n        case \"dragover\":\n        case \"drop\": {\n            return [DragEvent, mapBubblingEvent];\n        }\n        // Input events\n        case \"input\": {\n            return [InputEvent, mapBubblingEvent];\n        }\n        // Composition events\n        case \"compositionstart\":\n        case \"compositionend\": {\n            return [CompositionEvent, mapBubblingEvent];\n        }\n        // UI events\n        case \"scroll\": {\n            return [UIEvent, mapNonBubblingEvent];\n        }\n        // Touch events\n        case \"touchstart\":\n        case \"touchend\":\n        case \"touchmove\": {\n            return [TouchEvent, mapCancelableTouchEvent];\n        }\n        case \"touchcancel\": {\n            return [TouchEvent, mapNonCancelableTouchEvent];\n        }\n        // Default: base Event constructor\n        default: {\n            return [Event, mapBubblingEvent];\n        }\n    }\n};\n\n/**\n * @template {EventType} T\n * @param {Element} el\n * @param {string | null | undefined | false} selector\n * @param {T} eventType\n * @param {EventInit} [eventInit]\n * @param {TriggerEventOptions} [options={}]\n * @returns {GlobalEventHandlersEventMap[T] | Promise<GlobalEventHandlersEventMap[T]>}\n */\nexport function triggerEvent(el, selector, eventType, eventInit, options = {}) {\n    const errors = [];\n    const target = findElement(el, selector);\n\n    // Error handling\n    if (typeof eventType !== \"string\") {\n        errors.push(\"event type must be a string\");\n    }\n    if (!target) {\n        errors.push(\"cannot find target\");\n    } else if (!options.skipVisibilityCheck && !isVisible(target)) {\n        errors.push(\"target is not visible\");\n    }\n    if (errors.length) {\n        throw new Error(\n            `Cannot trigger event${eventType ? ` \"${eventType}\"` : \"\"}${\n                selector ? ` (with selector \"${selector}\")` : \"\"\n            }: ${errors.join(\" and \")}`\n        );\n    }\n\n    // Actual dispatch\n    const [Constructor, processParams] = getEventConstructor(eventType);\n    const event = new Constructor(eventType, processParams(eventInit));\n    target.dispatchEvent(event);\n\n    if (window.QUnit && QUnit.config.debug) {\n        const group = `%c[${event.type.toUpperCase()}]`;\n        console.groupCollapsed(group, \"color: #b52c9b\");\n        console.log(target, event);\n        console.groupEnd(group, \"color: #b52c9b\");\n    }\n\n    if (options.sync) {\n        return event;\n    } else {\n        return nextTick().then(() => event);\n    }\n}\n\n/**\n * @param {Element} el\n * @param {string | null | undefined | false} selector\n * @param {(EventType | [EventType, EventInit])[]} [eventDefs]\n * @param {TriggerEventOptions} [options={}]\n */\nexport function triggerEvents(el, selector, eventDefs, options = {}) {\n    const events = [...eventDefs].map((eventDef) => {\n        const [eventType, eventInit] = Array.isArray(eventDef) ? eventDef : [eventDef, {}];\n        return triggerEvent(el, selector, eventType, eventInit, options);\n    });\n    if (options.sync) {\n        return events;\n    } else {\n        return nextTick().then(() => events);\n    }\n}\n\n/**\n * Triggers a scroll event on the given target\n *\n * If the target cannot be scrolled or an axis has reached\n * the end of the scrollable area, the event can be transmitted\n * to its nearest parent until it can be triggered\n *\n * @param {Element} target target of the scroll event\n * @param {Object} coordinates\n * @param {number} coordinates.left coordinates to scroll horizontally\n * @param {number} coordinates.top coordinates to scroll vertically\n * @param {boolean} canPropagate states if the scroll can propagate to a scrollable parent\n */\nexport async function triggerScroll(\n    target,\n    coordinates = { left: null, top: null },\n    canPropagate = true\n) {\n    const isScrollable =\n        (target.scrollHeight > target.clientHeight && target.clientHeight > 0) ||\n        (target.scrollWidth > target.clientWidth && target.clientWidth > 0);\n    if (!isScrollable && !canPropagate) {\n        return;\n    }\n    if (isScrollable) {\n        const canScrollFrom = {\n            left:\n                coordinates.left > target.scrollLeft\n                    ? target.scrollLeft + target.clientWidth < target.scrollWidth\n                    : target.scrollLeft > 0,\n            top:\n                coordinates.top > target.scrollTop\n                    ? target.scrollTop + target.clientHeight < target.scrollHeight\n                    : target.scrollTop > 0,\n        };\n        const scrollCoordinates = {};\n        Object.entries(coordinates).forEach(([key, value]) => {\n            if (value !== null && canScrollFrom[key]) {\n                scrollCoordinates[key] = value;\n                delete coordinates[key];\n            }\n        });\n        target.scrollTo(scrollCoordinates);\n        await triggerEvent(target, null, \"scroll\");\n        if (!canPropagate || !Object.entries(coordinates).length) {\n            return;\n        }\n    }\n    target.parentElement\n        ? triggerScroll(target.parentElement, coordinates)\n        : triggerEvent(window, null, \"scroll\");\n    await nextTick();\n}\n\nexport function click(\n    el,\n    selector,\n    { mouseEventInit = {}, skipDisabledCheck = false, skipVisibilityCheck = false } = {}\n) {\n    if (!skipDisabledCheck && el.disabled) {\n        throw new Error(\"Can't click on a disabled button\");\n    }\n    return triggerEvents(\n        el,\n        selector,\n        [\"pointerdown\", \"mousedown\", \"focus\", \"pointerup\", \"mouseup\", [\"click\", mouseEventInit]],\n        { skipVisibilityCheck }\n    );\n}\n\nexport function clickCreate(htmlElement) {\n    if (\n        htmlElement.querySelectorAll(\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_form_button_create\"\n        ).length\n    ) {\n        return click(\n            htmlElement,\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_form_button_create\"\n        );\n    } else if (\n        htmlElement.querySelectorAll(\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_list_button_create\"\n        ).length\n    ) {\n        return click(\n            htmlElement,\n            \".o_control_panel_main_buttons .d-none.d-xl-inline-flex .o_list_button_create\"\n        );\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport function clickEdit(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_list_button_edit\").length) {\n        return click(htmlElement, \".o_list_button_edit\");\n    } else {\n        throw new Error(\"No edit button found to be clicked.\");\n    }\n}\n\nexport async function clickSave(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_save\").length) {\n        return click(htmlElement, \".o_form_button_save\");\n    }\n    const listSaveButtons = htmlElement.querySelectorAll(\".o_list_button_save\");\n    if (listSaveButtons.length) {\n        return listSaveButtons.length >= 2 ? click(listSaveButtons[1]) : click(listSaveButtons[0]);\n    } else {\n        throw new Error(\"No save button found to be clicked.\");\n    }\n}\n\nexport async function clickDiscard(htmlElement) {\n    if (htmlElement.querySelectorAll(\".o_form_status_indicator\").length) {\n        await mouseEnter(htmlElement, \".o_form_status_indicator\");\n    }\n    if (htmlElement.querySelectorAll(\".o_form_button_cancel\").length) {\n        return click(htmlElement, \".o_form_button_cancel\");\n    } else if ($(htmlElement).find(\".o_list_button_discard:visible\").length) {\n        return click($(htmlElement).find(\".o_list_button_discard:visible\").get(0));\n    } else {\n        throw new Error(\"No discard button found to be clicked.\");\n    }\n}\n\n/**\n * Trigger pointerenter and mouseenter events on the given target. If no\n * coordinates are given, the event is located by default\n * in the middle of the target to simplify the test process\n *\n * @param {Element} el\n * @param {string} selector\n * @param {Object} coordinates position of the mouseenter event\n */\nexport async function mouseEnter(el, selector, coordinates) {\n    const target = el.querySelector(selector) || el;\n    const atPos = coordinates || {\n        clientX: target.getBoundingClientRect().left + target.getBoundingClientRect().width / 2,\n        clientY: target.getBoundingClientRect().top + target.getBoundingClientRect().height / 2,\n    };\n    return triggerEvents(target, null, [\"pointerenter\", \"mouseenter\"], atPos);\n}\n\n/**\n * Trigger pointerleave and mouseleave events on the given target.\n *\n * @param {Element} el\n * @param {string} selector\n */\nexport async function mouseLeave(el, selector) {\n    const target = el.querySelector(selector) || el;\n    return triggerEvents(target, null, [\"pointerleave\", \"mouseleave\"]);\n}\n\nexport async function editInput(el, selector, value) {\n    const input = findElement(el, selector);\n    if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement)) {\n        throw new Error(\"Only 'input' and 'textarea' elements can be edited with 'editInput'.\");\n    }\n    if (\n        ![\"text\", \"textarea\", \"email\", \"search\", \"color\", \"number\", \"file\", \"tel\"].includes(\n            input.type\n        )\n    ) {\n        throw new Error(`Type \"${input.type}\" not supported by 'editInput'.`);\n    }\n\n    const eventOpts = {};\n    if (input.type === \"file\") {\n        const files = Array.isArray(value) ? value : [value];\n        const dataTransfer = new DataTransfer();\n        for (const file of files) {\n            if (!(file instanceof File)) {\n                throw new Error(`File input value should be one or several File objects.`);\n            }\n            dataTransfer.items.add(file);\n        }\n        input.files = dataTransfer.files;\n        eventOpts.skipVisibilityCheck = true;\n    } else {\n        input.value = value;\n    }\n\n    await triggerEvents(input, null, [\"input\", \"change\"], eventOpts);\n\n    if (input.type === \"file\") {\n        // Need to wait for the file to be loaded by the input\n        await nextTick();\n        await nextTick();\n    }\n}\n\nexport function editSelect(el, selector, value) {\n    const select = findElement(el, selector);\n    if (select.tagName !== \"SELECT\") {\n        throw new Error(\"Only select tag can be edited with selectInput.\");\n    }\n    select.value = value;\n    return triggerEvent(select, null, \"change\");\n}\n\nexport async function editSelectMenu(el, selector, value) {\n    const dropdown = el.querySelector(selector);\n    await click(dropdown.querySelector(\".dropdown-toggle\"));\n    for (const item of Array.from(dropdown.querySelectorAll(\".dropdown-item\"))) {\n        if (item.textContent === value) {\n            return click(item);\n        }\n    }\n}\n\n/**\n * Triggers an hotkey properly disregarding the operating system.\n *\n * @param {string} hotkey\n * @param {boolean} addOverlayModParts\n * @param {KeyboardEventInit} eventAttrs\n */\nexport async function triggerHotkey(hotkey, addOverlayModParts = false, eventAttrs = {}) {\n    eventAttrs.key = hotkey.split(\"+\").pop();\n\n    if (/shift/i.test(hotkey)) {\n        eventAttrs.shiftKey = true;\n    }\n\n    if (/control/i.test(hotkey)) {\n        if (isMacOS()) {\n            eventAttrs.metaKey = true;\n        } else {\n            eventAttrs.ctrlKey = true;\n        }\n    }\n\n    if (/alt/i.test(hotkey) || addOverlayModParts) {\n        if (isMacOS()) {\n            eventAttrs.ctrlKey = true;\n        } else {\n            eventAttrs.altKey = true;\n        }\n    }\n\n    if (!(\"bubbles\" in eventAttrs)) {\n        eventAttrs.bubbles = true;\n    }\n\n    const [keydownEvent, keyupEvent] = await triggerEvents(\n        document.activeElement,\n        null,\n        [\n            [\"keydown\", eventAttrs],\n            [\"keyup\", eventAttrs],\n        ],\n        { skipVisibilityCheck: true }\n    );\n\n    return { keydownEvent, keyupEvent };\n}\n\nexport function mockDownload(cb) {\n    patchWithCleanup(download, { _download: cb });\n}\n\nexport const hushConsole = Object.create(null);\nfor (const propName of Object.keys(window.console)) {\n    hushConsole[propName] = () => {};\n}\n\nexport function mockSendBeacon(mock) {\n    patchWithCleanup(navigator, {\n        sendBeacon: (url, blob) => {\n            return mock(url, blob) !== false;\n        },\n    });\n}\n\nexport function mockTimeout() {\n    const timeouts = new Map();\n    let currentTime = 0;\n    let id = 1;\n    patchWithCleanup(browser, {\n        setTimeout(fn, delay = 0) {\n            timeouts.set(id, { fn, scheduledFor: delay + currentTime, id });\n            return id++;\n        },\n        clearTimeout(id) {\n            timeouts.delete(id);\n        },\n    });\n    return {\n        execRegisteredTimeouts() {\n            for (const { fn } of timeouts.values()) {\n                fn();\n            }\n            timeouts.clear();\n        },\n        async advanceTime(duration) {\n            // wait here so all microtasktick scheduled in this frame can be\n            // executed and possibly register their own timeout\n            await nextTick();\n            currentTime += duration;\n            for (const { fn, scheduledFor, id } of timeouts.values()) {\n                if (scheduledFor <= currentTime) {\n                    fn();\n                    timeouts.delete(id);\n                }\n            }\n            // wait here to make sure owl can update the UI\n            await nextTick();\n        },\n    };\n}\n\nexport function mockAnimationFrame() {\n    const callbacks = new Map();\n    let currentTime = 0;\n    let id = 1;\n    patchWithCleanup(browser, {\n        requestAnimationFrame(fn) {\n            callbacks.set(id, { fn, scheduledFor: 16 + currentTime, id });\n            return id++;\n        },\n        cancelAnimationFrame(id) {\n            callbacks.delete(id);\n        },\n        performance: { now: () => currentTime },\n    });\n    return {\n        execRegisteredAnimationFrames() {\n            for (const { fn } of callbacks.values()) {\n                fn(currentTime);\n            }\n            callbacks.clear();\n        },\n        async advanceFrame(count = 1) {\n            // wait here so all microtasktick scheduled in this frame can be\n            // executed and possibly register their own timeout\n            await nextTick();\n            currentTime += 16 * count;\n            for (const { fn, scheduledFor, id } of callbacks.values()) {\n                if (scheduledFor <= currentTime) {\n                    fn(currentTime);\n                    callbacks.delete(id);\n                }\n            }\n            // wait here to make sure owl can update the UI\n            await nextTick();\n        },\n    };\n}\n\nexport async function mount(Comp, target, config = {}) {\n    let { props, env } = config;\n    env = env || {};\n    const configuration = {\n        env,\n        templates,\n        test: true,\n        props,\n    };\n    if (env.services && \"localization\" in env.services) {\n        configuration.translateFn = _t;\n    }\n    const app = new App(Comp, configuration);\n    registerCleanup(() => app.destroy());\n    return app.mount(target);\n}\n\nexport function destroy(comp) {\n    comp.__owl__.app.destroy();\n}\n\nexport function findChildren(comp, predicate = (e) => e) {\n    const queue = [];\n    [].unshift.apply(queue, Object.values(comp.__owl__.children));\n\n    while (queue.length > 0) {\n        const curNode = queue.pop();\n        if (predicate(curNode)) {\n            return curNode;\n        }\n        [].unshift.apply(queue, Object.values(curNode.component.__owl__.children));\n    }\n}\n\n// partial replacement of t-ref on component\nexport function useChild() {\n    const node = useComponent().__owl__;\n    const setChild = () => {\n        const componentNode = Object.values(node.children)[0];\n        node.component.child = componentNode.component;\n    };\n    onMounted(setChild);\n    onPatched(setChild);\n}\n\nexport function useLogLifeCycle(logFn, name = \"\") {\n    const component = useComponent();\n    let loggedName = `${component.constructor.name}`;\n    if (name) {\n        loggedName = `${component.constructor.name} ${name}`;\n    }\n    onError(() => {\n        logFn(`onError ${loggedName}`);\n    });\n    onMounted(() => {\n        logFn(`onMounted ${loggedName}`);\n    });\n    onPatched(() => {\n        logFn(`onPatched ${loggedName}`);\n    });\n    onRendered(() => {\n        logFn(`onRendered ${loggedName}`);\n    });\n    onWillDestroy(() => {\n        logFn(`onWillDestroy ${loggedName}`);\n    });\n    onWillPatch(() => {\n        logFn(`onWillPatch ${loggedName}`);\n    });\n    onWillRender(() => {\n        logFn(`onWillRender ${loggedName}`);\n    });\n    onWillStart(() => {\n        logFn(`onWillStart ${loggedName}`);\n    });\n    onWillUnmount(() => {\n        logFn(`onWillUnmount ${loggedName}`);\n    });\n    onWillUpdateProps(() => {\n        logFn(`onWillUpdateProps ${loggedName}`);\n    });\n}\n\n/**\n * Returns the list of nodes containing n2 (included) that do not contain n1.\n *\n * @param {Node} n1\n * @param {Node} n2\n * @returns {Node[]}\n */\nfunction getDifferentParents(n1, n2) {\n    const parents = [n2];\n    while (parents[0].parentNode) {\n        const parent = parents[0].parentNode;\n        if (parent.contains(n1)) {\n            break;\n        }\n        parents.unshift(parent);\n    }\n    return parents;\n}\n\n/**\n * Helper performing a drag and drop sequence.\n *\n * - 'from' is used to determine the element on which the drag will start;\n * - 'target' will determine the element on which the first one will be dropped.\n *\n * The first element will be dragged by its center, and will be dropped on the\n * bottom-right inner pixel of the target element. This behavior covers both\n * cases of appending the first element to the end of a list (toSelector =\n * target list) or moving it at the position of another element, effectively\n * placing the first element before the second (toSelector = other element).\n *\n * A position can be given to drop the first element above, below, or on the\n * side of the second (default is inside, as specified above).\n *\n * Note that only the last event is awaited, since all the others are\n * considered to be synchronous.\n *\n * @param {Element | string} from\n * @param {Element | string} to\n * @param {Position} [position]\n */\nexport async function dragAndDrop(from, to, position) {\n    const { drop } = await drag(from);\n    await drop(to, position);\n}\n\n/**\n * Helper performing a drag.\n *\n * - the 'from' selector is used to determine the element on which the drag will\n *  start;\n * - the 'target' selector will determine the element on which the dragged element will be\n * moved.\n *\n * Returns a drop function\n *\n * @param {Element | string} from\n */\nexport async function drag(from, pointerType = \"mouse\") {\n    const assertIsDragging = (fn, endDrag) => {\n        return {\n            async [fn.name](...args) {\n                if (dragEndReason) {\n                    throw new Error(\n                        `Cannot execute drag helper '${fn.name}': drag sequence has been ended by '${dragEndReason}'.`\n                    );\n                }\n                await fn(...args);\n                if (endDrag) {\n                    dragEndReason = fn.name;\n                }\n            },\n        }[fn.name];\n    };\n\n    const cancel = assertIsDragging(async function cancel() {\n        await triggerEvent(window, null, \"keydown\", { key: \"Escape\" });\n    }, true);\n\n    /**\n     * @param {Element | string} [to]\n     * @param {Position} [position]\n     */\n    const drop = assertIsDragging(async function drop(to, position) {\n        if (to) {\n            await moveTo(to, position);\n        }\n        await triggerEvent(target || source, null, \"pointerup\", targetPosition);\n    }, true);\n\n    /**\n     * @param {Element | string} selector\n     */\n    const getEl = (selector) =>\n        selector instanceof Element ? selector : fixture.querySelector(selector);\n\n    /**\n     * @param {Position} [position]\n     */\n    const getTargetPosition = (position) => {\n        const tRect = target.getBoundingClientRect();\n        const tPos = {\n            clientX: Math.floor(tRect.x),\n            clientY: Math.floor(tRect.y),\n        };\n        if (position && typeof position === \"object\") {\n            // x and y coordinates start from the element's initial coordinates\n            tPos.clientX += position.x || 0;\n            tPos.clientY += position.y || 0;\n        } else {\n            const positions = typeof position === \"string\" ? position.split(\"-\") : [];\n\n            // X position\n            if (positions.includes(\"left\")) {\n                tPos.clientX -= 1;\n            } else if (positions.includes(\"right\")) {\n                tPos.clientX += Math.ceil(tRect.width) + 1;\n            } else {\n                tPos.clientX += Math.floor(tRect.width / 2);\n            }\n\n            // Y position\n            if (positions.includes(\"top\")) {\n                tPos.clientY -= 1;\n            } else if (positions.includes(\"bottom\")) {\n                tPos.clientY += Math.ceil(tRect.height) + 1;\n            } else {\n                tPos.clientY += Math.floor(tRect.height / 2);\n            }\n        }\n        return tPos;\n    };\n\n    /**\n     * @param {Element | string} [to]\n     * @param {Position} [position]\n     */\n    const moveTo = assertIsDragging(async function moveTo(to, position) {\n        target = getEl(to);\n        if (!target) {\n            return;\n        }\n\n        // Recompute target position\n        targetPosition = getTargetPosition(position);\n\n        // Move, enter and drop the element on the target\n        await triggerEvent(source, null, \"pointermove\", targetPosition);\n\n        // \"pointerenter\" is fired on every parent of `target` that do not contain\n        // `from` (typically: different parent lists).\n        for (const parent of getDifferentParents(source, target)) {\n            triggerEvent(parent, null, \"pointerenter\", targetPosition);\n        }\n        await nextTick();\n\n        return dragHelpers;\n    }, false);\n\n    const dragHelpers = { cancel, drop, moveTo };\n    const fixture = getFixture();\n\n    const source = getEl(from instanceof Element ? from : fixture.querySelector(from));\n    const sourceRect = source.getBoundingClientRect();\n\n    let dragEndReason = null;\n    let target;\n    let targetPosition;\n\n    // Pointer down on main target\n    await triggerEvent(source, null, \"pointerdown\", {\n        pointerType,\n        clientX: sourceRect.x + sourceRect.width / 2,\n        clientY: sourceRect.y + sourceRect.height / 2,\n    });\n\n    return dragHelpers;\n}\n\nexport async function clickDropdown(target, fieldName) {\n    const dropdownInput = target.querySelector(`[name='${fieldName}'] .dropdown input`);\n    dropdownInput.focus();\n    await nextTick();\n    await click(dropdownInput);\n}\n\nexport async function clickOpenedDropdownItem(target, fieldName, itemContent) {\n    const dropdowns = target.querySelectorAll(`[name='${fieldName}'] .dropdown .dropdown-menu`);\n    if (dropdowns.length === 0) {\n        throw new Error(`No dropdown found for field ${fieldName}`);\n    } else if (dropdowns.length > 1) {\n        throw new Error(`Found ${dropdowns.length} dropdowns for field ${fieldName}`);\n    }\n    const dropdownItems = dropdowns[0].querySelectorAll(\"li\");\n    const indexToClick = Array.from(dropdownItems)\n        .map((html) => html.textContent)\n        .indexOf(itemContent);\n    if (indexToClick === -1) {\n        throw new Error(`The element '${itemContent}' does not exist in the dropdown`);\n    }\n    await click(dropdownItems[indexToClick]);\n}\n\nexport async function selectDropdownItem(target, fieldName, itemContent) {\n    await clickDropdown(target, fieldName);\n    await clickOpenedDropdownItem(target, fieldName, itemContent);\n}\n\nexport function getNodesTextContent(nodes) {\n    return Array.from(nodes).map((n) => n.textContent);\n}\n\n/**\n * Click to open the dropdown on a many2one\n */\nexport async function clickOpenM2ODropdown(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n\n    await click(matches[0]);\n    return matches[0];\n}\n\n/**\n * Click on the active (highlighted) selection in a m2o dropdown.\n */\n// TO FIX\nexport async function clickM2OHighlightedItem(el, fieldName, selector) {\n    const m2oSelector = `${selector || \"\"} .o_field_many2one[name=${fieldName}] input`;\n    // const $dropdown = $(m2oSelector).autocomplete('widget');\n    const matches = el.querySelectorAll(m2oSelector);\n    if (matches.length !== 1) {\n        throw new Error(\n            `cannot open m2o: selector ${selector} has been found ${matches.length} instead of 1`\n        );\n    }\n    // clicking on an li (no matter which one), will select the focussed one\n    return click(matches[0].parentElement.querySelector(\"li\"));\n}\n\n// X2Many\nexport async function addRow(target, selector) {\n    await click(target.querySelector(`${selector ? selector : \"\"} .o_field_x2many_list_row_add a`));\n}\n\nexport async function removeRow(target, index) {\n    await click(target.querySelectorAll(\".o_list_record_remove\")[index]);\n}\n", "/* @odoo-module */\n\nimport { isVisible } from \"@web/core/utils/ui\";\nimport { registerCleanup } from \"@web/../tests/helpers/cleanup\";\nimport {\n    click as webClick,\n    getFixture,\n    makeDeferred,\n    triggerEvents as webTriggerEvents,\n} from \"@web/../tests/helpers/utils\";\n\n/**\n * Create a file object, which can be used for drag-and-drop.\n *\n * @param {Object} data\n * @param {string} data.name\n * @param {string} data.content\n * @param {string} data.contentType\n * @returns {Promise<Object>} resolved with file created\n */\nexport function createFile(data) {\n    // Note: this is only supported by Chrome, and does not work in Incognito mode\n    return new Promise(function (resolve, reject) {\n        var requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        if (!requestFileSystem) {\n            throw new Error(\"FileSystem API is not supported\");\n        }\n        requestFileSystem(window.TEMPORARY, 1024 * 1024, function (fileSystem) {\n            fileSystem.root.getFile(data.name, { create: true }, function (fileEntry) {\n                fileEntry.createWriter(function (fileWriter) {\n                    fileWriter.onwriteend = function (e) {\n                        fileSystem.root.getFile(data.name, {}, function (fileEntry) {\n                            fileEntry.file(function (file) {\n                                resolve(file);\n                            });\n                        });\n                    };\n                    fileWriter.write(new Blob([data.content], { type: data.contentType }));\n                });\n            });\n        });\n    });\n}\n\n/**\n * Create a fake object 'dataTransfer', linked to some files,\n * which is passed to drag and drop events.\n *\n * @param {Object[]} files\n * @returns {Object}\n */\nfunction createFakeDataTransfer(files) {\n    return {\n        dropEffect: \"all\",\n        effectAllowed: \"all\",\n        files,\n        items: [],\n        types: [\"Files\"],\n    };\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then clicks on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.shiftKey]\n */\nexport async function click(selector, options = {}) {\n    const { shiftKey } = options;\n    delete options.shiftKey;\n    await contains(selector, { click: { shiftKey }, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragenters `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragenterFiles(selector, files, options) {\n    await contains(selector, { dragenterFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then dragovers `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dragoverFiles(selector, files, options) {\n    await contains(selector, { dragoverFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then drops `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function dropFiles(selector, files, options) {\n    await contains(selector, { dropFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inputs `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function inputFiles(selector, files, options) {\n    await contains(selector, { inputFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then pastes `files` on it.\n *\n * @param {string} selector\n * @param {Object[]} files\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function pasteFiles(selector, files, options) {\n    await contains(selector, { pasteFiles: files, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then focuses on it.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function focus(selector, options) {\n    await contains(selector, { setFocus: true, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then inserts the given `content`.\n *\n * @param {string} selector\n * @param {string} content\n * @param {ContainsOptions} [options] forwarded to `contains`\n * @param {boolean} [options.replace=false]\n */\nexport async function insertText(selector, content, options = {}) {\n    const { replace = false } = options;\n    delete options.replace;\n    await contains(selector, { ...options, insertText: { content, replace } });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then sets its `scrollTop` to the given value.\n *\n * @param {string} selector\n * @param {number|\"bottom\"} scrollTop\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function scroll(selector, scrollTop, options) {\n    await contains(selector, { setScroll: scrollTop, ...options });\n}\n\n/**\n * Waits until exactly one element matching the given `selector` is present in\n * `options.target` and then triggers `event` on it.\n *\n * @param {string} selector\n * @param {(import(\"@web/../tests/helpers/utils\").EventType|[import(\"@web/../tests/helpers/utils\").EventType, EventInit])[]} events\n * @param {ContainsOptions} [options] forwarded to `contains`\n */\nexport async function triggerEvents(selector, events, options) {\n    await contains(selector, { triggerEvents: events, ...options });\n}\n\nfunction log(ok, message) {\n    if (window.QUnit) {\n        QUnit.assert.ok(ok, message);\n    } else {\n        if (ok) {\n            console.log(message);\n        } else {\n            console.error(message);\n        }\n    }\n}\n\nlet hasUsedContainsPositively = false;\nif (window.QUnit) {\n    QUnit.testStart(() => (hasUsedContainsPositively = false));\n}\n/**\n * @typedef {[string, ContainsOptions]} ContainsTuple tuple representing params of the contains\n *  function, where the first element is the selector, and the second element is the options param.\n * @typedef {Object} ContainsOptions\n * @property {ContainsTuple} [after] if provided, the found element(s) must be after the element\n *  matched by this param.\n * @property {ContainsTuple} [before] if provided, the found element(s) must be before the element\n *  matched by this param.\n * @property {Object} [click] if provided, clicks on the first found element\n * @property {ContainsTuple|ContainsTuple[]} [contains] if provided, the found element(s) must\n *  contain the provided sub-elements.\n * @property {number} [count=1] numbers of elements to be found to declare the contains check\n *  as successful. Elements are counted after applying all other filters.\n * @property {Object[]} [dragenterFiles] if provided, dragenters the given files on the found element\n * @property {Object[]} [dragoverFiles] if provided, dragovers the given files on the found element\n * @property {Object[]} [dropFiles] if provided, drops the given files on the found element\n * @property {Object[]} [inputFiles] if provided, inputs the given files on the found element\n * @property {{content:string, replace:boolean}} [insertText] if provided, adds to (or replace) the\n *  value of the first found element by the given content.\n * @property {ContainsTuple} [parent] if provided, the found element(s) must have as\n *  parent the node matching the parent parameter.\n * @property {Object[]} [pasteFiles] if provided, pastes the given files on the found element\n * @property {number|\"bottom\"} [scroll] if provided, the scrollTop of the found element(s)\n *  must match.\n *  Note: when using one of the scrollTop options, it is advised to ensure the height is not going\n *  to change soon, by checking with a preceding contains that all the expected elements are in DOM.\n * @property {boolean} [setFocus] if provided, focuses the first found element.\n * @property {boolean} [shadowRoot] if provided, targets the shadowRoot of the found elements.\n * @property {number|\"bottom\"} [setScroll] if provided, sets the scrollTop on the first found\n *  element.\n * @property {HTMLElement} [target=getFixture()]\n * @property {string[]} [triggerEvents] if provided, triggers the given events on the found element\n * @property {string} [text] if provided, the textContent of the found element(s) or one of their\n *  descendants must match. Use `textContent` option for a match on the found element(s) only.\n * @property {string} [textContent] if provided, the textContent of the found element(s) must match.\n *  Prefer `text` option for a match on the found element(s) or any of their descendants, usually\n *  allowing for a simpler and less specific selector.\n * @property {string} [value] if provided, the input value of the found element(s) must match.\n *  Note: value changes are not observed directly, another mutation must happen to catch them.\n * @property {boolean} [visible] if provided, the found element(s) must be (in)visible\n */\nclass Contains {\n    /**\n     * @param {string} selector\n     * @param {ContainsOptions} [options={}]\n     */\n    constructor(selector, options = {}) {\n        this.selector = selector;\n        this.options = options;\n        this.options.count ??= 1;\n        this.options.targetParam = this.options.target;\n        this.options.target ??= getFixture();\n        let selectorMessage = `${this.options.count} of \"${this.selector}\"`;\n        if (this.options.visible !== undefined) {\n            selectorMessage = `${selectorMessage} ${\n                this.options.visible ? \"visible\" : \"invisible\"\n            }`;\n        }\n        if (this.options.targetParam) {\n            selectorMessage = `${selectorMessage} inside a specific target`;\n        }\n        if (this.options.parent) {\n            selectorMessage = `${selectorMessage} inside a specific parent`;\n        }\n        if (this.options.contains) {\n            selectorMessage = `${selectorMessage} with a specified sub-contains`;\n        }\n        if (this.options.text !== undefined) {\n            selectorMessage = `${selectorMessage} with text \"${this.options.text}\"`;\n        }\n        if (this.options.textContent !== undefined) {\n            selectorMessage = `${selectorMessage} with textContent \"${this.options.textContent}\"`;\n        }\n        if (this.options.value !== undefined) {\n            selectorMessage = `${selectorMessage} with value \"${this.options.value}\"`;\n        }\n        if (this.options.scroll !== undefined) {\n            selectorMessage = `${selectorMessage} with scroll \"${this.options.scroll}\"`;\n        }\n        if (this.options.after !== undefined) {\n            selectorMessage = `${selectorMessage} after a specified element`;\n        }\n        if (this.options.before !== undefined) {\n            selectorMessage = `${selectorMessage} before a specified element`;\n        }\n        this.selectorMessage = selectorMessage;\n        if (this.options.contains && !Array.isArray(this.options.contains[0])) {\n            this.options.contains = [this.options.contains];\n        }\n        if (this.options.count) {\n            hasUsedContainsPositively = true;\n        } else if (!hasUsedContainsPositively) {\n            throw new Error(\n                `Starting a test with \"contains\" of count 0 for selector \"${this.selector}\" is useless because it might immediately resolve. Start the test by checking that an expected element actually exists.`\n            );\n        }\n        /** @type {string} */\n        this.successMessage = undefined;\n        /** @type {function} */\n        this.executeError = undefined;\n    }\n\n    /**\n     * Starts this contains check, either immediately resolving if there is a\n     * match, or registering appropriate listeners and waiting until there is a\n     * match or a timeout (resolving or rejecting respectively).\n     *\n     * Success or failure messages will be logged with QUnit as well.\n     *\n     * @returns {Promise}\n     */\n    run() {\n        this.done = false;\n        this.def = makeDeferred();\n        this.scrollListeners = new Set();\n        this.onScroll = () => this.runOnce(\"after scroll\");\n        if (!this.runOnce(\"immediately\")) {\n            this.timer = setTimeout(\n                () => this.runOnce(\"Timeout of 5 seconds\", { crashOnFail: true }),\n                5000\n            );\n            this.observer = new MutationObserver((mutations) => {\n                try {\n                    this.runOnce(\"after mutations\");\n                } catch (e) {\n                    this.def.reject(e); // prevents infinite loop in case of programming error\n                }\n            });\n            this.observer.observe(this.options.target, {\n                attributes: true,\n                childList: true,\n                subtree: true,\n            });\n            registerCleanup(() => {\n                if (!this.done) {\n                    this.runOnce(\"Test ended\", { crashOnFail: true });\n                }\n            });\n        }\n        return this.def;\n    }\n\n    /**\n     * Runs this contains check once, immediately returning the result (or\n     * undefined), and possibly resolving or rejecting the main promise\n     * (and printing QUnit log) depending on options.\n     * If undefined is returned it means the check was not successful.\n     *\n     * @param {string} whenMessage\n     * @param {Object} [options={}]\n     * @param {boolean} [options.crashOnFail=false]\n     * @param {boolean} [options.executeOnSuccess=true]\n     * @returns {HTMLElement[]|undefined}\n     */\n    runOnce(whenMessage, { crashOnFail = false, executeOnSuccess = true } = {}) {\n        const res = this.select();\n        if (res?.length === this.options.count || crashOnFail) {\n            // clean before doing anything else to avoid infinite loop due to side effects\n            this.observer?.disconnect();\n            clearTimeout(this.timer);\n            for (const el of this.scrollListeners ?? []) {\n                el.removeEventListener(\"scroll\", this.onScroll);\n            }\n            this.done = true;\n        }\n        if (res?.length === this.options.count) {\n            this.successMessage = `Found ${this.selectorMessage} (${whenMessage})`;\n            if (executeOnSuccess) {\n                this.executeAction(res[0]);\n            }\n            return res;\n        } else {\n            this.executeError = () => {\n                let message = `Failed to find ${this.selectorMessage} (${whenMessage}).`;\n                message = res\n                    ? `${message} Found ${res.length} instead.`\n                    : `${message} Parent not found.`;\n                if (this.parentContains) {\n                    if (this.parentContains.successMessage) {\n                        log(true, this.parentContains.successMessage);\n                    } else {\n                        this.parentContains.executeError();\n                    }\n                }\n                log(false, message);\n                this.def?.reject(new Error(message));\n                for (const childContains of this.childrenContains || []) {\n                    if (childContains.successMessage) {\n                        log(true, childContains.successMessage);\n                    } else {\n                        childContains.executeError();\n                    }\n                }\n            };\n            if (crashOnFail) {\n                this.executeError();\n            }\n        }\n    }\n\n    /**\n     * Executes the action(s) given to this constructor on the found element,\n     * prints the success messages, and resolves the main deferred.\n\n     * @param {HTMLElement} el\n     */\n    executeAction(el) {\n        let message = this.successMessage;\n        if (this.options.click) {\n            message = `${message} and clicked it`;\n            webClick(el, undefined, {\n                mouseEventInit: this.options.click,\n                skipDisabledCheck: true,\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.options.dragenterFiles) {\n            message = `${message} and dragentered ${this.options.dragenterFiles.length} file(s)`;\n            const ev = new Event(\"dragenter\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragenterFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dragoverFiles) {\n            message = `${message} and dragovered ${this.options.dragoverFiles.length} file(s)`;\n            const ev = new Event(\"dragover\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dragoverFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.dropFiles) {\n            message = `${message} and dropped ${this.options.dropFiles.length} file(s)`;\n            const ev = new Event(\"drop\", { bubbles: true });\n            Object.defineProperty(ev, \"dataTransfer\", {\n                value: createFakeDataTransfer(this.options.dropFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.inputFiles) {\n            message = `${message} and inputted ${this.options.inputFiles.length} file(s)`;\n            // could not use _createFakeDataTransfer as el.files assignation will only\n            // work with a real FileList object.\n            const dataTransfer = new window.DataTransfer();\n            for (const file of this.options.inputFiles) {\n                dataTransfer.items.add(file);\n            }\n            el.files = dataTransfer.files;\n            /**\n             * Changing files programatically is not supposed to trigger the event but\n             * it does in Chrome versions before 73 (which is on runbot), so in that\n             * case there is no need to make a manual dispatch, because it would lead to\n             * the files being added twice.\n             */\n            const versionRaw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n            const chromeVersion = versionRaw ? parseInt(versionRaw[2], 10) : false;\n            if (!chromeVersion || chromeVersion >= 73) {\n                el.dispatchEvent(new Event(\"change\"));\n            }\n        }\n        if (this.options.insertText !== undefined) {\n            message = `${message} and inserted text \"${this.options.insertText.content}\" (replace: ${this.options.insertText.replace})`;\n            el.focus();\n            if (this.options.insertText.replace) {\n                el.value = \"\";\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: \"Backspace\" }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n            }\n            for (const char of this.options.insertText.content) {\n                el.value += char;\n                el.dispatchEvent(new window.KeyboardEvent(\"keydown\", { key: char }));\n                el.dispatchEvent(new window.KeyboardEvent(\"keyup\", { key: char }));\n                el.dispatchEvent(new window.InputEvent(\"input\"));\n            }\n            el.dispatchEvent(new window.InputEvent(\"change\"));\n        }\n        if (this.options.pasteFiles) {\n            message = `${message} and pasted ${this.options.pasteFiles.length} file(s)`;\n            const ev = new Event(\"paste\", { bubbles: true });\n            Object.defineProperty(ev, \"clipboardData\", {\n                value: createFakeDataTransfer(this.options.pasteFiles),\n            });\n            el.dispatchEvent(ev);\n        }\n        if (this.options.setFocus) {\n            message = `${message} and focused it`;\n            el.focus();\n        }\n        if (this.options.setScroll !== undefined) {\n            message = `${message} and set scroll to \"${this.options.setScroll}\"`;\n            el.scrollTop =\n                this.options.setScroll === \"bottom\" ? el.scrollHeight : this.options.setScroll;\n        }\n        if (this.options.triggerEvents) {\n            message = `${message} and triggered \"${this.options.triggerEvents.join(\", \")}\" events`;\n            webTriggerEvents(el, null, this.options.triggerEvents, {\n                skipVisibilityCheck: true,\n            });\n        }\n        if (this.parentContains) {\n            log(true, this.parentContains.successMessage);\n        }\n        log(true, message);\n        for (const childContains of this.childrenContains) {\n            log(true, childContains.successMessage);\n        }\n        this.def?.resolve();\n    }\n\n    /**\n     * Returns the found element(s) according to this constructor setup.\n     * If undefined is returned it means the parent cannot be found\n     *\n     * @returns {HTMLElement[]|undefined}\n     */\n    select() {\n        const target = this.selectParent();\n        if (!target) {\n            return;\n        }\n        const baseRes = [...target.querySelectorAll(this.selector)]\n            .map((el) => (this.options.shadowRoot ? el.shadowRoot : el))\n            .filter((el) => el);\n        /** @type {Contains[]} */\n        this.childrenContains = [];\n        const res = baseRes.filter((el, currentIndex) => {\n            let condition =\n                (this.options.textContent === undefined ||\n                    el.textContent.trim() === this.options.textContent) &&\n                (this.options.value === undefined || el.value === this.options.value) &&\n                (this.options.scroll === undefined ||\n                    (this.options.scroll === \"bottom\"\n                        ? Math.abs(el.scrollHeight - el.clientHeight - el.scrollTop) <= 1\n                        : Math.abs(el.scrollTop - this.options.scroll) <= 1));\n            if (condition && this.options.text !== undefined) {\n                if (\n                    el.textContent.trim() !== this.options.text &&\n                    [...el.querySelectorAll(\"*\")].every(\n                        (el) => el.textContent.trim() !== this.options.text\n                    )\n                ) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.contains) {\n                for (const param of this.options.contains) {\n                    const childContains = new Contains(param[0], { ...param[1], target: el });\n                    if (\n                        !childContains.runOnce(`as child of el ${currentIndex + 1})`, {\n                            executeOnSuccess: false,\n                        })\n                    ) {\n                        condition = false;\n                    }\n                    this.childrenContains.push(childContains);\n                }\n            }\n            if (condition && this.options.visible !== undefined) {\n                if (isVisible(el) !== this.options.visible) {\n                    condition = false;\n                }\n            }\n            if (condition && this.options.after) {\n                const afterContains = new Contains(this.options.after[0], {\n                    ...this.options.after[1],\n                    target,\n                });\n                const afterEl = afterContains.runOnce(`as \"after\"`, {\n                    executeOnSuccess: false,\n                })?.[0];\n                if (\n                    !afterEl ||\n                    !(el.compareDocumentPosition(afterEl) & Node.DOCUMENT_POSITION_PRECEDING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(afterContains);\n            }\n            if (condition && this.options.before) {\n                const beforeContains = new Contains(this.options.before[0], {\n                    ...this.options.before[1],\n                    target,\n                });\n                const beforeEl = beforeContains.runOnce(`as \"before\"`, {\n                    executeOnSuccess: false,\n                })?.[0];\n                if (\n                    !beforeEl ||\n                    !(el.compareDocumentPosition(beforeEl) & Node.DOCUMENT_POSITION_FOLLOWING)\n                ) {\n                    condition = false;\n                }\n                this.childrenContains.push(beforeContains);\n            }\n            return condition;\n        });\n        if (\n            this.options.scroll !== undefined &&\n            this.scrollListeners &&\n            baseRes.length === this.options.count &&\n            res.length !== this.options.count\n        ) {\n            for (const el of baseRes) {\n                if (!this.scrollListeners.has(el)) {\n                    this.scrollListeners.add(el);\n                    el.addEventListener(\"scroll\", this.onScroll);\n                }\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Returns the found element that should act as the target (parent) for the\n     * main selector.\n     * If undefined is returned it means the parent cannot be found.\n     *\n     * @returns {HTMLElement|undefined}\n     */\n    selectParent() {\n        if (this.options.parent) {\n            this.parentContains = new Contains(this.options.parent[0], {\n                ...this.options.parent[1],\n                target: this.options.target,\n            });\n            return this.parentContains.runOnce(`as parent`, { executeOnSuccess: false })?.[0];\n        }\n        return this.options.target;\n    }\n}\n\n/**\n * Waits until `count` elements matching the given `selector` are present in\n * `options.target`.\n *\n * @param {string} selector\n * @param {ContainsOptions} [options]\n * @returns {Promise}\n */\nexport async function contains(selector, options) {\n    await new Contains(selector, options).run();\n}\n\nconst stepState = {\n    expectedSteps: null,\n    deferred: null,\n    timeout: null,\n    currentSteps: [],\n\n    clear() {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n        this.deferred = null;\n        this.currentSteps = [];\n        this.expectedSteps = null;\n    },\n\n    check({ crashOnFail = false } = {}) {\n        const success =\n            this.expectedSteps.length === this.currentSteps.length &&\n            this.expectedSteps.every((s, i) => s === this.currentSteps[i]);\n        if (!success && !crashOnFail) {\n            return;\n        }\n        QUnit.config.current.assert.verifySteps(this.expectedSteps);\n        if (success) {\n            this.deferred.resolve();\n        } else {\n            this.deferred.reject(new Error(\"Steps do not match.\"));\n        }\n        this.clear();\n    },\n};\n\nif (window.QUnit) {\n    QUnit.testStart(() =>\n        registerCleanup(() => {\n            if (stepState.expectedSteps) {\n                stepState.check({ crashOnFail: true });\n            } else {\n                stepState.clear();\n            }\n        })\n    );\n}\n\n/**\n * Indicate the completion of a test step. This step must then be verified by\n * calling `assertSteps`.\n *\n * @param {string} step\n */\nexport function step(step) {\n    stepState.currentSteps.push(step);\n    QUnit.config.current.assert.step(step);\n    if (stepState.expectedSteps) {\n        stepState.check();\n    }\n}\n\n/**\n * Wait for the given steps to be executed or for the timeout to be reached.\n *\n * @param {string[]} steps\n */\nexport function assertSteps(steps) {\n    if (stepState.expectedSteps) {\n        stepState.check({ crashOnFail: true });\n    }\n    stepState.expectedSteps = steps;\n    stepState.deferred = makeDeferred();\n    stepState.timeout = setTimeout(() => stepState.check({ crashOnFail: true }), 2000);\n    stepState.check();\n    return stepState.deferred;\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_activity_date_format\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"input[id*='activity_type_id']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".dropdown-item:contains('To-Do')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Go Party\",\n        },\n        {\n            trigger: \"button:contains('Schedule')\",\n        },\n        {\n            trigger: \".o-mail-Activity:contains('Go Party')\",\n        },\n        {\n            trigger: \".fa-info-circle\",\n            run: \"click\",\n        },\n        // Format expected from the server for 9 AM at the first day of 2024 is date_format = \"%d/%b/%y\", time_format = \"%I:%M:%S %p\".\n        {\n            trigger: \".o-mail-Activity-details tr:contains('Created') td:contains('01/Jan/24 09:00:00 AM')\",\n            isCheck: true,\n        },\n        {\n            // Default due date is 5 days after creation date.\n            trigger: \".o-mail-Activity-details tr:contains('Due on') td:contains('06/Jan/24')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_as_guest_tour.js\", {\n        test: true,\n        steps: () => [\n            {\n                content: \"Channel secret token has been hidden on welcome page\",\n                trigger: \".o-mail-WelcomePage\",\n                run() {\n                    if (!window.location.pathname.startsWith(\"/discuss/channel\")) {\n                        console.error(\"Channel secret token is still present in URL.\");\n                    }\n                },\n            },\n            {\n                content: \"Click join\",\n                trigger: \"button[title='Join Channel']\",\n                extraTrigger: \".o-mail-Thread\",\n            },\n            {\n                content: \"Check that we are on channel page\",\n                trigger: \".o-mail-Thread\",\n                run() {},\n            },\n        ],\n    });\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { click, contains, createFile, inputFiles } from \"@web/../tests/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_public_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussPublic\",\n            extraTrigger: \".o-mail-Thread\",\n            run() {},\n        },\n        {\n            content: \"Check that we are on channel page\",\n            trigger: \".o-mail-Thread\",\n            run() {\n                if (!window.location.pathname.startsWith(\"/discuss/channel\")) {\n                    console.error(\"Channel secret token is still present in URL.\");\n                }\n                const { missing, failed, unloaded } = odoo.loader.findErrors();\n                if ([missing, failed, unloaded].some((arr) => arr.length)) {\n                    console.error(\n                        \"Couldn't load all JS modules.\",\n                        JSON.stringify({ missing, failed, unloaded })\n                    );\n                }\n                document.body.classList.add(\"o_discuss_channel_public_modules_loaded\");\n            },\n            extraTrigger: \".o_discuss_channel_public_modules_loaded\",\n        },\n        {\n            content: \"Wait for all modules loaded check in previous step\",\n            trigger: \".o_discuss_channel_public_modules_loaded\",\n            run() {},\n        },\n        {\n            content: \"Write something in composer\",\n            trigger: \".o-mail-Composer-input\",\n            run: \"text cheese\",\n        },\n        {\n            content: \"Add one file in composer\",\n            trigger: \".o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                await inputFiles(\".o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello, world\",\n                        contentType: \"text/plain\",\n                        name: \"text.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Check the earlier provided attachment is listed\",\n            trigger: '.o-mail-AttachmentCard[title=\"text.txt\"]',\n            extra_trigger: \".o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n            run() {},\n        },\n        {\n            content: \"Send message\",\n            trigger: \".o-mail-Composer-send:enabled\",\n        },\n        {\n            content: \"Check message is shown\",\n            trigger: '.o-mail-Message-body:contains(\"cheese\")',\n            run() {},\n        },\n        {\n            content: \"Check message contains the attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n        {\n            content: \"Click on more menu\",\n            trigger: \".o-mail-Message [title='Expand']\",\n        },\n        {\n            content: \"Click on edit\",\n            trigger: \".o-mail-Message [title='Edit']\",\n        },\n        {\n            content: \"Edit message\",\n            trigger: \".o-mail-Message .o-mail-Composer-input\",\n            run: \"text vegetables\",\n        },\n        {\n            content: \"Add one more file in composer\",\n            trigger: \".o-mail-Message .o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                inputFiles(\".o-mail-Message .o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello 2\",\n                        contentType: \"text/plain\",\n                        name: \"extra.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Check the earlier provided extra attachment is listed\",\n            trigger: '.o-mail-Message .o-mail-Composer .o-mail-AttachmentCard[title=\"extra.txt\"]',\n            extra_trigger:\n                \".o-mail-Message .o-mail-Composer .o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n            run() {},\n        },\n        {\n            content: \"Save edited message\",\n            trigger: \".o-mail-Message a:contains(save)\",\n        },\n        {\n            content: \"Check message is edited\",\n            trigger: '.o-mail-Message-body:contains(\"vegetables\")',\n            run() {},\n        },\n        {\n            content: \"Check edited message contains the first attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n        {\n            content: \"Check edited message contains the extra attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"extra.txt\")',\n            async run() {\n                await click(\".o-mail-AttachmentCard-unlink\", {\n                    parent: [\".o-mail-AttachmentCard\", { text: \"extra.txt\" }],\n                });\n                await click(\".btn\", { text: \"Ok\", parent: [\".modal\", { text: \"Confirmation\" }] });\n                await contains(\".o-mail-AttachmentCard\", { text: \"extra.txt\", count: 0 });\n            },\n        },\n        {\n            content: \"Open search panel\",\n            trigger: \"button[title='Search Messages']\",\n        },\n        {\n            content: \"Search for the attachment name\",\n            trigger: \".o_searchview_input\",\n            run: \"text text.txt\",\n        },\n        {\n            content: \"Trigger the search\",\n            trigger: \"button[aria-label='Search button']\",\n        },\n        {\n            content: \"Check that searched message contains the attachment\",\n            trigger:\n                '.o-mail-SearchMessagesPanel .o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            run() {},\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { _t } from \"@web/core/l10n/translation\";\nimport { registry } from \"@web/core/registry\";\n\nimport { markup } from \"@odoo/owl\";\n\nregistry.category(\"web_tour.tours\").add(\"discuss_channel_tour\", {\n    url: \"/web#action=mail.action_discuss\",\n    sequence: 80,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussSidebarCategory-channel .o-mail-DiscussSidebarCategory-add\",\n            content: markup(\n                _t(\n                    \"<p>Channels make it easy to organize information across different topics and groups.</p> <p>Try to <b>create your first channel</b> (e.g. sales, marketing, product XYZ, after work party, etc).</p>\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector input\",\n            content: markup(_t(\"<p>Create a channel here.</p>\")),\n            position: \"bottom\",\n            auto: true,\n            run: function (actions) {\n                var t = new Date().getTime();\n                actions.text(\"SomeChannel_\" + t, this.$anchor);\n            },\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector-list\",\n            extra_trigger: \".o-discuss-ChannelSelector-suggestion\",\n            content: markup(_t(\"<p>Create a public or private channel.</p>\")),\n            position: \"right\",\n            run() {\n                document.querySelector(\".o-discuss-ChannelSelector-suggestion\").click();\n            },\n        },\n        {\n            trigger: \".o-mail-Composer-input\",\n            content: markup(\n                _t(\n                    \"<p><b>Write a message</b> to the members of the channel here.</p> <p>You can notify someone with <i>'@'</i> or link another channel with <i>'#'</i>. Start your message with <i>'/'</i> to get the list of possible commands.</p>\"\n                )\n            ),\n            position: \"top\",\n            width: 350,\n            run: function (actions) {\n                var t = new Date().getTime();\n                actions.text(\"SomeText_\" + t, this.$anchor);\n            },\n        },\n        {\n            trigger: \".o-mail-Composer-send:enabled\",\n            content: _t(\"Post your message on the thread\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message\",\n            content: _t(\"Click on your message\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message [title='Expand']\",\n            content: _t(\"Expand options\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o-mail-Message [title='Mark as Todo']\",\n            content: markup(\n                _t(\"Messages can be <b>starred</b> to remind you to check back later.\")\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \"button:contains(Starred)\",\n            content: _t(\n                \"Once a message has been starred, you can come back and review it at any time here.\"\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-mail-DiscussSidebarCategory-chat .o-mail-DiscussSidebarCategory-add\",\n            content: markup(\n                _t(\n                    \"<p><b>Chat with coworkers</b> in real-time using direct messages.</p><p><i>You might need to invite users from the Settings app first.</i></p>\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o-discuss-ChannelSelector\",\n            auto: true,\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_activity_schedule_from_chatter\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"input[id*='activity_type_id']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".dropdown-item:contains('Call')\",\n        },\n        {\n            trigger: \"input[id*='activity_type_id']:propValue('Call')\",\n            run: () => {},\n        },\n        {\n            extra_trigger: \"button:contains('Schedule')\",\n            trigger: \"input[id*='activity_type_id']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".dropdown-item:contains('To-Do')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Play Mario Party\",\n        },\n        {\n            trigger: \"button:contains('Schedule')\",\n        },\n        {\n            trigger: \".o-mail-Activity:contains('Play Mario Party')\",\n        },\n        {\n            trigger: \"button:contains('Activities')\",\n        },\n        {\n            trigger: \"div[name='summary'] input\",\n            run: \"text Play Mario Kart\",\n        },\n        {\n            trigger: \"button:contains('Mark as Done')\",\n        },\n        {\n            trigger: \".o-mail-Message:contains('Play Mario Kart')\",\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains, createFile, inputFiles } from \"@web/../tests/utils\";\n\n/**\n * This tour depends on data created by python test in charge of launching it.\n * It is not intended to work when launched from interface. It is needed to test\n * an action (action manager) which is not possible to test with QUnit.\n * @see mail/tests/test_mail_composer.py\n */\nregistry.category(\"web_tour.tours\").add(\"mail/static/tests/tours/mail_composer_test_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Wait for the chatter to be fully loaded\",\n            trigger: \".o-mail-Chatter\",\n            async run() {\n                await contains(\".o-mail-Message\", { count: 1 });\n            },\n        },\n        {\n            content: \"Click on Send Message\",\n            trigger: \"button:contains(Send message)\",\n        },\n        {\n            content: \"Write something in composer\",\n            trigger: \".o-mail-Composer-input\",\n            run: \"text blahblah @Not\",\n        },\n        {\n            content: \"Mention a partner\",\n            trigger: \".o-mail-Composer-suggestion:contains(Not A Demo User)\",\n        },\n        {\n            content: \"Add one file in composer\",\n            trigger: \".o-mail-Composer button[aria-label='Attach files']\",\n            async run() {\n                await inputFiles(\".o-mail-Composer-coreMain .o_input_file\", [\n                    await createFile({\n                        content: \"hello, world\",\n                        contentType: \"text/plain\",\n                        name: \"text.txt\",\n                    }),\n                ]);\n            },\n        },\n        {\n            content: \"Open full composer\",\n            trigger: \"button[aria-label='Full composer']\",\n            extra_trigger: \".o-mail-AttachmentCard:not(.o-isUploading)\", // waiting the attachment to be uploaded\n        },\n        {\n            content: \"Check composer keeps open after pushing Escape\",\n            trigger: \".o_mail_composer_form_view\",\n            run: () => {\n                window.dispatchEvent(\n                    new KeyboardEvent(\"keydown\", {\n                        bubbles: true,\n                        key: \"Escape\",\n                    })\n                );\n            },\n        },\n        {\n            content: \"Check the earlier provided attachment is listed\",\n            trigger: '.o_attachment[title=\"text.txt\"]',\n            run() {},\n        },\n        {\n            content: \"Check subject is autofilled\",\n            trigger: '[name=\"subject\"] input',\n            run() {\n                const subjectValue = document.querySelector('[name=\"subject\"] input').value;\n                if (subjectValue !== \"Jane\") {\n                    console.error(\n                        `Full composer should have \"Jane\" in subject input (actual: ${subjectValue})`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Check composer content is kept\",\n            trigger: '.o_field_html[name=\"body\"]',\n            run() {\n                const bodyContent = document.querySelector(\n                    '.o_field_html[name=\"body\"]'\n                ).textContent;\n                if (!bodyContent.includes(\"blahblah @Not A Demo User\")) {\n                    console.error(\n                        `Full composer should contain text from small composer (\"blahblah @Not A Demo User\") in body input (actual: ${bodyContent})`\n                    );\n                }\n                const mentionLink = document.querySelector(\n                    '.o_field_html[name=\"body\"] a'\n                ).textContent;\n                if (!mentionLink.includes(\"@Not A Demo User\")) {\n                    console.error(\n                        `Full composer should contain mention link from small composer (\"@Not A Demo User\") in body input)`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Open templates\",\n            trigger: '.o_field_widget[name=\"template_id\"] input',\n        },\n        {\n            content: \"Check a template is listed\",\n            in_modal: false,\n            trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Test template\")',\n            run() {},\n        },\n        {\n            content: \"Send message\",\n            trigger: \".o_mail_send\",\n        },\n        {\n            content: \"Check message is shown\",\n            trigger: '.o-mail-Message-body:contains(\"blahblah @Not A Demo User\")',\n        },\n        {\n            content: \"Check message contains the attachment\",\n            trigger: '.o-mail-Message .o-mail-AttachmentCard:contains(\"text.txt\")',\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains, scroll } from \"@web/../tests/utils\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_message_load_order_tour\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o-mail-DiscussSidebarChannel:contains(MyTestChannel)\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-mail-Thread .o-mail-Message\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 30 });\n                await contains(\".o-mail-Thread\", { scroll: \"bottom\" });\n            },\n        },\n        {\n            trigger: \"*[title='Pinned Messages']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-mail-MessageCard-jump\",\n            run: \"click\",\n        },\n        {\n            // Messages depends on FETCH_LIMIT (currently set to 30) in\n            // the thread service. Thus, at first load the message range\n            // will be (31 - 60). This trigger ensures the next messages\n            // are fetched after jumping to the message.\n            trigger: \".o-mail-Thread .o-mail-Message:first:not(:contains(31))\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 16 });\n                await contains(\".o-mail-Thread\", { scroll: 0 });\n                // ensure 1 - 16 are loaded in order: 15 below and the\n                // one we're loading messages around.\n                const messages = Array.from(\n                    document.querySelectorAll(\".o-mail-Thread .o-mail-Message-content\")\n                ).map((el) => el.innerText);\n                for (let i = 0; i < 16; i++) {\n                    if (messages[i] !== (i + 1).toString()) {\n                        throw new Error(\"Wrong message order after loading around\");\n                    }\n                }\n                await scroll(\".o-mail-Thread\", \"bottom\");\n            },\n        },\n        {\n            // After jumping to the pinned message, the message range\n            // was (1 -16): 15 before (but none were found), 15 after\n            // and the pinned message itself. This trigger ensures the\n            // next messages are fetched after scrolling to the bottom.\n            trigger: \".o-mail-Thread .o-mail-Message:contains(17)\",\n            async run() {\n                await contains(\".o-mail-Thread .o-mail-Message\", { count: 46 });\n                // ensure 1 - 46  are loaded in order.\n                const messages = Array.from(\n                    document.querySelectorAll(\".o-mail-Thread .o-mail-Message-content\")\n                ).map((el) => el.innerText);\n                for (let i = 0; i < 46; i++) {\n                    if (messages[i] !== (i + 1).toString()) {\n                        throw new Error(\"Wrong message order after loading after\");\n                    }\n                }\n            },\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { contains } from \"@web/../tests/utils\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add(\"mail_template_dynamic_placeholder_tour\", {\n    test: true,\n    url: \"/web\",\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: 'Go into the Setting \"app\"',\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_administration\"]',\n        },\n        {\n            content: \"Open email templates\",\n            trigger: 'button[name=\"open_mail_templates\"]',\n        },\n        {\n            content: \"Create a new email template\",\n            trigger: \"button.o_list_button_add\",\n        },\n        {\n            content: 'Insert # inside \"Subject\" input',\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            async run(actions) {\n                actions.text(`no_model_id #`, this.$anchor);\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { bubbles: true, key: \"#\" })\n                );\n                await contains(\"div[name='subject'] input[type='text']\", {\n                    value: \"no_model_id #\",\n                });\n                await contains(\".o_notification\", {\n                    text: \"You need to select a model before opening the dynamic placeholder selector.\",\n                });\n            },\n        },\n        {\n            content: 'Select \"Contact\" model',\n            trigger: 'div[name=\"model_id\"] input[type=\"text\"]',\n            run: \"text Contact\",\n        },\n        {\n            content: \"Wait for the autocomplete RPC\",\n            trigger: 'div[name=\"model_id\"] .ui-autocomplete:contains(\"Contact\")',\n            isCheck: true,\n        },\n        {\n            content: \"Click on contact\",\n            trigger: 'div[name=\"model_id\"] .ui-autocomplete',\n            run: async function () {\n                const contact = Array.from(\n                    document.querySelectorAll(\n                        'div[name=\"model_id\"] .ui-autocomplete .dropdown-item'\n                    )\n                ).find((el) => el.textContent === \"Contact\");\n                await contact.click();\n            },\n        },\n        {\n            content: \"Wait for the drop down to disappear\",\n            trigger: 'div[name=\"model_id\"] .o-autocomplete:not(:has(.ui-autocomplete))',\n            run: async () => {\n                // Ensure the system has registered a correct model value before\n                // we try to open the DPH.\n                // It seems that the autocomplete validation can be very slow.\n                await new Promise((r) => setTimeout(r, 200));\n            },\n        },\n        {\n            content: 'Retry insert # inside \"Subject\" input',\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            run(actions) {\n                actions.text(`yes_model_id #`, this.$anchor);\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { bubbles: true, key: \"#\" })\n                );\n            },\n        },\n        {\n            content: \"Check if the dynamic placeholder popover is opened\",\n            trigger: \"div.o_model_field_selector_popover\",\n            isCheck: true,\n        },\n        {\n            content: \"filter the dph result\",\n            trigger: \"div.o_model_field_selector_popover_search input[type='text']\",\n            run: \"text name\",\n        },\n        {\n            content: \"Click on the first entry of the dynamic placeholder\",\n            trigger: 'div.o_model_field_selector_popover li:first-child button:contains(\"Name\")',\n        },\n        {\n            content: \"Enter a default value\",\n            trigger:\n                'div.o_model_field_selector_popover .o_model_field_selector_default_value_input input[type=\"text\"]',\n            run: \"text defValue\",\n        },\n        {\n            content: \"Click on the the dynamic placeholder default value\",\n            trigger: \"div.o_model_field_selector_popover li:first-child button\",\n        },\n        {\n            content: \"Wait for the popover to disappear\",\n            trigger: \"body:not(:has(.o_model_field_selector_popover))\",\n        },\n        {\n            content: \"Check if subject value was correclty updated\",\n            trigger: 'div[name=\"subject\"] input[type=\"text\"]',\n            run() {\n                const subjectValue = this.$anchor[0].value;\n                const correctValue = \"yes_model_id {{object.name or '''defValue'''}}\";\n                if (subjectValue !== correctValue) {\n                    console.error(\n                        `Email template should have \"${correctValue}\" in subject input (actual: ${subjectValue})`\n                    );\n                }\n            },\n        },\n        {\n            content: \"Insert tesxt inside editable\",\n            trigger: \".note-editable.odoo-editor-editable\",\n            run(actions) {\n                actions.text(`/`, this.$anchor);\n                document.querySelector(\".note-editable\").dispatchEvent(\n                    new InputEvent(\"input\", {\n                        inputType: \"insertText\",\n                        data: \"/\",\n                    })\n                );\n            },\n        },\n        {\n            content: \"Click on the the dynamic placeholder commandBar options\",\n            trigger: \"div.oe-powerbox-commandWrapper:contains(Dynamic Placeholder)\",\n        },\n        {\n            content: \"Check if the dynamic placeholder popover is opened\",\n            trigger: \"div.o_model_field_selector_popover\",\n        },\n        {\n            content: \"filter the dph result\",\n            trigger: \"div.o_model_field_selector_popover_search input[type='text']\",\n            run: \"text name\",\n        },\n        {\n            content: \"Click on the first entry of the dynamic placeholder\",\n            trigger: 'div.o_model_field_selector_popover li:first-child button:contains(\"Name\")',\n        },\n        {\n            content: \"Enter a default value\",\n            trigger:\n                'div.o_model_field_selector_popover .o_model_field_selector_default_value_input input[type=\"text\"]',\n            run: \"text defValue\",\n        },\n        {\n            content: \"Click on the the dynamic placeholder default value\",\n            trigger: \"div.o_model_field_selector_popover li:first-child button\",\n        },\n        {\n            content: \"Ensure the editable contain the dynamic placeholder t tag\",\n            trigger:\n                \".note-editable.odoo-editor-editable t[t-out=\\\"object.name or '''defValue'''\\\"]\",\n        },\n        {\n            content: \"Discard form changes\",\n            trigger: \"button.o_form_button_cancel\",\n        },\n        {\n            content: \"Wait for the form view to disappear\",\n            trigger: \"body:not(:has(.o_form_sheet))\",\n            isCheck: true,\n        },\n    ],\n});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\n/**\n * Verify that a user can modify their own profile information.\n */\nregistry.category(\"web_tour.tours\").add(\"mail/static/tests/tours/user_modify_own_profile_tour.js\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Open user account menu\",\n            trigger: \".o_user_menu button\",\n        },\n        {\n            content: \"Open preferences / profile screen\",\n            trigger: \"[data-menu=settings]\",\n        },\n        {\n            content: \"Update the email address\",\n            trigger: 'div[name=\"email\"] input',\n            run: \"text updatedemail@example.com\",\n        },\n        {\n            content: \"Save the form\",\n            trigger: 'button[name=\"preference_save\"]',\n            extra_trigger: \"body.modal-open\",\n        },\n        {\n            content: \"Wait until the modal is closed\",\n            isCheck: true,\n            trigger: \"body:not(.modal-open)\",\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('portal_load_homepage', {\n    test: true,\n    url: '/my',\n    steps: () => [\n        {\n            content: \"Check portal is loaded\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n        },\n        {\n            content: \"Load my account details\",\n            trigger: 'input[value=\"Joel Willis\"]',\n            isCheck: true,\n        },\n        {\n            content: 'type a different phone number',\n            trigger: 'input[name=\"phone\"]',\n            run: 'text +1 555 666 7788',\n        },\n        {\n            content: \"Submit the form\",\n            trigger: 'button[type=submit]',\n        },\n        {\n            content: \"Check that we are back on the portal\",\n            trigger: 'a[href*=\"/my/account\"]:contains(\"Edit\"):first',\n            isCheck: true,\n        }\n    ]\n});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('account_tax_group', {\n    test: true,\n    url: \"/web\",\n    steps: () => [stepUtils.showAppsMenuItem(),\n    {\n        id: 'account_menu_click',\n        content: \"Go to Invoicing\",\n        trigger: '.o_app[data-menu-xmlid=\"account.menu_finance\"]',\n    },\n    {\n        content: \"Go to Vendors\",\n        trigger: 'span:contains(\"Vendors\")',\n    },\n    {\n        content: \"Go to Bills\",\n        trigger: 'a:contains(\"Bills\")',\n    },\n    {\n        extra_trigger: '.o_breadcrumb .text-truncate:contains(\"Bills\")',\n        content: \"Create new bill\",\n        trigger: '.o_control_panel_main_buttons .d-none .o_list_button_add',\n    },\n    // Set a vendor\n    {\n        content: \"Add vendor\",\n        trigger: 'div.o_field_widget.o_field_res_partner_many2one[name=\"partner_id\"] div input',\n        run: 'text Account Tax Group Partner',\n    },\n    {\n        content: \"Valid vendor\",\n        trigger: '.ui-menu-item a:contains(\"Account Tax Group Partner\")',\n    },\n    // Add First product\n    {\n        content: \"Add items\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_field_x2many_list_row_add a:contains(\"Add a line\")',\n    },\n    {\n        content: \"Select input\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_selected_row .o_list_many2one[name=\"product_id\"] input',\n    },\n    {\n        content: \"Type item\",\n        trigger: 'div[name=\"invoice_line_ids\"] .o_selected_row .o_list_many2one[name=\"product_id\"] input',\n        run: \"text Account Tax Group Product\",\n    },\n    {\n        content: \"Valid item\",\n        trigger: '.ui-menu-item-wrapper:contains(\"Account Tax Group Product\")',\n    },\n    // Save account.move\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    ...stepUtils.saveForm(),\n    // Edit tax group amount\n    {\n        content: \"Edit tax group amount\",\n        trigger: '.o_tax_group_edit',\n    },\n    {\n        content: \"Modify the input value\",\n        trigger: '.o_tax_group_edit_input input',\n        run: function (actions) {\n            $('.o_tax_group_edit_input input').val(200);\n            $('.o_tax_group_edit_input input').select();\n            $('.o_tax_group_edit_input input').blur();\n        },\n    },\n    // Check new value for total (with modified tax_group_amount).\n    {\n        content: \"Valid total amount\",\n        trigger: 'span[name=\"amount_total\"]:contains(\"800\")',\n    },\n    // Modify the quantity of the object\n    {\n        content: \"Select item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"]',\n    },\n    {\n        content: \"Change item quantity\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"] input',\n        run: 'text 2',\n    },\n    {\n        content: \"Valid the new value\",\n        trigger: 'div[name=\"invoice_line_ids\"] tbody tr.o_data_row .o_list_number[name=\"quantity\"] input',\n        run: function (actions) {\n            let keydownEvent = jQuery.Event('keydown');\n            keydownEvent.key = \"Enter\";\n            this.$anchor.trigger(keydownEvent);\n        },\n    },\n    // Save form\n    {\n        content: \"Save the account move\",\n        trigger: '.o_form_button_save',\n    },\n    ...stepUtils.saveForm(),\n    // Check new tax group value\n    {\n        content: \"Check new value of tax group\",\n        trigger: '.o_tax_group_amount_value:contains(\"120\")',\n    },\n    {\n        content: \"Edit tax value\",\n        trigger: '.o_tax_group_edit_input input',\n        run: 'text 2'\n    },\n    {\n        content: \"Check new value of total\",\n        trigger: '.oe_subtotal_footer_separator:contains(\"1,202\")',\n    },\n    {\n        content: \"Discard changes\",\n        trigger: '.o_form_button_cancel',\n    },\n    {\n        content: \"Check tax value is reset\",\n        trigger: '.o_tax_group_amount_value:contains(\"120\")',\n        isCheck: true,\n    },\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n// This tour relies on data created on the Python test.\nregistry.category(\"web_tour.tours\").add('sale_signature', {\n    test: true,\n    url: '/my/quotes',\n    steps: () => [\n    {\n        content: \"open the test SO\",\n        trigger: 'a:containsExact(\"test SO\")',\n    },\n    {\n        content: \"click sign\",\n        trigger: 'a:contains(\"Sign\")',\n    },\n    {\n        content: \"check submit is enabled\",\n        trigger: '.o_portal_sign_submit:enabled',\n        run: function () {},\n    },\n    {\n        content: \"click select style\",\n        trigger: '.o_web_sign_auto_select_style button',\n    },\n    {\n        content: \"click style 4\",\n        trigger: '.o_web_sign_auto_select_style .dropdown-item:eq(3)',\n    },\n    {\n        content: \"click submit\",\n        trigger: '.o_portal_sign_submit:enabled',\n    },\n    {\n        content: \"check it's confirmed\",\n        trigger: '#quote_content:contains(\"Thank You\")',\n    }, {\n        trigger: '#quote_content',\n        run: function () {\n            window.location.href = window.location.origin + '/web';\n        },  // Avoid race condition at the end of the tour by returning to the home page.\n    },\n    {\n        trigger: 'nav',\n        run: function() {},\n    }\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('personal_stage_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: \"Open Pig Project\",\n    trigger: '.o_kanban_record:contains(\"Pig\")',\n}, {\n    // Default is grouped by stage, user should not be able to create/edit a column\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_quick_create)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_edit)\",\n    run: function () {},\n}, {\n    content: \"Check that there is no create column\",\n    trigger: \"body:not(.o_column_delete)\",\n    run: function () {},\n}, {\n    content: \"Go to tasks\",\n    trigger: 'button[data-menu-xmlid=\"project.menu_project_management\"]',\n},{\n    content: \"Go to my tasks\", // My tasks is grouped by personal stage by default\n    trigger: 'a[data-menu-xmlid=\"project.menu_project_management_my_tasks\"]',\n}, {\n    content: \"Check that we can create a new stage\",\n    trigger: '.o_column_quick_create .o_quick_create_folded'\n}, {\n    content: \"Create a new personal stage\",\n    trigger: 'input.form-control',\n    run: 'text Never',\n}, {\n    content: \"Confirm create\",\n    trigger: '.o_kanban_add',\n}, {\n    content: \"Check that column exists\",\n    trigger: '.o_kanban_header:contains(\"Never\")',\n    run: function () {},\n}, {\n    content: 'Open column edit dropdown',\n    trigger: '.o_kanban_header:eq(0)',\n    run: function () {\n        document.querySelector('.o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    },\n}, {\n    content: \"Try editing inbox\",\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    content: \"Change title\",\n    trigger: 'div.o_field_char[name=\"name\"] input',\n    run: 'text  (Todo)',\n}, {\n    content: \"Save changes\",\n    trigger: '.btn-primary:contains(\"Save\")',\n}, {\n    content: \"Check that column was updated\",\n    trigger: '.o_kanban_header:contains(\"Todo\")',\n}, {\n    content: \"Create a personal task from the quick create form\",\n    trigger: '.o-kanban-button-new',\n}, {\n    content: \"Create a new personal task\",\n    trigger: 'input.o_input:not(.o_searchview_input)',\n    run: 'text New Test Task',\n}, {\n    content: \"Confirm create\",\n    trigger: '.o_kanban_add',\n}, {\n    content: \"Check that task exists\",\n    trigger: '.o_kanban_record_title:contains(\"New Test Task\")',\n    run: function () {},\n}]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('burndown_chart_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    content: 'Open \"Burndown Chart Test\" project menu',\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_dropdown_kanban .dropdown-toggle',\n}, {\n    content: `Open \"Burndown Chart Test\" project's \"Burndown Chart\" view`,\n    trigger: '.o_kanban_record:contains(\"Burndown Chart Test\") .o_kanban_manage_reporting div[role=\"menuitem\"] a:contains(\"Burndown Chart\")',\n}, {\n    content: 'The sort buttons are not rendered',\n    trigger: '.o_graph_renderer:not(:has(.btn-group[role=toolbar][aria-label=\"Sort graph\"]))',\n    extra_trigger: '.o_graph_renderer',\n}, {\n    content: 'Remove the project search \"Burndown Chart Test\"',\n    trigger: '.o_searchview_facet:contains(\"Burndown Chart Test\") .o_facet_remove',\n}, {\n    content: 'Search Burndown Chart',\n    trigger: 'input.o_searchview_input',\n    run: `text Burndown`,\n}, {\n    content: 'Validate search',\n    trigger: '.o_searchview_autocomplete .o_menu_item:contains(\"Project\")',\n}, {\n    content: 'Remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_searchview_facet:contains(\"Date: Month\") .o_facet_remove',\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date and Stage\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date and Stage\") button.o_notification_close',\n}, {\n    content: 'Open the search panel menu',\n    trigger: '.o_control_panel .o_searchview_dropdown_toggler',\n}, {\n    content: 'The Stage group menu item is invisible',\n    trigger: '.o_group_by_menu:not(:has(.o_menu_item:contains(\"Stage\")))',\n}, {\n    content: 'Open the Date group by sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\")',\n}, {\n    content: 'Click on the selected Date sub menu',\n    trigger: '.o_group_by_menu button.o_menu_item:contains(\"Date\") + * .dropdown-item.selected',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'A \"The Burndown Chart must be grouped by Date\" notification is shown when trying to remove the group by \"Date: Month > Stage\"',\n    trigger: '.o_notification_manager .o_notification:contains(\"The Burndown Chart must be grouped by Date\") button.o_notification_close',\n}, {\n    content: 'Open the search panel menu',\n    trigger: '.o_control_panel .o_searchview_dropdown_toggler',\n}, {\n    content: 'Open the Date filter sub menu',\n    trigger: '.o_filter_menu button.o_menu_item:contains(\"Date\")',\n}, {\n    content: 'Click on the first Date filter sub menu',\n    trigger: '.o_filter_menu .o_menu_item:contains(\"Date\") + * .dropdown-item:first-child',\n    run: function () {\n        this.$anchor[0].dispatchEvent(new Event('click'));\n    },\n}, {\n    content: 'Close the Date filter menu',\n    trigger: '.o_graph_renderer',\n}, {\n    content: 'Open the search panel menu',\n    trigger: '.o_control_panel .o_searchview_dropdown_toggler',\n}, {\n    content: 'The comparison menu is not rendered',\n    trigger: ':not(:has(.o_comparison_menu))',\n    isCheck: true,\n}]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nconst projectSharingSteps = [...stepUtils.goToAppSteps(\"project.menu_main_pm\", 'Go to the Project App.'), {\n    trigger: '.o_kanban_record:contains(\"Project Sharing\") .o_dropdown_kanban .dropdown-toggle',\n    content: 'Open the project dropdown.'\n}, {\n    trigger: '.o_kanban_record:contains(\"Project Sharing\") .dropdown-menu a:contains(\"Share\")',\n    content: 'Start editing the project.',\n}, {\n    trigger: 'div.o_field_radio[name=\"access_mode\"] div.o_radio_item > input[data-value=\"edit\"]',\n    content: 'Select \"Edit\" as Access mode in the \"Share Project\" wizard.',\n}, {\n    trigger: '.o_field_many2many_tags_email[name=partner_ids] input',\n    extra_trigger: 'label[for=partner_ids_0]:contains(\"Invite People\")',\n    content: 'Select the user portal as collaborator to the \"Project Sharing\" project.',\n    run: 'text Georges',\n}, {\n    trigger: '.ui-autocomplete a.dropdown-item:contains(\"Georges\")',\n    in_modal: false,\n}, {\n    trigger: 'footer > button[name=\"action_share_record\"]',\n    content: 'Confirm the project sharing with this portal user.',\n}, {\n    trigger: '.o_web_client',\n    content: 'Go to project portal view to select the \"Project Sharing\" project',\n    run: function () {\n        window.location.href = window.location.origin + '/my/projects';\n    },\n}, {\n    id: 'project_sharing_feature',\n    trigger: 'table > tbody > tr a:has(span:contains(Project Sharing))',\n    content: 'Select \"Project Sharing\" project to go to project sharing feature for this project.',\n}, {\n    trigger: 'iframe .o_project_sharing',\n    content: 'Wait the project sharing feature be loaded',\n    run: function () {},\n}, {\n    trigger: 'iframe button.o-kanban-button-new',\n    content: 'Click \"Create\" button',\n    run: 'click',\n}, {\n    trigger: 'iframe .o_kanban_quick_create .o_field_widget[name=\"name\"] input',\n    content: 'Create Task',\n    run: 'text Test Create Task',\n}, {\n    trigger: 'iframe .o_kanban_quick_create .o_kanban_edit',\n    content: 'Go to the form view of this new task',\n}, {\n    trigger: 'iframe div[name=\"stage_id\"] div.o_statusbar_status button[aria-checked=\"false\"]:contains(Done)',\n    content: 'Change the stage of the task.',\n}, {\n    trigger: 'iframe .o_portal_chatter_composer_input .o_portal_chatter_composer_body textarea',\n    content: 'Write a message in the chatter of the task',\n    run: 'text I create a new task for testing purpose.',\n}, {\n    trigger: 'iframe .o_portal_chatter_composer_input .o_portal_chatter_composer_body button[name=\"send_message\"]',\n    content: 'Send the message',\n}, {\n    trigger: 'iframe ol.breadcrumb > li.o_back_button > a:contains(Project Sharing)',\n    content: 'Go back to the kanban view',\n}, {\n    trigger: 'iframe .o_searchview_dropdown_toggler',\n    content: 'open the search panel menu',\n}, {\n    trigger: 'iframe .o_filter_menu .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: 'iframe .o_group_by_menu .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: 'iframe .o_favorite_menu .o_add_favorite',\n    content: 'open accordion \"save current search\" in favorite menu',\n}, {\n    trigger: 'iframe .o_favorite_menu .o_accordion_values .o_save_favorite',\n    content: 'click to \"save\" button in favorite menu',\n}, {\n    trigger: 'iframe .o_filter_menu .dropdown-item:first-child',\n    content: 'click on the first item in the filter menu',\n}, {\n    trigger: 'iframe .o_group_by_menu .dropdown-item:first-child',\n    content: 'click on the first item in the group by menu',\n}, {\n    trigger: 'iframe .o_favorite_menu .o_accordion_values .o_save_favorite',\n    content: 'click to \"save\" button in favorite menu',\n}, {\n    trigger: 'iframe button.o_switch_view.o_list',\n    content: 'Go to the list view',\n}, {\n    extra_trigger: 'iframe .o_list_view',\n    trigger: 'iframe .o_optional_columns_dropdown_toggle',\n}, {\n    trigger: 'iframe .o_optional_columns_dropdown .dropdown-item:contains(\"Milestone\")',\n    isCheck: true,\n}, {\n    trigger: 'iframe .o_list_view',\n    content: 'Check the list view',\n    isCheck: true,\n}];\n\nregistry.category(\"web_tour.tours\").add('project_sharing_tour', {\n    test: true,\n    url: '/web',\n    steps: () => {\n        return projectSharingSteps;\n    } \n});\n\nregistry.category(\"web_tour.tours\").add(\"portal_project_sharing_tour\", {\n    test: true,\n    url: \"/my/projects\",\n    steps: () => {\n        // The begining of the project sharing feature\n        const projectSharingStepIndex = projectSharingSteps.findIndex(s => s?.id === 'project_sharing_feature');\n        return projectSharingSteps.slice(projectSharingStepIndex, projectSharingSteps.length);\n    }\n});\n\nregistry.category(\"web_tour.tours\").add(\"portal_project_sharing_tour_with_disallowed_milestones\", {\n    test: true,\n    url: \"/my/projects\",\n    steps: () => [\n        {\n            id: 'project_sharing_feature',\n            trigger: 'table > tbody > tr a:has(span:contains(Project Sharing))',\n            content: 'Select \"Project Sharing\" project to go to project sharing feature for this project.',\n        },\n        {\n            trigger: 'iframe .o_project_sharing',\n            content: 'Wait the project sharing feature be loaded',\n            isCheck: true,\n        },\n        {\n            trigger: 'iframe button.o_switch_view.o_list',\n            content: 'Go to the list view',\n        },\n        {\n            extra_trigger: 'iframe .o_list_view',\n            trigger: 'iframe .o_optional_columns_dropdown_toggle',\n        },\n        {\n            extra_trigger: 'iframe .o_optional_columns_dropdown .dropdown-item',\n            trigger: 'iframe .o_optional_columns_dropdown',\n            run: function() {\n                const optionalFields = Array.from(this.$anchor[0].ownerDocument.querySelectorAll(\".dropdown-item\"))\n                    .map(e => e.textContent);\n\n                if (optionalFields.includes(\"Milestone\")) {\n                    throw new Error(\"the Milestone field should be absent as allow_milestones is set to False\");\n                }\n            }\n        },\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction changeFilter(filterName) {\n    return [\n        {\n            trigger: '.o_control_panel_actions .o_searchview_dropdown_toggler',\n            content: 'open searchview menu',\n        },\n        {\n            trigger: `.o_favorite_menu .dropdown-item span:contains(\"${filterName}\")`,\n        },\n        {\n            trigger: '.o_control_panel_actions .o_searchview_dropdown_toggler',\n            content: 'close searchview menu',\n        },\n    ];\n}\n\nregistry.category(\"web_tour.tours\").add('project_tags_filter_tour',\n    {\n        test: true,\n        url: '/web',\n        steps: () => [stepUtils.showAppsMenuItem(),{\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n},\n...changeFilter(\"Corkscrew tail tag filter\"),\n{\n    trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))) .o_kanban_record:has(span:contains(\"Pigs\"))',\n    extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))):not(:has(.o_kanban_record))',\n    content: 'check that the corkscrew tail filter has taken effect',\n    run: () => {},\n}, ...changeFilter(\"horned tag filter\"),\n{\n    trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))) .o_kanban_record:has(span:contains(\"Goats\"))',\n    extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))):not(:has(.o_kanban_record))',\n    content: 'check that the horned filter has taken effect',\n    run: () => {},\n}, ...changeFilter(\"4 Legged tag filter\"),\n{\n    trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"goat\"))) .o_kanban_record:has(span:contains(\"Goats\"))',\n    extra_trigger: '.o_kanban_group:has(.o_kanban_header:has(span:contains(\"pig\"))) .o_kanban_record:has(span:contains(\"Pigs\"))',\n    content: 'check that the 4 legged filter has taken effect',\n    run: () => {},\n},\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('project_test_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n    }, {\n        trigger: '.o-kanban-button-new',\n        extra_trigger: '.o_project_kanban',\n        width: 200,\n    }, {\n        trigger: '.o_project_name input',\n        run: 'text New Project',\n        id: 'project_creation',\n    }, {\n        trigger: '.o_open_tasks',\n        run: function (actions) {\n            actions.auto('.modal:visible .btn.btn-primary');\n        },\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n        run: function (actions) {\n            actions.text(\"New\", this.$anchor.find(\"input\"));\n        },\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n        auto: true,\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n        extra_trigger: '.o_kanban_group',\n        run: function (actions) {\n            actions.text(\"Done\", this.$anchor.find(\"input\"));\n        },\n    }, {\n        trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n        auto: true,\n    }, {\n        trigger: '.o-kanban-button-new',\n        extra_trigger: '.o_kanban_group:eq(0)'\n    }, {\n        trigger: '.o_kanban_quick_create div.o_field_char[name=display_name] input',\n        extra_trigger: '.o_kanban_project_tasks',\n        run: 'text New task'\n    }, {\n        trigger: '.o_kanban_quick_create .o_kanban_add',\n        extra_trigger: '.o_kanban_project_tasks',\n        id: \"quick_create_tasks\",\n    }, {\n        trigger: '.o_field_text[name=\"name\"] textarea',\n        content: 'Set task name',\n        run: 'text New task',\n    }, {\n        trigger: 'div[name=\"user_ids\"].o_field_many2many_tags_avatar input',\n        content: 'Assign the task to you',\n        run: 'click',\n    }, {\n        trigger: 'ul.ui-autocomplete a .o_avatar_many2x_autocomplete',\n        content: 'Assign the task to you',\n    }, {\n        trigger: 'a[name=\"sub_tasks_page\"]',\n        content: 'Open sub-tasks notebook section',\n        run: 'click',\n    }, {\n        trigger: '.o_field_subtasks_one2many .o_list_renderer a[role=\"button\"]',\n        content: 'Add a subtask',\n        run: 'click',\n    }, {\n        trigger: '.o_field_subtasks_one2many div[name=\"name\"] input',\n        content: 'Set subtask name',\n        run: 'text new subtask'\n    }, {\n        trigger: 'button[special=\"save\"]',\n        extra_trigger: '.o_field_many2many_tags_avatar .o_m2m_avatar',\n        content: 'Save task',\n    },\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openProjectUpdateAndReturnToTasks(view, viewClass) {\n    return [{\n            trigger: '.o_project_updates_breadcrumb',\n            content: 'Open Project Update from view : ' + view,\n            extra_trigger: `.${viewClass}`,\n        }, {\n            trigger: \".o-kanban-button-new\",\n            content: \"Create a new update from project task view : \" + view,\n            extra_trigger: '.o_project_update_kanban_view',\n        }, {\n            trigger: \"button.o_form_button_cancel\",\n            content: \"Discard project update from project task view : \" + view,\n        }, {\n            trigger: \".o_switch_view.o_list\",\n            content: \"Go to list of project update from view \" + view,\n        }, {\n            trigger: '.o_back_button',\n            content: 'Go back to the task view : ' + view,\n            // extra_trigger: '.o_list_view', // FIXME: [XBO] uncomment it when the sample data will be displayed after discarding the creation of a project update record.\n        }, {\n            trigger: `.${viewClass}`,\n            content: 'Check the task view : ' + view,\n            isCheck: true,\n        }\n    ];\n}\n\nregistry.category(\"web_tour.tours\").add('project_update_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"project.menu_main_pm\"]',\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_project_kanban',\n    width: 200,\n}, {\n    trigger: '.o_project_name input',\n    run: 'text New Project'\n}, {\n    trigger: '.o_open_tasks',\n    run: function (actions) {\n        actions.auto('.modal:visible .btn.btn-primary');\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    run: function (actions) {\n        actions.text(\"New\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .input-group\",\n    extra_trigger: '.o_kanban_group',\n    run: function (actions) {\n        actions.text(\"Done\", this.$anchor.find(\"input\"));\n    },\n}, {\n    trigger: \".o_kanban_project_tasks .o_column_quick_create .o_kanban_add\",\n    auto: true,\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=display_name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text New task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o-kanban-button-new',\n    extra_trigger: '.o_kanban_group:eq(0)'\n}, {\n    trigger: '.o_kanban_quick_create div.o_field_char[name=display_name] input',\n    extra_trigger: '.o_kanban_project_tasks',\n    run: 'text Second task'\n}, {\n    trigger: '.o_kanban_quick_create .o_kanban_add',\n    extra_trigger: '.o_kanban_project_tasks'\n}, {\n    trigger: '.o_kanban_group:nth-child(2) .o_kanban_header',\n    run: function () {\n        document.querySelector('.o_kanban_group:nth-child(2) .o_kanban_config.dropdown .dropdown-toggle').dispatchEvent(new Event('click'));\n    }\n}, {\n    trigger: \".dropdown-item.o_column_edit\",\n}, {\n    trigger: \".o_field_widget[name=fold] input\",\n}, {\n    trigger: \".modal-footer button\",\n}, {\n    trigger: \".o_kanban_record .oe_kanban_content\",\n    extra_trigger: '.o_kanban_project_tasks',\n    run: \"drag_and_drop .o_kanban_group:eq(1) \",\n}, {\n    trigger: \".o_project_updates_breadcrumb\",\n    content: 'Open Updates'\n}, {\n    trigger: \".o_add_milestone a\",\n    content: \"Add a first milestone\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New milestone'\n}, {\n    trigger: \"input[data-field=deadline]\",\n    run: 'text 12/12/2099'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_add_milestone a\",\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text Second milestone'\n}, {\n    trigger: \"input[data-field=deadline]\",\n    run: 'text 12/12/2022'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o_rightpanel_milestone:eq(1) .o_milestone_detail\",\n}, {\n    trigger: \"input[data-field=deadline]\",\n    run: 'text 12/12/2100'\n}, {\n    trigger: \".modal-footer .o_form_button_save\"\n}, {\n    trigger: \".o-kanban-button-new\",\n    content: \"Create a new update\"\n}, {\n    trigger: \"div.o_field_widget[name=name] input\",\n    run: 'text New update'\n}, {\n    trigger: \".o_form_button_save\"\n}, {\n    trigger: \".o_field_widget[name='description'] h1:contains('Activities')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] h3:contains('Milestones')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(12/12/2099 => 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(due 12/12/2022)')\",\n    run: function () {},\n}, {\n    trigger: \".o_field_widget[name='description'] div[name='milestone'] ul li:contains('(due 12/12/2100)')\",\n    run: function () {},\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n}, {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Project Updates',\n}, {\n    trigger: '.o_back_button',\n    content: 'Go back to the kanban view the project',\n    extra_trigger: '.o_list_view',\n}, {\n    trigger: '.o_switch_view.o_graph',\n    content: 'Open Graph View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Graph\", \"o_graph_view\"), {\n    trigger: '.o_switch_view.o_list',\n    content: 'Open List View of Tasks',\n    extra_trigger: '.o_graph_view',\n}, ...openProjectUpdateAndReturnToTasks(\"List\", \"o_list_view\"), {\n    trigger: '.o_switch_view.o_pivot',\n    content: 'Open Pivot View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Pivot\", \"o_pivot_view\"), {\n    trigger: '.o_switch_view.o_calendar',\n    content: 'Open Calendar View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Calendar\", \"o_calendar_view\"), {\n    trigger: '.o_switch_view.o_activity',\n    content: 'Open Activity View of Tasks',\n}, ...openProjectUpdateAndReturnToTasks(\"Activity\", \"o_activity_view\"),\n]});\n", "/** @odoo-module **/\n    \n    import { registry } from \"@web/core/registry\";\n    import { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n    registry.category(\"web_tour.tours\").add('debug_menu_set_defaults', {\n        test: true,\n        url: '/web?debug=1',\n        steps: () => [\n            ...stepUtils.goToAppSteps('contacts.menu_contacts', \"Open the contacts menu\"),\n            {\n                content: \"Create a new contact\",\n                trigger: '.o-kanban-button-new',\n            },\n            {\n                content: \"Check that Company is checked by default, and not Individual\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"company\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Select the individual radio button\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]',\n            },\n            {\n                content: \"Open the debug menu\",\n                trigger: '.o_debug_manager button',\n            },\n            {\n                content: \"Click the Set Defaults menu\",\n                trigger: '.o_debug_manager .dropdown-item:contains(Set Defaults)',\n            },\n            {\n                content: \"Choose Company Type = Individual\",\n                trigger: '#formview_default_fields',\n                run: function () {\n                    const element_field = document.querySelector('select#formview_default_fields');\n                    element_field.value = 'company_type';\n                    element_field.dispatchEvent(new Event(\"change\"));\n                },\n            },\n            {\n                content: \"Check that there are conditions\",\n                trigger: '#formview_default_conditions',\n            },\n            {\n                content: \"Save the new default\",\n                trigger: 'footer button:contains(Save default)',\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                trigger: '.o_action_manager > .o_kanban_view .o-kanban-button-new',\n            },\n            {\n                content: \"Check that Individual is checked instead of Company\",\n                trigger: '.o_field_widget[name=\"company_type\"] input[data-value=\"person\"]:checked',\n                run: function () {},\n            },\n            {\n                content: \"Discard the contact creation\",\n                trigger: 'button.o_form_button_cancel',\n            },\n            {\n                content: \"Wait for discard\",\n                trigger: '.o_control_panel .o-kanban-button-new',\n                run() {},\n            },\n        ]\n    });\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category('web_tour.tours').add('mailing_campaign', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: 'Select the \"Email Marketing\" app',\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        },\n        {\n            content: 'Select \"Campaings\" Navbar item',\n            trigger: '.o_nav_entry[data-menu-xmlid=\"mass_mailing.menu_email_campaigns\"]',\n        },\n        {\n            content: 'Select \"Newsletter\" campaign',\n            trigger: '.oe_kanban_card:contains(\"Newsletter\")',\n        },\n        {\n            content: 'Add a line (create new mailing)',\n            trigger: '.o_field_x2many_list_row_add a',\n        },\n        {\n            content: 'Pick the basic theme',\n            trigger: 'iframe',\n            run(actions) {\n                // For some reason the selectors inside the iframe cannot be triggered.\n                const link = this.$anchor[0].contentDocument.querySelector('#basic');\n                actions.click(link);\n            }\n        },\n        {\n            content: 'Fill in Subject',\n            trigger: '#subject_0',\n            run: 'text TestFromTour',\n        },\n        {\n            content: 'Fill in Mailing list',\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: 'Pick \"Newsletter\" option',\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: 'Save form',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: 'Check that newly created record is on the list',\n            trigger: '[name=\"mailing_mail_ids\"] td[name=\"subject\"]:contains(\"TestFromTour\")',\n            run: () => null,\n        },\n        ...stepUtils.saveForm(),\n    ]\n});\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('mailing_editor', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n}, {\n    trigger: 'button.o_list_button_add',\n}, {\n    trigger: 'div[name=\"contact_list_ids\"] .o_input_dropdown input[type=\"text\"]',\n}, {\n    trigger: 'div[name=\"contact_list_ids\"] .ui-state-active'\n}, {\n    content: 'choose the theme \"empty\" to edit the mailing with snippets',\n    trigger: '[name=\"body_arch\"] iframe #empty',\n}, {\n    content: 'wait for the editor to be rendered',\n    trigger: '[name=\"body_arch\"] iframe .o_editable[data-editor-message=\"DRAG BUILDING BLOCKS HERE\"]',\n    run: () => {},\n}, {\n    content: 'drag the \"Title\" snippet from the design panel and drop it in the editor',\n    trigger: '[name=\"body_arch\"] iframe #email_designer_default_body [name=\"Title\"] .oe_snippet_thumbnail',\n    run: function (actions) {\n        actions.drag_and_drop_native('[name=\"body_arch\"] iframe .o_editable', this.$anchor);\n    }\n}, {\n    content: 'wait for the snippet menu to finish the drop process',\n    trigger: '[name=\"body_arch\"] iframe #email_designer_header_elements:not(:has(.o_we_already_dragging))',\n    run: () => {}\n}, {\n    content: 'verify that the title was inserted properly in the editor',\n    trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n    run: () => {},\n}, {\n    trigger: 'button.o_form_button_save',\n}, {\n    content: 'verify that the save failed (since the field \"subject\" was not set and it is required)',\n    trigger: 'label.o_field_invalid',\n    run: () => {},\n}, {\n    content: 'verify that the edited mailing body was not lost during the failed save',\n    trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n    run: () => {},\n}, {\n    trigger: 'input#subject_0',\n    run: 'text TestFromTour',\n}, {\n    trigger: '.o_form_view', // blur previous input\n},\n...stepUtils.saveForm(),\n{\n    trigger: 'iframe .o_editable',\n    run: () => {},\n}]});\n", "/** @odoo-module **/\n    \nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { boundariesIn, setSelection } from \"@web_editor/js/editor/odoo-editor/src/utils/utils\";\n\nregistry.category(\"web_tour.tours\").add('mailing_editor_theme', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: \"Select the 'Email Marketing' app.\",\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        },\n        {\n            content: \"Click on the create button to create a new mailing.\",\n            trigger: 'button.o_list_button_add',\n        },\n        {\n            content: \"Fill in Subject\",\n            trigger: '#subject_0',\n            run: 'text Test Basic Theme',\n        },\n        {\n            content: \"Fill in Mailing list\",\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: \"Pick 'Newsletter' option\",\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: \"Pick the basic theme\",\n            trigger: 'iframe #basic',\n            extra_trigger: 'iframe .o_mail_theme_selector_new',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null, // no click, just check\n        },\n        {\n            content: \"Click on the New button to create another mailing\",\n            trigger: 'button.o_form_button_create',\n        },\n        {\n            content: \"Fill in Subject\",\n            trigger: '#subject_0',\n            extra_trigger: 'iframe .o_mail_theme_selector_new',\n            run: 'text Test Newsletter Theme',\n        },\n        {\n            content: \"Fill in Mailing list\",\n            trigger: '#contact_list_ids_0',\n            run: 'text Newsletter',\n        },\n        {\n            content: \"Pick 'Newsletter' option\",\n            trigger: '.o_input_dropdown a:contains(Newsletter)',\n        },\n        {\n            content: \"Pick the newsletter theme\",\n            trigger: 'iframe #newsletter',\n        },\n        {\n            content: \"Make sure the snippets menu is displayed\",\n            trigger: 'iframe #oe_snippets',\n            run: () => null, // no click, just check\n        },\n        {\n            content: 'Save form',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: 'Go back to previous mailing',\n            trigger: 'button.o_pager_previous',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null,\n        },\n        {\n            content: \"Add some content to be selected afterwards\",\n            trigger: 'iframe p',\n            run: 'text content',\n        },\n        {\n            content: \"Select text\",\n            trigger: 'iframe p:contains(content)',\n            run() {\n                setSelection(...boundariesIn(this.$anchor[0]), false);\n            }\n        },\n        {\n            content: \"Make sure the floating toolbar is visible\",\n            trigger: '#toolbar.oe-floating[style*=\"visible\"]',\n            run: () => null,\n        },\n        {\n            content: \"Open the color picker\",\n            trigger: '#toolbar #oe-text-color',\n        },\n        {\n            content: \"Pick a color\",\n            trigger: '#toolbar button[data-color=\"o-color-1\"]',\n        },\n        {\n            content: \"Check that color was applied\",\n            trigger: 'iframe p font.text-o-color-1',\n            run: () => null,\n        },\n        {\n            content: 'Save changes',\n            trigger: '.o_form_button_save',\n        },\n        {\n            content: \"Go to 'Mailings' list view\",\n            trigger: '.breadcrumb a:contains(Mailings)'\n        },\n        {\n            content: \"Open newly created mailing\",\n            trigger: 'td:contains(\"Test Basic Theme\")',\n        },\n        {\n            content: \"Make sure the snippets menu is hidden\",\n            trigger: 'iframe html:has(#oe_snippets.d-none)',\n            run: () => null,\n        },\n        {\n            content: \"Select content\",\n            trigger: 'iframe p:contains(content)',\n            run() {\n                setSelection(...boundariesIn(this.$anchor[0]), false);\n            }\n        },\n        {\n            content: \"Make sure the floating toolbar is visible\",\n            trigger: '#toolbar.oe-floating[style*=\"visible\"]',\n            run: () => null,\n        },\n        ...stepUtils.discardForm(),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: unsubscribe from a mailing done on documents (aka not on contacts or\n * mailing lists). We assume email is not member of any mailing list in this test.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_document', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of our services and will not be contacted again.')\",\n        }, {\n            content: \"No warning should be displayed\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted:not(:has(p:contains('You will not receive any news from those mailing lists you are a member of')))\",\n        }, {\n            contnet: \"Warning will not receive anything anymore\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not hear from us anymore.')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n\n\n/*\n * Tour: unsubscribe from a mailing done on documents (aka not on contacts or\n * mailing lists). We assume email is member of mailing lists in this test.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_document_with_lists', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of our services and will not be contacted again.')\",\n        }, {\n            content: \"Display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List1')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: unsubscribe from a mailing done on lists (aka playing with opt-out flag\n * instead of directly blocking emails).\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_list', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of the List1, List2 mailing list')\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n            isCheck: true,\n        },\n    ],\n});\n\n\n/*\n * Tour: unsubscribe from a mailing done on lists (aka playing with opt-out flag\n * instead of directly blocking emails), then play with list subscriptions and\n * blocklist addition / removal. This is mainly an extended version of the tour\n * hereabove, easing debug and splitting checks.\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_list_with_update', {\n    test: true,\n    steps: () => [\n        {\n            content: \"Confirmation unsubscribe is done\",\n            trigger: \"div#o_mailing_subscription_info span:contains('You are no longer part of the List1, List2 mailing list')\",\n        }, {\n            content: \"List1 is present, just opt-outed\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List1') span:contains('Not subscribed')\",\n        }, {\n            content: \"List3 is present, opt-outed (test starting data)\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Not subscribed')\",\n        }, {\n            content: \"List2 is proposed (not member -> proposal to join)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional li.list-group-item:contains('List2')\",\n        }, {\n            content: \"List4 is not proposed (not member but not private)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional:not(:has(li.list-group-item:contains('List4')))\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"This should disable the 'Update my subscriptions' (Apply changes) button\",\n            trigger: \"div#o_mailing_subscription_blocklist:not(button#button_form_send)\",\n            isCheck: true,\n        }, {\n            content: \"Revert exclusion list\",\n            trigger: \"div#button_blocklist_remove\",\n        }, {\n            content: \"Confirmation exclusion list is removed\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email removed from our blocklist')\",\n        },  {\n            content: \"'Update my subscriptions' button usable again\",\n            trigger: \"button#button_form_send:not([disabled])\",\n            isCheck: true,\n        }, {\n            content: \"Choose the mailing list 3 to come back\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List3']\",\n        }, {\n            content: \"Add list 2\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional input[title='List2']\",\n        }, {\n            content: \"Update subscription\",\n            trigger: \"button#button_form_send\",\n        }, {\n            content: \"Confirmation changes are done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Membership updated')\",\n        }, {\n            content: \"List 3 is noted as subscribed again\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Subscribed')\",\n        }, {\n            content: \"List 2 has joined the subscriptions\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List2') span:contains('Subscribed')\",\n        }, {\n            content: \"No list in proposals\",\n            trigger: \"div#o_mailing_subscription_form_manage:not(:has(ul#o_mailing_subscription_form_lists_additional))\",\n        }, {\n            content: \"Feedback area is not displayed (nothing opt-out or no blocklist done, no feedback required)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(fieldset)\",\n        }, {\n            content: \"Now exclude me (again)\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"Should display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List2')\",\n            extra_trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List3')\",\n        }, {\n            content: \"Give a reason for blocklist (first one)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n/*\n * Tour: use 'my' portal page of mailing to manage mailing lists subscription\n * as well as manage blocklist (add / remove my own email from block list).\n */\nregistry.category(\"web_tour.tours\").add('mailing_portal_unsubscribe_from_my', {\n    test: true,\n    steps: () => [\n       {\n            content: \"List1 is present, opt-in member\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List1') span:contains('Subscribed')\",\n        }, {\n            content: \"List3 is present, opt-outed (test starting data)\",\n            trigger: \"ul#o_mailing_subscription_form_lists li.list-group-item:contains('List3') span:contains('Not subscribed')\",\n        }, {\n            content: \"List2 is proposed (not member -> proposal to join)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional li.list-group-item:contains('List2')\",\n        }, {\n            content: \"List4 is not proposed (not member but not private)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional:not(:has(li.list-group-item:contains('List4')))\",\n        },{\n            content: \"List5 is not proposed (not member and not public)\",\n            trigger: \"body:not(:has(li.list-group-item:contains('List5')))\",\n        }, {\n            content: \"Feedback area is not displayed (nothing done, no feedback required)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(fieldset)\",\n        }, {\n            content: \"List3: come back (choose to opt-in instead of opt-out)\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List3']\",\n        }, {\n            content: \"List2: join (opt-in, not already member)\",\n            trigger: \"ul#o_mailing_subscription_form_lists_additional input[title='List2']\",\n        }, {\n            content: \"List1: opt-out\",\n            trigger: \"ul#o_mailing_subscription_form_lists input[title='List1']\",\n        }, {\n            content: \"Update subscription\",\n            trigger: \"button#button_form_send\",\n        }, {\n            content: \"Confirmation changes are done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Membership updated')\",\n        }, {\n            content: \"Should make feedback reasons choice appear (feedback still not displayed, linked to reasons)\",\n            trigger: \"div#o_mailing_portal_subscription fieldset\",\n            extra_trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose first reason, which should not display feedback (see data)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Feedback textarea not displayed (see data)\",\n            trigger: \"div#o_mailing_portal_subscription:not(textarea)\",\n        }, {\n            content: \"Choose 'Other' reason\",\n            trigger: \"fieldset label:contains('Other')\",\n        }, {\n            content: \"This should display the Feedback area\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Write feedback reason\",\n            trigger: \"textarea[name='feedback']\",\n            run: \"text My feedback\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n        }, {\n            content: \"Once sent feedback area is readonly\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason[disabled]\",\n            extra_trigger: \"textarea[disabled]\",\n            isCheck: true,\n        }, {\n            content: \"Now exclude me\",\n            trigger: \"div#button_blocklist_add\",\n        }, {\n            content: \"Confirmation exclusion is done\",\n            trigger: \"div#o_mailing_subscription_update_info span:contains('Email added to our blocklist')\",\n        }, {\n            content: \"This should disable the 'Update my subscriptions' (Apply changes) button\",\n            trigger: \"div#o_mailing_subscription_blocklist:not(button#button_form_send)\",\n            isCheck: true,\n        }, {\n            content: \"This should enabled Feedback again\",\n            trigger: \"div#o_mailing_portal_subscription textarea\",\n            isCheck: true,\n        }, {\n            content: \"Display warning about mailing lists\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted p:contains('You will not receive any news from those mailing lists you are a member of')\",\n        }, {\n            content: \"Warning should contain reference to memberships\",\n            trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List2')\",\n            extra_trigger: \"div#o_mailing_subscription_form_blocklisted li strong:contains('List3')\",\n        }, {\n            content: \"Give a reason for blocklist (first one)\",\n            trigger: \"fieldset input.o_mailing_subscription_opt_out_reason:first\",\n        }, {\n            content: \"Hit Send\",\n            trigger: \"button#button_feedback\",\n        }, {\n            content: \"Confirmation feedback is sent\",\n            trigger: \"div#o_mailing_subscription_feedback_info span:contains('Sent. Thanks you for your feedback!')\",\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { markup } from \"@odoo/owl\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('mass_mailing_code_view_tour', {\n    url: '/web?debug=tests',\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n        }, {\n            trigger: 'button.o_list_button_add',\n        }, {\n            trigger: 'input#subject_0',\n            content: markup('Pick the <b>email subject</b>.'),\n            position: 'bottom',\n            run: 'text Test'\n        }, {\n            trigger: 'div[name=\"contact_list_ids\"] .o_input_dropdown input[type=\"text\"]',\n            content: 'Click on the dropdown to open it and then start typing to search.',\n        }, {\n            trigger: 'div[name=\"contact_list_ids\"] .ui-state-active',\n            content: 'Select item from dropdown',\n            run: 'click',\n        }, {\n            trigger: 'div[name=\"body_arch\"] iframe #default',\n            content: markup('Choose this <b>theme</b>.'),\n            run: 'click',\n        }, {\n            trigger: 'iframe .o_codeview_btn',\n            content: markup('Click here to switch to <b>code view</b>'),\n            run: 'click'\n        }, {\n            trigger: 'iframe .o_codeview',\n            content: ('Remove all content from codeview'),\n            run: function () {\n                const iframe = document.querySelector('.wysiwyg_iframe');\n                const iframeDocument = iframe.contentWindow.document;\n                let element = iframeDocument.querySelector(\".o_codeview\");\n                element.value = '';\n            }\n        }, {\n            trigger: 'iframe .o_codeview_btn',\n            content: markup('Click here to switch back from <b>code view</b>'),\n            run: 'click'\n        }, {\n            trigger: '[name=\"body_arch\"] iframe .o_mail_wrapper_td',\n            content: 'Verify that the dropable zone was not removed',\n            run: () => {},\n        }, {\n            trigger: '[name=\"body_arch\"] iframe #email_designer_default_body [name=\"Title\"] .oe_snippet_thumbnail',\n            content: 'Drag the \"Title\" snippet from the design panel and drop it in the editor',\n            run: function (actions) {\n                actions.drag_and_drop_native('[name=\"body_arch\"] iframe .o_editable', this.$anchor);\n            }\n        }, {\n            trigger: '[name=\"body_arch\"] iframe .o_editable h1',\n            content: 'Verify that the title was inserted properly in the editor',\n            run: () => {},\n        },\n        ...stepUtils.discardForm(),\n    ]\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_tabs', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n    },\n    {\n        content: \"Click on the 'Start From Scratch' template.\",\n        trigger: 'iframe #empty',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Click on the empty 'DRAG BUILDING BLOCKS HERE' area.\",\n        trigger: 'iframe .oe_structure.o_mail_no_options',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: 'iframe .o_we_customize_panel .snippet-option-DesignTab',\n        run: () => null, // it's a check\n    },\n    {\n        content: \"Click on the style tab.\",\n        trigger: 'iframe .o_we_customize_snippet_btn',\n    },\n    {\n        content: \"Click on the 'Design' tab.\",\n        trigger: 'iframe .o_we_customize_design_btn',\n    },\n    {\n        content: \"Verify that the customize panel is not empty.\",\n        trigger: 'iframe .o_we_customize_panel .snippet-option-DesignTab',\n        run: () => null, // it's a check\n    },\n    ...stepUtils.discardForm(),\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_toolbar', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n    },\n    {\n        content: \"Wait for the theme selector to load.\",\n        trigger: 'iframe .o_mail_theme_selector_new',\n    },\n    {\n        content: \"Make sure there does not exist a floating toolbar\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (iframeDocument.querySelector('#toolbar.oe-floating')) {\n                console.error('There should not be a floating toolbar in the iframe');\n            }\n        },\n    },\n    {\n        content: \"Make sure the empty template is an option on non-mobile devices.\",\n        trigger: 'iframe #empty',\n        run: () => null,\n    },\n    {\n        content: \"Click on the default 'welcome' template.\",\n        trigger: 'iframe #default',\n    },\n    { // necessary to wait for the cursor to be placed in the first p\n      // and to avoid leaving the page before the selection is added\n        content: \"Wait for template selection event to be over.\",\n        trigger: 'iframe .o_editable.theme_selection_done',\n    },\n    {\n        content: \"Make sure the snippets menu is not hidden\",\n        trigger: 'iframe #oe_snippets:not(.d-none)',\n        run: () => null,\n    },\n    {\n        content: \"Wait for .s_text_block to be populated\",\n        trigger: 'iframe .s_text_block p',\n        run: () => null,\n    },\n    {\n        content: \"Click and select p block inside the editor\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeWindow = this.$anchor[0].contentWindow;\n            const iframeDocument = iframeWindow.document;\n            const p = iframeDocument.querySelector('.s_text_block p');\n            p.click();\n            const selection = iframeWindow.getSelection();\n            const range = iframeDocument.createRange();\n            range.selectNodeContents(p);\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n    },\n    {\n        content: \"Make sure the toolbar is there\",\n        trigger: 'iframe #oe_snippets .o_we_customize_panel #toolbar',\n        run: () => null,\n    },\n    ...stepUtils.discardForm(),\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('snippets_mailing_menu_toolbar_mobile', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(), {\n        content: \"Select the 'Email Marketing' app.\",\n        trigger: '.o_app[data-menu-xmlid=\"mass_mailing.mass_mailing_menu_root\"]',\n    },\n    {\n        content: \"Click on the create button to create a new mailing.\",\n        trigger: 'button.o_list_button_add',\n        mobile: true,\n    },\n    {\n        content: \"Check templates available in theme selector\",\n        trigger: 'iframe .o_mail_theme_selector_new',\n        run: function () {\n            if (this.$anchor[0].querySelector('#empty')) {\n                console.error('The empty template should not be visible on mobile.');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Make sure the toolbar isn't floating\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (iframeDocument.querySelector('#toolbar.oe-floating')) {\n                console.error('There should not be a floating toolbar in the iframe');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Click on the 'Start From Scratch' template.\",\n        trigger: 'iframe #default',\n        mobile: true,\n    },\n    {\n        content: \"Select an editable element\",\n        trigger: 'iframe .s_text_block',\n        mobile: true,\n    },\n    {\n        content: \"Make sure the snippets menu is hidden\",\n        trigger: 'iframe',\n        run: function () {\n            const iframeDocument = this.$anchor[0].contentDocument;\n            if (!iframeDocument.querySelector('#oe_snippets.d-none')) {\n                console.error('The snippet menu should be hidden');\n            }\n        },\n        mobile: true,\n    },\n    {\n        content: \"Make sure the toolbar is there\",\n        trigger: 'iframe #toolbar.oe-floating',\n        run: () => null, // it's a check\n        mobile: true,\n    },\n    ...stepUtils.discardForm().map(command => ({...command, mobile: true})),\n    ]\n});\n", "/** @odoo-module */\nimport { registry } from \"@web/core/registry\"\n\nregistry.category(\"web_tour.tours\").add(\"web_enterprise.test_studio_list_upsell\",\n    {\n        test: true,\n        steps: () => [\n            {\n                trigger: \".o_list_view\",\n            },\n            {\n                trigger: \".o_optional_columns_dropdown > button\",\n            },\n            {\n                trigger: \".o_optional_columns_dropdown .dropdown-item-studio\",\n                isCheck: true,\n            },\n        ]\n    }\n);\n", "/** @odoo-module */\n\nexport function assertEqual(actual, expected) {\n    if (actual !== expected) {\n        throw new Error(`Assert failed: expected: ${expected} ; got: ${actual}`);\n    }\n}\n\nexport async function nextTick() {\n    await new Promise((resolve) => setTimeout(resolve));\n    await new Promise((resolve) => requestAnimationFrame(resolve));\n}\n\nexport function stepNextTick() {\n    // FIXME: this probably should be handled by the tour-as-macro infrastructure\n    // The case is to have a dom node with a constant selector. It will trigger the next step\n    // even though the element will be changed after, resulting in non-deterministic bugs.\n    // This is especially the case in the case of inputs, where we'd want to assert their value changed\n    return {\n        trigger: \"body\",\n        run() {\n            return nextTick();\n        },\n    };\n}\n\nexport function stepNotInStudio(trigger) {\n    return {\n        extra_trigger: \"body:not(:has(.o_studio))\",\n        trigger: trigger || \"body\",\n        isCheck: true,\n    };\n}\n", "/** @odoo-module */\n\nimport { _t } from \"@web/core/l10n/translation\";\nimport utils from \"@web_studio/utils\";\nimport { registry } from \"@web/core/registry\";\nimport { markup } from \"@odoo/owl\";\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_home_menu_background_tour\", {\n    url: \"/web\",\n    sequence: 1260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_navbar_item\",\n            content: markup(\n                _t(\"Want to customize the background? Let\u2019s activate <b>Odoo Studio</b>.\")\n            ),\n            position: \"bottom\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_home_studio_menu .dropdown-toggle\",\n            content: _t(\"Click here.\"),\n            position: \"right\",\n        },\n        {\n            trigger:\n                \".o_web_studio_home_studio_menu .dropdown-menu .dropdown-item.o_web_studio_change_background\",\n            content: markup(_t(\"Change the <b>background</b>, make it yours.\")),\n            position: \"bottom\",\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_new_app_tour\", {\n    url: \"/web#action=studio&mode=home_menu\",\n    sequence: 1270,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_new_app\",\n            auto: true,\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n            content: markup(\n                _t(\"I bet you can <b>build an app</b> in 5 minutes. Ready for the challenge?\")\n            ),\n            position: \"top\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_name > input\",\n            content: markup(_t(\"How do you want to <b>name</b> your app? Library, Academy, \u2026?\")),\n            position: \"right\",\n            run: \"text \" + utils.randomString(6),\n        },\n        {\n            trigger: \".o_web_studio_selectors .o_web_studio_selector:eq(2)\",\n            content: _t(\"Now, customize your icon. Make it yours.\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n            content: _t(\"Go on, you are almost done!\"),\n            position: \"top\",\n        },\n        {\n            trigger: \".o_web_studio_menu_creator > input\",\n            content: markup(\n                _t(\"How do you want to name your first <b>menu</b>? My books, My courses?\")\n            ),\n            position: \"right\",\n            run: \"text \" + utils.randomString(6),\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n            content: _t(\n                \"Continue to configure some typical behaviors for your new type of object.\"\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n            content: markup(\n                _t(\"All set? You are just one click away from <b>generating your first app</b>.\")\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_char\",\n            content: markup(\n                _t(\n                    \"Nicely done! Let\u2019s build your screen now; <b>drag</b> a <i>text field</i> and <b>drop</b> it in your view, on the right.\"\n                )\n            ),\n            position: \"bottom\",\n            run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n            timeout: 60000 /* previous step reloads registry, etc. - could take a long time */,\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_wrap_label label\",\n            content: markup(_t(\"To <b>customize a field</b>, click on its <i>label</i>.\")),\n            position: \"bottom\",\n        },\n        {\n            trigger: '.o_web_studio_sidebar input[name=\"string\"]',\n            content: markup(\n                _t(\n                    \"Here, you can <b>name</b> your field (e.g. Book reference, ISBN, Internal Note, etc.).\"\n                )\n            ),\n            position: \"bottom\",\n            run: \"text My Field\",\n        },\n        {\n            // wait for the field to be renamed\n            extra_trigger: \".o_web_studio_form_view_editor .o_wrap_label label:contains(My Field)\",\n            trigger: \".o_web_studio_sidebar .o_web_studio_new\",\n            content: markup(\n                _t(\"Good job! To add more <b>fields</b>, come back to the <i>Add tab</i>.\")\n            ),\n            position: \"bottom\",\n            // the rename operation (/web_studio/rename_field + /web_studio/edit_view)\n            // takes a while and sometimes reaches the default 10s timeout\n            timeout: 20000,\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_selection\",\n            content: markup(\n                _t(\"Drag & drop <b>another field</b>. Let\u2019s try with a <i>selection field</i>.\")\n            ),\n            position: \"bottom\",\n            run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n        },\n        {\n            trigger: \".o_web_studio_selection_editor .o_web_studio_add_selection input\",\n            content: markup(\n                _t(\"Create your <b>selection values</b> (e.g.: Romance, Polar, Fantasy, etc.)\")\n            ),\n            position: \"top\",\n            run: \"text \" + utils.randomString(6),\n        },\n        {\n            trigger:\n                \".o_web_studio_selection_editor .o_web_studio_add_selection .o-web-studio-interactive-list-edit-item\",\n            auto: true,\n        },\n        {\n            trigger: \".modal-footer > button:eq(0)\",\n            auto: true,\n        },\n        {\n            trigger: \".o_web_studio_sidebar [name='string']\",\n            auto: true,\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o-mail-Chatter\",\n            content: _t(\"Click to edit messaging features on your model.\"),\n            position: \"top\",\n            timeout: 15000, // this can take some time on 'slow' builds (coverage, etc.)\n        },\n        {\n            trigger: '.o_web_studio_sidebar input[name=\"email_alias\"]',\n            content: markup(\n                _t(\n                    \"Set an <b>email alias</b>. Then, try to send an email to this address; it will create a document automatically for you. Pretty cool, huh?\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n            content: markup(\n                _t(\n                    \"Let\u2019s check the result. Close Odoo Studio to get an <b>overview of your app</b>.\"\n                )\n            ),\n            position: \"left\",\n        },\n        {\n            trigger: \".o_field_char.o_required_modifier > input\",\n            auto: true,\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o_control_panel .o_form_button_save\",\n            content: _t(\"Save.\"),\n            position: \"right\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item\",\n            extra_trigger: \".o_form_view .o_form_saved\",\n            content: markup(\n                _t(\n                    \"Wow, nice! And I\u2019m sure you can make it even better! Use this icon to open <b>Odoo Studio</b> and customize any screen.\"\n                )\n            ),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o_web_studio_menu .o_menu_sections li:contains(Views)\",\n            content: markup(_t(\"Want more fun? Let\u2019s create more <b>views</b>.\")),\n            position: \"bottom\",\n        },\n        {\n            trigger:\n                '.o_web_studio_view_category .o_web_studio_view_type.o_web_studio_inactive[data-type=\"kanban\"] .o_web_studio_thumbnail',\n            content: markup(_t(\"What about a <b>Kanban view</b>?\")),\n            position: \"bottom\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_new\",\n            content: markup(_t(\"Now you\u2019re on your own. Enjoy your <b>super power</b>.\")),\n            position: \"bottom\",\n            isCheck: true,\n        },\n    ],\n});\n", "/** @odoo-module */\n\nimport { browser } from \"@web/core/browser/browser\";\nimport { registry } from \"@web/core/registry\";\nimport { randomString } from \"@web_studio/utils\";\nimport {\n    assertEqual,\n    stepNextTick,\n    stepNotInStudio,\n} from \"@web_studio/../tests/tours/tour_helpers\";\n\nconst localStorage = browser.localStorage;\nlet createdAppString = null;\nlet createdMenuString = null;\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_main_and_rename\", {\n    url: \"/web?debug=1\",\n    test: true,\n    steps: () => [\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n        },\n        {\n            // the next steps are here to create a new app\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_name > input\",\n            run: \"text \" + (createdAppString = randomString(6)),\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            trigger: \".o_web_studio_menu_creator > input\",\n            run: \"text \" + (createdMenuString = randomString(6)),\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            // disable chatter in model configurator, we'll test adding it on later\n            trigger: 'input[name=\"use_mail\"]',\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            // toggle the home menu outside of studio and come back in studio\n            extra_trigger: \".o_menu_toggle:not(.o_menu_toggle_back)\",\n            trigger: \".o_web_studio_leave > a.btn\",\n            timeout: 60000 /* previous step reloads registry, etc. - could take a long time */,\n        },\n        {\n            extra_trigger: `.o_web_client:not(.o_in_studio)` /* wait to be out of studio */,\n            trigger: \".o_menu_toggle:not(.o_menu_toggle_back)\",\n            timeout: 60000 /* previous step reloads registry, etc. - could take a long time */,\n        },\n        {\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            // open the app creator and leave it\n            trigger: \".o_web_studio_new_app\",\n        },\n        {\n            extra_trigger: \".o_web_studio_app_creator\",\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        {\n            // go back to the previous app\n            trigger: \".o_home_menu\",\n            run: () => {\n                window.dispatchEvent(\n                    new KeyboardEvent(\"keydown\", {\n                        bubbles: true,\n                        key: \"Escape\",\n                    })\n                );\n            },\n        },\n        {\n            // this should open the previous app outside of studio\n            extra_trigger: `.o_web_client:not(.o_in_studio) .o_menu_brand:contains(${createdAppString})`,\n            // go back to the home menu\n            trigger: \".o_menu_toggle:not(.o_menu_toggle_back)\",\n        },\n        {\n            trigger: \"input.o_search_hidden\",\n            // Open Command Palette\n            run: \"text \" + createdMenuString[0],\n        },\n        {\n            trigger: \".o_command_palette_search input\",\n            run: \"text \" + \"/\" + createdMenuString,\n        },\n        {\n            // search results should have been updated\n            extra_trigger: `.o_command.focused:contains(${createdAppString} / ${createdMenuString})`,\n            trigger: \".o_command_palette\",\n            // Close the Command Palette\n            run: () => {\n                window.dispatchEvent(\n                    new KeyboardEvent(\"keydown\", {\n                        key: \"Escape\",\n                    })\n                );\n            },\n        },\n        {\n            // enter Studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n        },\n        {\n            // edit an app\n            extra_trigger: \".o_studio_home_menu\",\n            trigger: `.o_app[data-menu-xmlid*=\"studio\"]:contains(${createdAppString})`,\n            run: function () {\n                // We can't emulate a hover to display the edit icon\n                const editIcon = this.$anchor[0].querySelector(\".o_web_studio_edit_icon\");\n                editIcon.style.visibility = \"visible\";\n                editIcon.click();\n            },\n        },\n        {\n            // design the icon\n            // TODO: we initially tested this (change an app icon) at the end but a\n            // long-standing bug (KeyError: ir.ui.menu.display_name, caused by a registry\n            // issue with multiple workers) on runbot prevent us from doing it. It thus have\n            // been moved at the beginning of this test to avoid the registry to be reloaded\n            // before the write on ir.ui.menu.\n            trigger: \".o_web_studio_selector:eq(0)\",\n        },\n        {\n            trigger: \".o_web_studio_palette > .o_web_studio_selector:first\",\n        },\n        {\n            trigger: \".modal-footer .btn.btn-primary\",\n        },\n        {\n            // click on the created app\n            trigger: `.o_app[data-menu-xmlid*=\"studio\"]:contains(${createdAppString})`,\n        },\n        {\n            // create a new menu\n            trigger: \".o_main_navbar .o_web_edit_menu\",\n        },\n        {\n            trigger: \"footer.modal-footer .js_add_menu\",\n        },\n        {\n            trigger: 'input[name=\"menuName\"]',\n            run: \"text \" + (createdMenuString = randomString(6)),\n        },\n        {\n            trigger: 'div.o_web_studio_menu_creator_model_choice input[value=\"existing\"]',\n        },\n        {\n            trigger: \"div.o_web_studio_menu_creator_model .o_record_selector input\",\n            run: \"text a\",\n        },\n        {\n            trigger:\n                \".o_record_selector .o-autocomplete--dropdown-menu > li > a:not(:has(.fa-spin))\",\n        },\n        {\n            extra_trigger: \".o_record_selector :not(.o-autocomplete dropdown-menu)\",\n            trigger: '.o_web_studio_add_menu_modal button:contains(Confirm):not(\".disabled\")',\n        },\n        {\n            extra_trigger: \":not(.o_inactive_modal) .o-web-studio-appmenu-editor\",\n            trigger: '.o-web-studio-appmenu-editor button:contains(Confirm):not(\".disabled\")',\n        },\n        {\n            // check that the Studio menu is still there\n            extra_trigger: \".o_web_studio_menu\",\n            // switch to form view\n            trigger: '.o_web_studio_views_icons > a[title=\"Form\"]',\n        },\n        {\n            // wait for the form editor to be rendered because the sidebar is the same\n            extra_trigger: \".o_web_studio_form_view_editor\",\n            // unfold 'Existing Fieldqs' section\n            trigger: \".o_web_studio_existing_fields_header\",\n        },\n        {\n            // add an new field\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_char\",\n            run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n        },\n        {\n            // click on the field\n            trigger: \".o_web_studio_form_view_editor .o_wrap_label:first label\",\n            // when it's there\n            extra_trigger: '.o_web_studio_sidebar input[name=\"technical_name\"]',\n        },\n        {\n            // rename the label\n            trigger: '.o_web_studio_sidebar input[name=\"string\"]',\n            run: \"text My Coucou Field\",\n        },\n        stepNextTick(),\n        {\n            // verify that the field name has changed and change it\n            trigger: '.o_web_studio_sidebar input[name=\"technical_name\"]',\n            run(helper) {\n                assertEqual(this.$anchor[0].value, \"my_coucou_field\");\n                helper.text(\"coucou\");\n            },\n            // the rename operation (/web_studio/rename_field + /web_studio/edit_view)\n            // takes a while and sometimes reaches the default 10s timeout\n            timeout: 20000,\n        },\n        {\n            // click on \"Add\" tab\n            trigger: \".o_web_studio_sidebar .o_web_studio_new\",\n            // the rename operation (/web_studio/rename_field + /web_studio/edit_view)\n            // takes a while and sometimes reaches the default 10s timeout\n            timeout: 20000,\n        },\n        {\n            // add a new field\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_char\",\n            run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n        },\n        {\n            // rename the field with the same name\n            trigger: '.o_web_studio_sidebar input[name=\"technical_name\"]',\n            run: \"text coucou\",\n        },\n        {\n            // an alert dialog should be opened\n            trigger: \".modal-footer > button:first\",\n        },\n        {\n            // rename the label\n            trigger: '.o_web_studio_sidebar input[name=\"string\"]',\n            run: \"text COUCOU\",\n        },\n        stepNextTick(),\n        {\n            // verify that the field name has changed (post-fixed by _1)\n            trigger: '.o_web_studio_sidebar input[name=\"technical_name\"]',\n            run(helper) {\n                assertEqual(this.$anchor[0].value, \"coucou_1\");\n            },\n            // the rename operation (/web_studio/rename_field + /web_studio/edit_view)\n            // takes a while and sometimes reaches the default 10s timeout\n            timeout: 20000,\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_new\",\n        },\n        {\n            // add a monetary field --> create a currency field\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_monetary\",\n            run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n        },\n        {\n            // verify that the monetary field is in the view\n            extra_trigger:\n                '.o_web_studio_form_view_editor .o_wrap_label:eq(1) label:contains(\"New Monetary\")',\n            // switch the two first fields\n            trigger: \".o_web_studio_form_view_editor .o_inner_group:first .o-draggable:eq(1)\",\n            run: \"drag_and_drop_native .o_inner_group:first .o_web_studio_hook:first\",\n        },\n        {\n            // click on \"Add\" tab\n            extra_trigger:\n                '.o_web_studio_form_view_editor .o_wrap_label:eq(0) label:contains(\"New Monetary\")',\n            trigger: \".o_web_studio_sidebar .o_web_studio_new\",\n        },\n        {\n            // verify that the fields have been switched\n            extra_trigger:\n                '.o_web_studio_form_view_editor .o_wrap_label:eq(0) label:contains(\"New Monetary\")',\n            // add a m2m field\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_many2many\",\n            run: \"drag_and_drop_native .o_inner_group:first .o_web_studio_hook:first\",\n        },\n        {\n            // type something in the modal\n            trigger: '[name=\"relation_id\"] input.o-autocomplete--input',\n            in_modal: true,\n            // we are sure \"Activity\" exists since studio depends on mail.\n            //Also, it is determinisic and field names should not conflict too much.\n            run: \"text mail.activity\",\n        },\n        {\n            // select Activity as model\n            trigger:\n                '[name=\"relation_id\"] .o-autocomplete--dropdown-menu li a:not(:has(.fa-spin)):contains(Activity)',\n            in_modal: true,\n            run(helpers) {\n                const el = Array.from(this.$anchor).find((el) => el.textContent === \"Activity\");\n                return helpers.click($(el));\n            },\n        },\n        {\n            in_modal: true,\n            trigger: \"button:contains(Confirm):not(.disabled)\",\n        },\n        {\n            // select the m2m to set its properties\n            trigger: \".o_wrap_input:has(.o_field_many2many)\",\n            timeout: 15000, // creating M2M relations can take some time...\n        },\n        {\n            // change the `widget` attribute\n            trigger: '.o_web_studio_sidebar [name=\"widget\"] .o_select_menu_toggler_slot',\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar [name='widget'] .o_select_menu_item_label:contains('(many2many_tags)')\",\n        },\n        {\n            // use colors on the m2m tags\n            trigger: '.o_web_studio_sidebar [name=\"color_field\"]',\n        },\n        {\n            // add a statusbar\n            trigger: \".o_web_studio_statusbar_hook\",\n        },\n        {\n            trigger: \".modal-footer .btn.btn-primary\",\n        },\n        {\n            trigger: \".o_statusbar_status\",\n        },\n        {\n            // verify that a default value has been set for the statusbar\n            trigger:\n                '.o_web_studio_sidebar [name=\"default_value\"] .o_select_menu_toggler_slot:contains(First Status)',\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_views_icons a[title=Form]\",\n        },\n        {\n            // verify Chatter can be added after changing view to form\n            extra_trigger: \".o_web_studio_add_chatter\",\n            // edit action\n            trigger: \".o_web_studio_menu .o_menu_sections li a:contains(Views)\",\n        },\n        {\n            // edit form view\n            trigger:\n                '.o_web_studio_view_category .o_web_studio_view_type[data-type=\"form\"] .o_web_studio_thumbnail',\n        },\n        {\n            // verify Chatter can be added after changing view to form\n            extra_trigger: \".o_web_studio_add_chatter\",\n            // switch in list view\n            trigger: '.o_web_studio_menu .o_web_studio_views_icons a[title=\"List\"]',\n        },\n        {\n            // wait for the list editor to be rendered because the sidebar is the same\n            extra_trigger: \".o_web_studio_list_view_editor\",\n            // unfold 'Existing Fieldqs' section\n            trigger: \".o_web_studio_existing_fields_header\",\n        },\n        {\n            // add an existing field (display_name)\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_field_char:contains(COUCOU)\",\n            run: \"drag_and_drop_native .o_web_studio_list_view_editor th.o_web_studio_hook:first\",\n        },\n        {\n            // verify that the field is correctly named\n            extra_trigger: '.o_web_studio_list_view_editor th:contains(\"COUCOU\")',\n            // leave Studio\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        {\n            // come back to the home menu to check if the menu data have changed\n            extra_trigger: \".o_web_client:not(.o_in_studio)\",\n            trigger: \".o_menu_toggle:not(.o_menu_toggle_back)\",\n        },\n        {\n            trigger: \"input.o_search_hidden\",\n            // Open Command Palette\n            run: \"text \" + createdMenuString[0],\n        },\n        {\n            trigger: \".o_command_palette_search input\",\n            run: \"text \" + \"/\" + createdMenuString,\n        },\n        {\n            // search results should have been updated\n            extra_trigger: `.o_command.focused:contains(${createdAppString} / ${createdMenuString})`,\n            trigger: \".o_command_palette\",\n            // Close the Command Palette\n            run: () => {\n                window.dispatchEvent(\n                    new KeyboardEvent(\"keydown\", {\n                        bubbles: true,\n                        key: \"Escape\",\n                    })\n                );\n            },\n        },\n        {\n            trigger: \".o_home_menu\",\n            // go back again to the app (using keyboard)\n            run: () => {\n                window.dispatchEvent(\n                    new KeyboardEvent(\"keydown\", {\n                        bubbles: true,\n                        key: \"Escape\",\n                    })\n                );\n            },\n        },\n        {\n            // wait to be back in the list view\n            extra_trigger: \".o_list_view\",\n            // re-open studio\n            trigger: \".o_web_studio_navbar_item\",\n        },\n        {\n            // modify the list view\n            trigger: \".o_web_studio_sidebar .o_web_studio_view\",\n        },\n        {\n            //select field you want to sort and based on that sorting will be applied on List view\n            trigger:\n                '.o_web_studio_sidebar .o_web_studio_sidebar_select[name=\"sort_by\"] .o_select_menu_toggler',\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_sidebar_select[name='sort_by'] .dropdown-item\",\n        },\n        {\n            //change order of sorting, Select order and change it\n            trigger:\n                '.o_web_studio_sidebar .o_web_studio_sidebar_select[name=\"sort_order\"] .o_select_menu_toggler',\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_sidebar_select[name='sort_order'] .dropdown-item:nth-child(2)\",\n        },\n        {\n            // edit action\n            trigger: '.o_web_studio_menu .o_menu_sections li a:contains(\"Views\")',\n        },\n        {\n            // add a kanban\n            trigger:\n                '.o_web_studio_view_category .o_web_studio_view_type.o_web_studio_inactive[data-type=\"kanban\"] .o_web_studio_thumbnail',\n        },\n        {\n            // add a dropdown\n            trigger: \".o_dropdown_kanban.o_web_studio_add_dropdown\",\n        },\n        {\n            trigger: \".modal-footer .btn.btn-primary\",\n        },\n        {\n            // select the dropdown for edition\n            trigger: \".o_dropdown_kanban:not(.o_web_studio_add_dropdown)\",\n        },\n        {\n            // enable \"Set Cover\" feature\n            trigger: \".o_web_studio_sidebar input[name=cover_value]\",\n        },\n        {\n            trigger: \".modal-footer .btn.btn-primary\",\n        },\n        {\n            // edit action\n            trigger: '.o_web_studio_menu .o_menu_sections li a:contains(\"Views\")',\n        },\n        {\n            // check that the kanban view is now active\n            extra_trigger:\n                '.o_web_studio_view_category .o_web_studio_view_type:not(.o_web_studio_inactive)[data-type=\"kanban\"]',\n            // add an activity view\n            trigger:\n                '.o_web_studio_view_category .o_web_studio_view_type.o_web_studio_inactive[data-type=\"activity\"] .o_web_studio_thumbnail',\n        },\n        {\n            extra_trigger: \".o_activity_view\",\n            // edit action\n            trigger: '.o_web_studio_menu .o_menu_sections li a:contains(\"Views\")',\n            timeout: 20000, // activating a view takes a while and sometimes reaches the default 10s timeout\n        },\n        {\n            // add a graph view\n            trigger:\n                '.o_web_studio_view_category .o_web_studio_view_type.o_web_studio_inactive[data-type=\"graph\"] .o_web_studio_thumbnail',\n        },\n        {\n            extra_trigger: \".o_graph_renderer\",\n            trigger: '.o_web_studio_menu .o_menu_sections li a:contains(\"Views\")',\n        },\n        {\n            extra_trigger: \".o_web_studio_views\",\n            // edit the search view\n            trigger:\n                '.o_web_studio_view_category .o_web_studio_view_type[data-type=\"search\"] .o_web_studio_thumbnail',\n        },\n        {\n            extra_trigger: \".o_web_studio_search_view_editor\",\n            trigger: \".o_menu_toggle:not(.o_menu_toggle_back)\",\n        },\n        {\n            trigger: \".o_web_studio_home_studio_menu .dropdown-toggle\",\n        },\n        {\n            // export all modifications\n            trigger: \".o_web_studio_export\",\n        },\n        {\n            // click on the created app\n            trigger: '.o_app[data-menu-xmlid*=\"studio\"]:last',\n        },\n        {\n            // switch to form view\n            trigger: '.o_web_studio_views_icons > a[title=\"Form\"]',\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor\",\n            // click on the view tab\n            trigger: \".o_web_studio_view\",\n        },\n        {\n            // click on the restore default view button\n            trigger: \".o_web_studio_restore\",\n        },\n        {\n            // click on the ok button\n            trigger: \".modal-footer .btn.btn-primary\",\n        },\n        {\n            // checks that the field doesn't exist anymore\n            extra_trigger: '.o_web_studio_form_view_editor:not(:has(.o_form_label))',\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        stepNotInStudio(\".o_form_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_hide_fields_tour\", {\n    url: \"/web?debug=1#action=studio&mode=home_menu\",\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_new_app\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: `\n        .o_web_studio_app_creator_name\n        > input`,\n            run: `text ${randomString(6)}`,\n        },\n        {\n            // make another interaction to show \"next\" button\n            trigger: `\n        .o_web_studio_selectors\n        .o_web_studio_selector:eq(2)`,\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: `\n        .o_web_studio_menu_creator\n        > input`,\n            run: `text ${randomString(6)}`,\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            // check that the Studio menu is still there\n            extra_trigger: \".o_web_studio_menu\",\n            trigger: \".o_web_studio_leave > a.btn\",\n            timeout: 60000 /* previous step reloads registry, etc. - could take a long time */,\n        },\n        {\n            trigger: \".oe_title input\",\n            run: \"text Test\",\n        },\n        {\n            trigger: \".o_form_button_save\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item\",\n        },\n        {\n            extra_trigger: \".o_web_studio_menu\",\n            trigger: `\n        .o_web_studio_views_icons\n        > a[title=\"List\"]`,\n        },\n        {\n            // wait for the list editor to be rendered because the sidebar is the same\n            extra_trigger: \".o_web_studio_list_view_editor\",\n            trigger: \".o_web_studio_existing_fields_header\",\n        },\n        {\n            trigger: `\n        .o_web_studio_sidebar\n        .o_web_studio_existing_fields\n        .o_web_studio_component:has(.o_web_studio_component_description:contains(display_name))`,\n            run: \"drag_and_drop_native .o_web_studio_list_view_editor .o_web_studio_hook\",\n        },\n        {\n            trigger: `\n        .o_list_table\n        th[data-name=\"display_name\"]`,\n        },\n        {\n            trigger: `\n        .o_web_studio_sidebar\n        [name=\"optional\"] .o_select_menu_toggler`,\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar [name='optional'] .o_select_menu_item:contains(Hide by default)\",\n        },\n        {\n            extra_trigger: '.o_list_table:not(:has(th[data-name=\"display_name\"]))',\n            trigger: `\n        .o_web_studio_sidebar\n        .o_web_studio_view`,\n        },\n        {\n            trigger: `\n        .o_web_studio_sidebar_checkbox\n        input#show_invisible`,\n        },\n        {\n            extra_trigger: `\n        .o_list_table\n        th[data-name=\"display_name\"].o_web_studio_show_invisible`,\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        stepNotInStudio(\".o_list_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_model_option_value_tour\", {\n    url: \"/web?debug=tests#action=studio&mode=home_menu\",\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_new_app\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: `\n        .o_web_studio_app_creator_name\n        > input`,\n            run: `text ${randomString(6)}`,\n        },\n        {\n            trigger: `\n        .o_web_studio_selectors\n        .o_web_studio_selector:eq(2)`,\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: `\n        .o_web_studio_menu_creator\n        > input`,\n            run: `text ${randomString(6)}`,\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            // check monetary value in model configurator\n            trigger: 'input[name=\"use_value\"]',\n        },\n        {\n            // check lines value in model configurator\n            trigger: 'input[name=\"lines\"]',\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            trigger: '.o_web_studio_menu .o_web_studio_views_icons > a[title=\"Graph\"]',\n            timeout: 60000 /* previous step reloads registry, etc. - could take a long time */,\n        },\n        {\n            // wait for the graph editor to be rendered and also check for sample data\n            extra_trigger: \".o_view_sample_data .o_graph_renderer\",\n            trigger: '.o_web_studio_menu .o_web_studio_views_icons a[title=\"Pivot\"]',\n        },\n        {\n            // wait for the pivot editor to be rendered and also check for sample data\n            extra_trigger: \".o_pivot_view .o_view_sample_data .o_view_nocontent_empty_folder\",\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        stepNotInStudio(\".o_pivot_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_new_report_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            // click on the created app\n            trigger: '.o_app[data-menu-xmlid*=\"studio\"]:first',\n            extra_trigger: \"body.o_in_studio\",\n        },\n        {\n            // edit reports\n            trigger: \".o_web_studio_menu li a:contains(Reports)\",\n        },\n        {\n            // create a new report\n            trigger: \".o_control_panel .o-kanban-button-new\",\n        },\n        {\n            // select external layout\n            trigger: '.o_web_studio_report_layout_dialog div[data-layout=\"web.external_layout\"]',\n        },\n        {\n            // edit report name\n            trigger: '.o_web_studio_sidebar input[id=\"name\"]',\n            run: \"text My Awesome Report\",\n        },\n        {\n            // add a new group on the node\n            trigger: '.o_web_studio_sidebar .o_field_many2many_tags[name=\"groups_id\"] input',\n            run: function () {\n                this.$anchor.click();\n            },\n        },\n        {\n            trigger: \".o-autocomplete--dropdown-menu li:contains(Access Rights)\",\n        },\n        {\n            // wait for the group to appear\n            trigger:\n                '.o_web_studio_sidebar .o_field_many2many_tags[name=\"groups_id\"] .o_tag_badge_text:contains(Access Rights)',\n            run() {},\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable div.page div\",\n            run($anchor) {\n                const element = this.$anchor[0];\n                element.ownerDocument.getSelection().setPosition(element);\n                assertEqual(element.outerHTML, `<div class=\"oe_structure\"></div>`);\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable div.page div\",\n            run() {\n                const element = this.$anchor[0];\n                assertEqual(element.classList.contains(\"oe-command-temporary-hint\"), true);\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable div.page div\",\n            run: \"text some new text\",\n        },\n        {\n            trigger: \".o_web_studio_menu .o-web-studio-save-report.btn-primary\",\n        },\n        {\n            // The report has been saved\n            trigger: \".o_web_studio_menu .o-web-studio-save-report:not(.btn-primary)\",\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_breadcrumb .o_back_button:contains(Reports)\",\n        },\n        {\n            // a invisible element cannot be used as a trigger so this small hack is\n            // mandatory for the next step\n            run: function () {\n                $(\".o_kanban_record:contains(My Awesome Report) .dropdown-toggle\").css(\n                    \"visibility\",\n                    \"visible\"\n                );\n            },\n            trigger: \".o_kanban_view\",\n        },\n        {\n            // open the dropdown\n            trigger: \".o_kanban_record:contains(My Awesome Report) .dropdown-toggle\",\n        },\n        {\n            // duplicate the report\n            trigger:\n                \".o_kanban_record:contains(My Awesome Report) .dropdown-menu a:contains(Duplicate)\",\n        },\n        {\n            // open the duplicate report\n            trigger: \".o_kanban_record:contains(My Awesome Report copy(1))\",\n        },\n        {\n            // switch to 'Report' tab\n            trigger: \".o_web_studio_sidebar input[id='name']\",\n            run() {\n                assertEqual(this.$anchor[0].value, \"My Awesome Report copy(1)\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe div.page div\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"some new text\");\n            },\n        },\n        {\n            trigger:\n                '.o_web_studio_sidebar .o_field_many2many_tags[name=\"groups_id\"] .o_tag_badge_text:contains(Access Rights)',\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        stepNotInStudio(),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_new_report_basic_layout_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            // click on the created app\n            trigger: '.o_app[data-menu-xmlid*=\"studio\"]:first',\n            extra_trigger: \"body.o_in_studio\",\n        },\n        {\n            // edit reports\n            trigger: \".o_web_studio_menu li a:contains(Reports)\",\n        },\n        {\n            // create a new report\n            trigger: \".o_control_panel .o-kanban-button-new\",\n        },\n        {\n            // select basic layout\n            trigger: '.o_web_studio_report_layout_dialog div[data-layout=\"web.basic_layout\"]',\n        },\n        {\n            // edit report name\n            trigger: '.o_web_studio_sidebar input[id=\"name\"]',\n            run: \"text My Awesome basic layout Report\",\n        },\n        {\n            // add a new group on the node\n            trigger: '.o_web_studio_sidebar .o_field_many2many_tags[name=\"groups_id\"] input',\n            run: function () {\n                this.$anchor.click();\n            },\n        },\n        {\n            trigger: \".o-autocomplete--dropdown-menu li:contains(Access Rights)\",\n        },\n        {\n            // wait for the group to appear\n            trigger:\n                '.o_web_studio_sidebar .o_field_many2many_tags[name=\"groups_id\"] .o_tag_badge_text:contains(Access Rights)',\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_menu .o-web-studio-save-report.btn-primary\",\n        },\n        {\n            // The report has been saved\n            trigger: \".o_web_studio_menu .o-web-studio-save-report:not(.btn-primary)\",\n            run() {},\n        },\n        {\n            // leave the report\n            trigger: \".o_web_studio_breadcrumb .o_back_button:contains(Reports)\",\n        },\n        {\n            // a invisible element cannot be used as a trigger so this small hack is\n            // mandatory for the next step\n            run: function () {\n                $(\".o_kanban_record:contains(My Awesome basic layout Report) .dropdown-toggle\").css(\n                    \"visibility\",\n                    \"visible\"\n                );\n            },\n            trigger: \".o_kanban_view\",\n        },\n        {\n            // open the dropdown\n            trigger: \".o_kanban_record:contains(My Awesome basic layout Report) .dropdown-toggle\",\n        },\n        {\n            // duplicate the report\n            trigger:\n                \".o_kanban_record:contains(My Awesome basic layout Report) .dropdown-menu a:contains(Duplicate)\",\n        },\n        {\n            // open the duplicate report\n            trigger: \".o_kanban_record:contains(My Awesome basic layout Report copy(1))\",\n        },\n        {\n            trigger: '.o_web_studio_sidebar input[id=\"name\"]',\n            run() {\n                assertEqual(this.$anchor[0].value, \"My Awesome basic layout Report copy(1)\");\n            },\n        },\n        {\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        stepNotInStudio(),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_approval_tour\", {\n    url: \"/web?debug=1\",\n    test: true,\n    steps: () => [\n        {\n            // go to Apps menu\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_management\"]',\n        },\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_cp_switch_buttons\",\n        },\n        {\n            // switch to form view editor\n            trigger: '.o_web_studio_views_icons > a[title=\"Form\"]',\n        },\n        {\n            // click on first button it finds that has a node id\n            trigger: \".o_web_studio_form_view_editor button.o-web-studio-editor--element-clickable\",\n        },\n        {\n            // enable approvals for the button\n            trigger: '.o_web_studio_sidebar label[for=\"studio_approval\"]',\n        },\n        {\n            // add approval rule\n            trigger: '.o_web_studio_sidebar_approval [name=\"create_approval_rule\"]',\n            extra_trigger: \".o_web_studio_snackbar .fa-check\",\n        },\n        {\n            // set approval message\n            trigger: '.o_web_studio_sidebar_approval input[name*=\"approval_message\"]',\n            run: \"text nope\",\n        },\n        {\n            // set domain on first rule\n            trigger: \".o_web_studio_sidebar_approval .o_approval_domain\",\n            extra_trigger: \".o_studio_sidebar_approval_rule:eq(1)\",\n        },\n        {\n            // set stupid domain that is always truthy\n            trigger: \".o_domain_selector_debug_container textarea\",\n            run: function () {\n                this.$anchor.focusIn();\n                this.$anchor.val('[[\"id\", \"!=\", False]]');\n                this.$anchor.change();\n            },\n        },\n        {\n            // save domain and close modal\n            trigger: \" .modal-footer .btn-primary\",\n        },\n        {\n            // add second approval rule when the first is set\n            trigger: '.o_web_studio_sidebar_approval [name=\"create_approval_rule\"]',\n            extra_trigger: \".o_web_studio_snackbar .fa-check\",\n        },\n        {\n            // enable 'force different users' for one rule (doesn't matter which)\n            trigger: '.o_web_studio_sidebar label[for*=\"exclusive_user\"]',\n            extra_trigger: \".o_web_studio_snackbar .fa-check\",\n        },\n        {\n            // leave studio\n            trigger: \".o_web_studio_leave > a.btn\",\n            extra_trigger: \".o_web_studio_snackbar .fa-check\",\n        },\n        {\n            // go back to kanban\n            trigger: \".o_breadcrumb .o_back_button\",\n            extra_trigger: \".o_web_client:not(.o_in_studio)\",\n        },\n        {\n            // open first record (should be the one that was used, so the button should be there)\n            trigger: \".o_kanban_view .o_kanban_record .o_dropdown_kanban .dropdown-toggle\",\n        },\n        {\n            trigger: \".o_kanban_view .o_kanban_record .o-dropdown--menu .dropdown-item\",\n        },\n        {\n            // try to do the action\n            trigger: \"button[studio_approval]\",\n        },\n        {\n            // there should be a warning\n            trigger: \".o_notification.border-warning\",\n        },\n        {\n            trigger: \".breadcrumb .o_back_button\",\n        },\n        {\n            trigger: \"body .o_modules_kanban\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_custom_field_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        {\n            // go to Apps menu\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_management\"]',\n        },\n        {\n            // click on the list view\n            trigger: \".o_switch_view.o_list\",\n        },\n        {\n            // click on optional column dropdown\n            trigger: \".o_optional_columns_dropdown_toggle\",\n        },\n        {\n            // click on add custom field\n            trigger: \".dropdown-item-studio\",\n        },\n        {\n            // go to home menu\n            trigger: \".o_menu_toggle\",\n            extra_trigger: \".o_web_client.o_in_studio\",\n        },\n        {\n            //leave studio\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        {\n            // studio left.\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_management\"]',\n            extra_trigger: \".o_web_client:not(.o_in_studio)\",\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_local_storage_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        {\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_management\"]',\n            run: function () {\n                localStorage.setItem(\"openStudioOnReload\", \"main\");\n                window.location.reload();\n            },\n        },\n        {\n            // should be directly in studio mode\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_management\"]',\n            extra_trigger: \".o_web_client.o_in_studio\",\n        },\n        {\n            trigger: \".o_menu_toggle\",\n        },\n        {\n            trigger: \".o_web_studio_leave > a.btn\",\n        },\n        {\n            // studio left.\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_management\"]',\n            extra_trigger: \".o_web_client:not(.o_in_studio)\",\n            run: function () {\n                window.location.reload();\n            },\n        },\n        {\n            // studio left after refresh.\n            trigger: '.o_app[data-menu-xmlid=\"base.menu_management\"]',\n            extra_trigger: \".o_web_client:not(.o_in_studio)\",\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_custom_background_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        {\n            content: \"class for custom background must be enabled (outside studio)\",\n            trigger: \".o_home_menu_background_custom.o_home_menu_background:not(.o_in_studio)\",\n            run: () => null,\n        },\n        {\n            content: \"opening studio\",\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n        },\n        {\n            content: \"class for custom background must be enabled (in studio)\",\n            trigger: \".o_home_menu_background_custom.o_home_menu_background.o_in_studio\",\n            run: () => null,\n        },\n        {\n            content: \"click on Customizations button\",\n            trigger: \".o_web_studio_home_studio_menu button\",\n        },\n        {\n            content: \"reset the background\",\n            trigger: \".o_web_studio_reset_default_background\",\n        },\n        {\n            content: \"validate the reset of the background\",\n            trigger: \".modal-dialog .btn-primary\",\n        },\n        {\n            content: \"class for custom background must be disabled (inside studio)\",\n            trigger: \".o_home_menu_background.o_in_studio:not(.o_home_menu_background_custom)\",\n            run: () => null,\n        },\n        {\n            content: \"leaving studio\",\n            trigger: \".o_web_studio_leave a\",\n        },\n        {\n            content: \"class for custom background must be disabled (outside studio)\",\n            trigger: \".o_home_menu_background:not(.o_in_studio.o_home_menu_background_custom)\",\n            run: () => null,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_create_app_with_pipeline_and_user_assignment\", {\n    test: true,\n    steps: () => [\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n        },\n        {\n            // the next steps are here to create a new app\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_name > input\",\n            run: \"text \" + (createdAppString = randomString(6)),\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            trigger: \".o_web_studio_menu_creator > input\",\n            run: \"text \" + (createdMenuString = randomString(6)),\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            trigger: \"input#use_stages\",\n        },\n        {\n            trigger: \"input#use_responsible\",\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            trigger: \".o_web_studio_editor .o_menu_sections a:contains(Views)\",\n        },\n        {\n            trigger: \".o_web_studio_view_type[data-type='kanban'] .o_web_studio_thumbnail\",\n        },\n        {\n            extra_trigger: \".o_web_studio_kanban_view_editor\",\n            trigger: \"img.oe_kanban_avatar\",\n            run() {\n                const avatarImg = document.querySelector(\"img.oe_kanban_avatar\");\n                if (!avatarImg.getAttribute(\"title\") === \"Unassigned\") {\n                    throw new Error(\n                        \"The title of the new avatar should be set, even if there are no record\"\n                    );\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_alter_field_existing_in_multiple_views_tour\", {\n    test: true,\n    steps: () => [\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item button\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n        },\n        {\n            // the next steps are here to create a new app\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_name > input\",\n            run: \"text \" + (createdAppString = randomString(6)),\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            trigger: \".o_web_studio_menu_creator > input\",\n            run: `text ${createdAppString}`,\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            extra_trigger: \".o_web_studio_sidebar\",\n            // unfold 'Existing Fieldqs' section\n            trigger: \".o_web_studio_existing_fields_header\",\n            timeout: 60000,\n        },\n        {\n            // add an existing field (the one we created)\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(2) .o_web_studio_field_many2many:contains(Followers (Partners))\",\n            run: \"drag_and_drop_native .o_inner_group:first .o_web_studio_hook:first\",\n        },\n        {\n            trigger: \".o_web_studio_new \",\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_many2many\",\n            run: \"drag_and_drop_native div.o_web_studio_hook:last\",\n        },\n        {\n            extra_trigger: \".modal-body\",\n            in_modal: true,\n            trigger: '[name=\"relation_id\"] input',\n            run: `text ${createdAppString}`,\n        },\n        {\n            // select the first model\n            trigger: \".o-autocomplete--dropdown-menu > li > a:not(:has(.fa-spin))\",\n            in_modal: true,\n        },\n        {\n            trigger: \"button:contains(Confirm)\",\n        },\n        {\n            // edit list view\n            trigger: \".o_web_studio_editX2Many\",\n        },\n        {\n            // wait for list view to be loaded\n            extra_trigger: \".o_web_studio_list_view_editor\",\n            // go to view\n            trigger: \".o_web_studio_view \",\n        },\n        {\n            // show invisible elements\n            trigger: 'label[for=\"show_invisible\"]',\n        },\n        {\n            trigger: \".o_web_studio_new \",\n        },\n        {\n            // unfold 'Existing Fieldqs' section\n            trigger: \".o_web_studio_existing_fields_header\",\n        },\n        {\n            // add an existing field (the one we created)\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_field_type_container:eq(1) .o_web_studio_field_many2many:contains(Followers (Partners))\",\n            run: \"drag_and_drop_native .o_web_studio_list_view_editor th.o_web_studio_hook:first\",\n        },\n        {\n            // select field\n            trigger: \"th[data-name='message_partner_ids']\",\n            run: \"click\",\n        },\n        {\n            // make it invisible\n            trigger: \"#invisible\",\n            run: \"click\",\n        },\n        {\n            extra_trigger: \".o_web_studio_snackbar .fa.fa-check\",\n            // check if the invisible option is checked\n            trigger: \"#invisible:checked\",\n            run() {},\n        },\n    ],\n});\n\nconst buttonToogleStudio = {\n    trigger: `button[title=\"Toggle Studio\"]`,\n};\nconst addActionButtonModalSteps = (\n    ActionLabel = \"web_studio_new_button_action_name\",\n    ActionName = \"Privacy Lookup\"\n) => [\n    {\n        trigger: \".o-web-studio-editor--add-button-action\",\n    },\n    {\n        trigger: \".o-web-studio-editor--modal-add-action input#set_label\",\n        run: `text ${ActionLabel}`,\n    },\n    {\n        trigger: \".o-web-studio-editor--modal-add-action input#set_button_type_to_action\",\n    },\n    {\n        trigger: \".o-web-studio-editor--modal-add-action .o_record_selector input\",\n        run: `text ${ActionName}`,\n    },\n    {\n        trigger: `.o-web-studio-editor--modal-add-action .o-autocomplete--dropdown-menu li a:not(:has(.fa-spin)):contains(${ActionName})`,\n        run(helpers) {\n            const el = Array.from(this.$anchor).find((el) => el.textContent === ActionName);\n            return helpers.click($(el));\n        },\n    },\n    {\n        trigger: \"footer button.o-web-studio-editor--add-button-confirm\",\n    },\n];\n\nconst addMethodButtonModalSteps = (\n    ) => [\n        {\n            trigger: \".o-web-studio-editor--add-button-action\",\n        },\n        {\n            trigger: \".o-web-studio-editor--modal-add-action input#set_label\",\n            run: `text test`,\n        },\n        {\n            trigger: \".o-web-studio-editor--modal-add-action input#set_button_type_to_object\",\n        },\n        {\n            trigger: \".o-web-studio-editor--modal-add-action  input#set_method\",\n            run: `text demo`,\n        },\n\n    ];\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_check_method_in_model\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n            {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        buttonToogleStudio,\n        ...addMethodButtonModalSteps(),\n        {\n            trigger: \"div.text-danger\",\n            run() {\n                const div_error = document.querySelector(\"div.text-danger\");\n                assertEqual(div_error.innerHTML, \"The method demo does not exist on the model res.partner().\")\n                },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_create_action_button_in_form_view\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        buttonToogleStudio,\n        ...addActionButtonModalSteps(),\n        {\n            trigger: \".o_web_studio_leave a\",\n        },\n        stepNotInStudio(\".o_form_view\"),\n    ],\n});\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"web_studio_test_create_second_action_button_in_form_view\", {\n        test: true,\n        steps: () => [\n            {\n                trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            },\n            {\n                trigger: \".o_form_view .o_form_editable\",\n            },\n            buttonToogleStudio,\n            ...addActionButtonModalSteps(\"web_studio_other_button_action_name\", \"Download (vCard)\"),\n            {\n                trigger: \".o_web_studio_leave a\",\n            },\n            stepNotInStudio(\".o_form_view\"),\n        ],\n    });\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_create_action_button_in_list_view\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        buttonToogleStudio,\n        {\n            trigger: \".o_web_studio_views_icons a[aria-label='List']\",\n        },\n        {\n            trigger: \".o_optional_columns_dropdown button\",\n        },\n        ...addActionButtonModalSteps(),\n        {\n            trigger: \".o_web_studio_leave a\",\n        },\n        stepNotInStudio(\".o_list_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_remove_action_button_in_form_view\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        buttonToogleStudio,\n        {\n            trigger: 'button[studioxpath=\"/form[1]/header[1]/button[1]\"]',\n        },\n        {\n            trigger: \"button.o_web_studio_remove\",\n        },\n        {\n            trigger: \"footer.modal-footer>button.btn-primary\",\n        },\n        {\n            trigger: \".o_web_studio_leave a\",\n        },\n        stepNotInStudio(\".o_form_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_remove_action_button_in_list_view\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        buttonToogleStudio,\n        {\n            trigger: \".o_web_studio_views_icons a[aria-label='List']\",\n        },\n        {\n            trigger: \".o_optional_columns_dropdown button\",\n        },\n        {\n            trigger: 'button[studioxpath=\"/tree[1]/header[1]/button[1]\"]',\n        },\n        {\n            trigger: \"button.o_web_studio_remove\",\n        },\n        {\n            trigger: \"footer.modal-footer>button.btn-primary\",\n        },\n        {\n            trigger: \".o_web_studio_leave a\",\n        },\n        stepNotInStudio(\".o_list_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_monetary_create\", {\n    url: \"/web?debug=1\",\n    test: true,\n    steps: () => [\n        // This tour drag&drop a monetary field and verify that a currency is created\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n            run: () => {},\n        },\n        {\n            trigger: \".o_app[data-menu-xmlid='web_studio.studio_app_menu']\",\n        },\n        // drag&drop a monetary and verify that the currency is in the view\n        {\n            // add a new monetary field\n            trigger: \".o_web_studio_sidebar .o_web_studio_field_monetary\",\n            run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n        },\n        {\n            // verify that the currency is set\n            trigger: \".o_web_studio_sidebar .o_web_studio_property_currency_field .text-start\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"Currency (x_studio_currency_id)\");\n            },\n        },\n        {\n            // currency field is in the view\n            trigger: \".o_web_studio_view_renderer div[data-field-name='x_studio_currency_id']\",\n        },\n        {\n            trigger: \".o_web_studio_properties.active\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_monetary_change_currency_name\", {\n    url: \"/web?debug=1\",\n    test: true,\n    steps: () => [\n        // Changing currency name also change the currency name in the monetary currency selection\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n            run: () => {},\n        },\n        {\n            trigger: \".o_app[data-menu-xmlid='web_studio.studio_app_menu']\",\n        },\n        {\n            // currency field is in the view and click on it\n            trigger: \".o_web_studio_view_renderer [data-field-name='x_studio_currency_test']\",\n        },\n        {\n            // change the currency name\n            trigger: \"input[name='string']\",\n            run(helper) {\n                helper.text(\"NewCurrency\");\n            },\n        },\n        {\n            // click on monetary\n            trigger: \"div[data-field-name^='x_studio_monetary_test']\",\n        },\n        {\n            // verify that the currency name changed in the monetary field\n            trigger: \".o_web_studio_sidebar .o_web_studio_property_currency_field .text-start\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"NewCurrency (x_studio_currency_test)\");\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_related_monetary_creation\", {\n    url: \"/web?debug=1\",\n    test: true,\n    steps: () => [\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n            run: () => {},\n        },\n        {\n            trigger: \".o_app[data-menu-xmlid='web_studio.studio_app_menu']\",\n        },\n        {\n            // add a new related field\n            trigger: \".o_web_studio_sidebar .o_web_studio_field_related\",\n            run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n        },\n        {\n            trigger: '.o_model_field_selector_value',\n        },\n        {\n            in_modal: false,\n            trigger:\n                \".o_model_field_selector_popover_search input\",\n            run: \"text X Test\",\n        },\n        {\n            in_modal: false,\n            trigger: \".o_model_field_selector_popover_item[data-name='x_test'] .o_model_field_selector_popover_item_relation\",\n        },\n        {\n            in_modal: false,\n            trigger:\n                \".o_model_field_selector_popover_search input\",\n            run: \"text X Studio Monetary Test\",\n        },\n        {\n            in_modal: false,\n            trigger: \".o_model_field_selector_popover_item[data-name='x_studio_monetary_test'] button\",\n        },\n        {\n            trigger:\".modal-footer button.btn-primary\",\n        },\n        {\n            // The related monetary is created\n            trigger: \".o_web_studio_view_renderer .o_form_label:contains('New Related Field')\",\n        },\n        {\n            // The currency is created\n            trigger: \".o_web_studio_view_renderer [data-field-name='x_studio_currency_id']\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_monetary_change_currency_field\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        // Change currency and verify that the view take the changes into account (the dollar appears)\n        {\n            // open the custom app form view\n            trigger: \"a[data-menu-xmlid='web_studio.studio_app_menu']\",\n        },\n        {\n            // fill the required char input\n            trigger: \".o_field_char input\",\n            run: \"text title\",\n        },\n        {\n            // fill the new currency (many2one) input #1\n            trigger: \"div [name='x_studio_currency_test2'] input\",\n            run: \"text USD\",\n        },\n        {\n            // add a new currency field step #2\n            trigger: '.ui-menu-item a:contains(\"USD\")',\n        },\n        {\n            // save the view form\n            trigger: \"button.o_form_button_save\",\n        },\n        {\n            // open studio with the record\n            trigger: \".o_main_navbar .o_web_studio_navbar_item button\",\n            extra_trigger: \".o_form_saved\",\n        },\n        {\n            // check that there is no currency symbol in renderer\n            trigger: \"div[name='x_studio_monetary_test'] span\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"0.00\");\n            },\n        },\n        {\n            // click on the monetary field\n            trigger: \"div[data-field-name='x_studio_monetary_test']\",\n        },\n        {\n            // change the currency_field in the monetary\n            trigger: \".o_web_studio_sidebar .o_web_studio_property_currency_field button\",\n        },\n        {\n            // click on the second currency, which is \"X Studio Currency Test2\"\n            trigger: \".o_web_studio_property_currency_field .o_select_menu_item:nth-child(2)\",\n        },\n        {\n            //wait until the currency has been set (also test the reactivity)\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_property_currency_field span.text-start:contains('X Studio Currency Test2')\",\n            run() {},\n        },\n        {\n            // by changing the currency, we should have a $ symbol in the renderer\n            trigger: \"div[name^='x_studio_monetary'] span\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"$\u00a00.00\");\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_monetary_change_currency_not_in_view\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        // Change a currency that is not present in the view insert it in the view\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n            run: () => {},\n        },\n        {\n            trigger: \".o_app[data-menu-xmlid='web_studio.studio_app_menu']\",\n        },\n        {\n            // click on the monetary field\n            trigger: \"div[data-field-name='x_studio_monetary_test']\",\n        },\n        {\n            // change the currency_field in the monetary\n            trigger: \".o_web_studio_sidebar .o_web_studio_property_currency_field button\",\n        },\n        {\n            // click on the second currency, which is \"X Studio Currency Test2\"\n            trigger: \".o_web_studio_property_currency_field .o_select_menu_item:nth-child(2)\",\n        },\n        {\n            // wait until the currency has been set\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_property_currency_field span.text-start:contains('X Studio Currency Test2')\",\n            run() {},\n        },\n        {\n            // go to view tab\n            trigger: \".o_web_studio_view\",\n        },\n        {\n            // currency field is in the view and click on it\n            trigger: \".o_web_studio_view_renderer div[data-field-name='x_studio_currency_test2']\",\n        },\n        {\n            trigger: \".o_web_studio_properties.active\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_monetary_add_existing_monetary\", {\n    url: \"/web?debug=1\",\n    test: true,\n    steps: () => [\n        // Add an existing monetary trough the \"existing fields\" and verify that the currency\n        // is added to the view\n        {\n            // open studio\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n            run: () => {},\n        },\n        {\n            trigger: \".o_app[data-menu-xmlid='web_studio.studio_app_menu']\",\n        },\n        {\n            // click on \"existing fields\"\n            trigger: \".o_web_studio_existing_fields_header\",\n        },\n        {\n            // add the existing monetary field\n            trigger: \".o_web_studio_existing_fields_section .o_web_studio_field_monetary\",\n            run: \"drag_and_drop_native .o_form_renderer .o_web_studio_hook\",\n        },\n        {\n            // monetary exist and click on monetary\n            trigger: \"div[data-field-name='x_studio_monetary_test']\",\n        },\n        {\n            // verify that the currency name changed in the monetary field\n            trigger: \".o_web_studio_sidebar .o_web_studio_property_currency_field .text-start\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].textContent,\n                    \"X Studio Currency Test (x_studio_currency_test)\"\n                );\n            },\n        },\n        {\n            // currency field is in the view\n            trigger: \"div[data-field-name='x_studio_currency_test']\",\n            run() {},\n        },\n    ],\n});\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"web_studio_monetary_create_monetary_with_existing_currency\", {\n        url: \"/web?debug=1\",\n        test: true,\n        steps: () => [\n            // Add a new monetary field, since a currency already exists, it should take it instead\n            // of creating a new one\n            {\n                // open studio\n                trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n                extra_trigger: \".o_home_menu_background\",\n            },\n            {\n                trigger: \".o_web_studio_new_app\",\n                run: () => {},\n            },\n            {\n                trigger: \".o_app[data-menu-xmlid='web_studio.studio_app_menu']\",\n            },\n            {\n                // go to Add tab\n                trigger: \".o_web_studio_new\",\n            },\n            {\n                // add a new monetary field\n                trigger: \".o_web_studio_sidebar .o_web_studio_field_monetary\",\n                run: \"drag_and_drop_native .o_web_studio_form_view_editor .o_inner_group\",\n            },\n            {\n                // there is only one occurence of the currency field in the view\n                trigger: \".o_form_renderer div[data-field-name^='x_studio_monetary']\",\n                run() {\n                    const o2mNumber = document.querySelectorAll(\"div.o_field_many2one\");\n                    assertEqual(o2mNumber.length, 1);\n                },\n            },\n        ],\n    });\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_add_field_into_empty_group_by\", {\n    url: \"/web?debug=1\",\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o_main_navbar .o_web_studio_navbar_item\",\n            extra_trigger: \".o_home_menu_background\",\n        },\n        {\n            trigger: \".o_web_studio_new_app\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next\",\n        },\n        {\n            trigger: \".o_web_studio_app_creator_name > input\",\n            run: `text ${randomString(6)}`,\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            trigger: \".o_web_studio_menu_creator > input\",\n            run: `text ${randomString(6)}`,\n        },\n        {\n            trigger: \".o_web_studio_app_creator_next.is_ready\",\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            trigger: \".o_web_studio_views_icons a:last\",\n        },\n        {\n            trigger: `\n        .o_web_studio_sidebar\n        .o_web_studio_existing_fields\n        .o_web_studio_component:has(.o_web_studio_component_description:contains(create_date))`,\n            run: \"drag_and_drop_native .o-web-studio-search--groupbys .o_web_studio_hook\",\n        },\n    ],\n});\n", "/** @odoo-module */\nimport { registry } from \"@web/core/registry\";\nimport { download } from \"@web/core/network/download\";\nimport { patch } from \"@web/core/utils/patch\";\nimport { parseXML, serializeXML } from \"@web/core/utils/xml\";\nimport { assertEqual, stepNotInStudio, nextTick } from \"@web_studio/../tests/tours/tour_helpers\";\n\nconst getBoundingClientRect = Element.prototype.getBoundingClientRect;\n\nfunction normalizeXML(str) {\n    const doc = parseXML(str);\n    /* Recursively trim text nodes conditionally\n     * if they start or end with a newline (\\n).\n     * In that case we make the assumption that all whitespaces\n     * are materializing indentation.\n     * If there are only spaces (\\s), we make the assumption that they\n     * are actual spaces that are visible to the naked eye of the user.\n     */\n    const nodes = [...doc.childNodes];\n    for (const node of nodes) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            let nodeValue = node.nodeValue;\n            if (nodeValue.startsWith(\"\\n\")) {\n                nodeValue = nodeValue.trimStart();\n            }\n            if (nodeValue.endsWith(\"\\n\")) {\n                nodeValue = nodeValue.trimEnd();\n            }\n            node.nodeValue = nodeValue;\n        }\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            nodes.push(...node.childNodes);\n        }\n    }\n\n    return serializeXML(doc);\n}\n\nfunction insertText(element, text, offset = 0) {\n    const doc = element.ownerDocument;\n    const sel = doc.getSelection();\n    sel.removeAllRanges();\n    const range = doc.createRange();\n    range.setStart(element, offset);\n    range.setEnd(element, offset);\n    sel.addRange(range);\n    for (const char of text) {\n        element.dispatchEvent(\n            new KeyboardEvent(\"keydown\", {\n                key: char,\n                bubbles: true,\n            })\n        );\n        const textNode = doc.createTextNode(char);\n        element.append(textNode);\n        sel.removeAllRanges();\n        range.setStart(textNode, 1);\n        range.setEnd(textNode, 1);\n        sel.addRange(range);\n        element.dispatchEvent(\n            new InputEvent(\"input\", {\n                inputType: \"insertText\",\n                data: char,\n                bubbles: true,\n            })\n        );\n        element.dispatchEvent(\n            new KeyboardEvent(\"keyup\", {\n                key: char,\n                bubbles: true,\n            })\n        );\n    }\n}\n\nfunction openEditorPowerBox(element, offset = 0) {\n    return insertText(element, \"/\", offset);\n}\n\n/* global ace */\n\n// This function allows to use and test the feature that automatically\n// saves when we leave the reportEditor.\n// Implem detail: it is done at willUnmount, so we need to wait for the promise\n// to be sure we leave the tour when the save is done.\nfunction patchReportEditorModelForSilentSave() {\n    const saveProms = [];\n    const { ReportEditorModel } = odoo.loader.modules.get(\n        \"@web_studio/client_action/report_editor/report_editor_model\"\n    );\n    const _unpatch = patch(ReportEditorModel.prototype, {\n        saveReport() {\n            const prom = super.saveReport(...arguments);\n            saveProms.push(prom);\n            return prom;\n        },\n    });\n\n    return {\n        wait: async (unpatch = true) => {\n            await Promise.all(saveProms);\n            if (unpatch) {\n                _unpatch();\n            }\n        },\n        saveProms,\n        unpatch: _unpatch,\n    };\n}\n\nlet silentPatch;\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_basic_report_edition\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar input[id='name']\",\n            run: \"text modified in test\",\n        },\n        {\n            trigger: \".o_web_studio_menu .breadcrumb-item.active\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"modified in test\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run: \"text edited with odoo editor\",\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            run: \"text edited with odoo editor 2\",\n        },\n        {\n            // Don't explicitly save, this is a feature\n            trigger: \".o_web_studio_leave a\",\n            run(helpers) {\n                silentPatch = patchReportEditorModelForSilentSave();\n                helpers.click(this.$anchor);\n            },\n        },\n        stepNotInStudio(),\n        {\n            trigger: \"body\",\n            run() {\n                return silentPatch.wait();\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_basic_report_edition_xml\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_edit_sources']\",\n        },\n        {\n            trigger: \".o_web_studio_xml_resource_selector .o_web_studio_xml_resource_select_menu\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].textContent,\n                    \"web_studio.test_report_document (web_studio.test_report_document)\"\n                );\n            },\n        },\n        {\n            trigger: \".o_web_studio_code_editor.ace_editor\",\n            run() {\n                ace.edit(this.$anchor[0])\n                    .getSession()\n                    .insert(\n                        { row: 2, column: 0 },\n                        '<span class=\"test-added-0\">in document view</span>\\n'\n                    );\n            },\n        },\n        {\n            trigger: \".o_web_studio_xml_resource_selector .o_select_menu_toggler\",\n        },\n        {\n            trigger: \".o_web_studio_xml_resource_selector .o-dropdown--menu\",\n            run(helpers) {\n                const mainView = Array.from(\n                    this.$anchor[0].querySelectorAll(\".o_select_menu_item\")\n                ).find(\n                    (el) =>\n                        el.textContent ===\n                        \"web_studio.test_report (web_studio.studio_test_report_view)\"\n                );\n                helpers.click(mainView);\n            },\n        },\n        {\n            trigger: \".o_web_studio_code_editor.ace_editor\",\n            run() {\n                ace.edit(this.$anchor[0])\n                    .getSession()\n                    .insert(\n                        { row: 2, column: 0 },\n                        '<span class=\"test-added-1\">in main view</span>\\n'\n                    );\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            extra_trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            trigger: \".o-web-studio-report-container iframe body\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].querySelector(\".test-added-0\").textContent,\n                    \"in document view\"\n                );\n                assertEqual(\n                    this.$anchor[0].querySelector(\".test-added-1\").textContent,\n                    \"in main view\"\n                );\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_basic_report_edition_discard\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar input[id='name']\",\n            run: \"text modified in test\",\n        },\n        {\n            trigger: \".o_web_studio_menu .breadcrumb-item.active\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"modified in test\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run: \"text edited with odoo editor\",\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            run: \"text edited with odoo editor 2\",\n        },\n        {\n            trigger: \".o-web-studio-discard-report.btn-secondary\",\n        },\n        {\n            trigger: \".modal-dialog .btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"\");\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_basic_report_edition_cancel_discard\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar input[id='name']\",\n            run: \"text modified in test\",\n        },\n        {\n            trigger: \".o_web_studio_menu .breadcrumb-item.active\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"modified in test\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run: \"text edited with odoo editor\",\n        },\n        {\n            trigger: \".o-web-studio-discard-report.btn-secondary\",\n        },\n        {\n            trigger: \".modal-dialog .btn-secondary\",\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"edited with odoo editor\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_basic_report_edition_xml_discard\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_edit_sources']\",\n        },\n        {\n            trigger: \".o_web_studio_code_editor.ace_editor\",\n            run() {\n                ace.edit(this.$anchor[0])\n                    .getSession()\n                    .insert({ row: 2, column: 0 }, '<span class=\"test-added\">in main view</span>');\n            },\n        },\n        {\n            trigger: \".o-web-studio-discard-report.btn-secondary\",\n        },\n        {\n            trigger: \".o-web-studio-report-container iframe body\",\n            run() {\n                const element = this.$anchor[0].querySelector(\".test-added\");\n                if (element) {\n                    throw new Error(\"The changes should have been discarded\");\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_basic_report_edition_error\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run: \"text edited with odoo editor\",\n        },\n        {\n            // Brutally add a t-else: this will crash in python on save\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable\",\n            run() {\n                const editable = this.$anchor[0];\n                const wysiwyg = $(editable).data(\"wysiwyg\");\n                const telse = wysiwyg.odooEditor.document.createElement(\"t\");\n                telse.setAttribute(\"t-else\", \"\");\n                wysiwyg.odooEditor.execCommand(\"insert\", telse);\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            run: \"text edited with odoo editor 2\",\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o_notification .o_notification_title\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"Report edition failed\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run() {\n                // The iframe .odoo-editor-editable shouldn't have been reset after an error\n                assertEqual(this.$anchor[0].textContent, \"edited with odoo editor\");\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_basic_report_edition_xml_error\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_edit_sources']\",\n        },\n        {\n            trigger: \".o_web_studio_code_editor.ace_editor\",\n            run() {\n                ace.edit(this.$anchor[0])\n                    .getSession()\n                    .insert(\n                        { row: 2, column: 0 },\n                        '<span t-else=\"\" class=\"test-added\">in main view</span>'\n                    );\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o_notification .o_notification_title\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"Report edition failed\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-container iframe body\",\n            run() {\n                const element = this.$anchor[0].querySelector(\".test-added\");\n                if (element) {\n                    throw new Error(\"The changes should have been discarded\");\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_report_reset_archs\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_reset_archs']\",\n        },\n        {\n            trigger: \".modal-footer\",\n            run(helpers) {\n                const button = Array.from(this.$anchor[0].querySelectorAll(\"button\")).find(\n                    (el) => el.textContent === \"Reset report\" && el.classList.contains(\"btn-danger\")\n                );\n                helpers.click(button);\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(1)\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"from file\");\n            },\n        },\n    ],\n});\n\nlet downloadProm;\nconst steps = [];\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_print_preview\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_print_preview']\",\n            run(helpers) {\n                downloadProm = new Promise((resolve) => {\n                    const unpatch = patch(download, {\n                        _download(options) {\n                            steps.push(\"download report\");\n                            const context = JSON.parse(options.data.context);\n                            assertEqual(context[\"report_pdf_no_attachment\"], true);\n                            assertEqual(context[\"discard_logo_check\"], true);\n                            assertEqual(context[\"active_ids\"].length, 1);\n                            unpatch();\n                            resolve();\n                        },\n                    });\n                });\n                return helpers.click(this.$anchor);\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg\",\n            async run() {\n                await downloadProm;\n                assertEqual(steps.length, 1);\n                assertEqual(steps[0], \"download report\");\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_table_rendering\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable .valid_table\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].outerHTML,\n                    `<table class=\"valid_table\">\n                    <tbody><tr><td>I am valid</td></tr>\n                </tbody></table>`\n                );\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable .invalid_table\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].outerHTML,\n                    `<div class=\"invalid_table\" oe-origin-tag=\"table\" oe-origin-style=\"\">\n                    <t t-foreach=\"doc.child_ids\" t-as=\"child\" oe-context=\"{&quot;docs&quot;: {&quot;model&quot;: &quot;res.partner&quot;, &quot;name&quot;: &quot;Contact&quot;, &quot;in_foreach&quot;: false}, &quot;company&quot;: {&quot;model&quot;: &quot;res.company&quot;, &quot;name&quot;: &quot;Companies&quot;, &quot;in_foreach&quot;: false}, &quot;doc&quot;: {&quot;model&quot;: &quot;res.partner&quot;, &quot;name&quot;: &quot;Contact&quot;, &quot;in_foreach&quot;: true}, &quot;child&quot;: {&quot;model&quot;: &quot;res.partner&quot;, &quot;name&quot;: &quot;Contact&quot;, &quot;in_foreach&quot;: true}}\">\n                        <div oe-origin-tag=\"tr\" oe-origin-style=\"\"><div oe-origin-tag=\"td\" oe-origin-style=\"\" style=\"width: calc(100% - 10px);\">I am not valid</div></div>\n                    </t>\n                </div>`\n                );\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable .invalid_table [oe-origin-tag='td']\",\n            run: \"text edited with odooEditor\",\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(1)\",\n            run: \"text p edited with odooEditor\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar input[id='name']\",\n            run: \"text modified\",\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            run() {},\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_field_placeholder\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            // 1 sec delay to make sure we call the download route\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            async run(helpers) {\n                const el = this.$anchor[0];\n                openEditorPowerBox(el);\n            },\n        },\n        {\n            trigger:\n                \".oe-powerbox-wrapper .oe-powerbox-commandDescription:contains(Insert a field)\",\n        },\n        {\n            extra_trigger: \".o-web-studio-field-dynamic-placeholder\",\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg div:has(> .o-web-studio-report-container)\",\n            async run() {\n                const placeholderBox = getBoundingClientRect.call(\n                    document.querySelector(\".o-web-studio-field-dynamic-placeholder\")\n                );\n                assertEqual(this.$anchor[0].scrollTop, 0);\n                this.$anchor[0].scrollTop = 9999;\n                await new Promise(requestAnimationFrame);\n                const newPlaceholderbox = getBoundingClientRect.call(\n                    document.querySelector(\".o-web-studio-field-dynamic-placeholder\")\n                );\n                // The field placeholder should have followed its anchor, and it happens that the anchor's container\n                // has been scrolled, so the anchor has moved upwards (and is actually outside of the viewPort, to the top)\n                assertEqual(placeholderBox.top > newPlaceholderbox.top, true);\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text Job Position\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_item_name:contains(Job Position)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_default_value_input input\",\n            run: \"text some default value\",\n        },\n        {\n            trigger: \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover\",\n            run() {\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true })\n                );\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable span[t-field='doc.function'][title='doc.function']\",\n            isCheck: true,\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n            isCheck: true,\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(0)\",\n            run() {\n                insertText(this.$anchor[0], \"edited with odooEditor\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_add_field_blank_report\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            // edit reports\n            trigger: \".o_web_studio_menu li a:contains(Reports)\",\n        },\n        {\n            // create a new report\n            trigger: \".o_control_panel .o-kanban-button-new\",\n        },\n        {\n            // select basic layout\n            trigger: '.o_web_studio_report_layout_dialog div[data-layout=\"web.basic_layout\"]',\n        },\n        {\n            trigger: \"iframe .odoo-editor-editable .page div\",\n            async run(helpers) {\n                const el = this.$anchor[0];\n                openEditorPowerBox(el);\n            },\n        },\n        {\n            trigger:\n                \".oe-powerbox-wrapper .oe-powerbox-commandDescription:contains(Insert a field)\",\n        },\n        {\n            extra_trigger: \".o-web-studio-field-dynamic-placeholder\",\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg div:has(> .o-web-studio-report-container)\",\n            async run() {\n                const placeholderBox = getBoundingClientRect.call(\n                    document.querySelector(\".o-web-studio-field-dynamic-placeholder\")\n                );\n                assertEqual(this.$anchor[0].scrollTop, 0);\n                this.$anchor[0].scrollTop = 9999;\n                await new Promise(requestAnimationFrame);\n                const newPlaceholderbox = getBoundingClientRect.call(\n                    document.querySelector(\".o-web-studio-field-dynamic-placeholder\")\n                );\n                // The field placeholder should have followed its anchor, and it happens that the anchor's container\n                // has been scrolled, so the anchor has moved upwards (and is actually outside of the viewPort, to the top)\n                assertEqual(placeholderBox.top > newPlaceholderbox.top, true);\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text Job Position\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_item_name:contains(Job Position)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_default_value_input input\",\n            run: \"text some default value\",\n        },\n        {\n            trigger: \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover\",\n            run() {\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true })\n                );\n            },\n        },\n        {\n            // check that field was added successfully\n            trigger: \"iframe .odoo-editor-editable .page div > span:contains(some default value)\",\n        },\n        {\n            trigger: \"iframe .odoo-editor-editable .page div\",\n            run() {\n                insertText(this.$anchor[0], \"Custo\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_toolbar_appearance\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p[t-field='doc.name']\",\n            run() {\n                const anchor = this.$anchor[0];\n                const selection = anchor.ownerDocument.getSelection();\n                const range = new Range();\n                range.selectNode(anchor);\n                selection.removeAllRanges();\n                selection.addRange(range);\n            },\n        },\n        {\n            trigger: \"#toolbar.oe-floating[style*=visible]\",\n            isCheck: true,\n        },\n        {\n            trigger: \"#bold.btn\",\n        },\n        {\n            trigger: \"#italic.btn\",\n        },\n        {\n            trigger: \".o-web-studio-discard-report\",\n        },\n        {\n            trigger: \"#toolbar.oe-floating[style*=hidden]\",\n            in_modal: false,\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_edition_without_lang\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(1)\",\n            run() {\n                assertEqual(this.$anchor[0].textContent, \"original term\");\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(1)\",\n            async run() {\n                insertText(this.$anchor[0], \" edited\");\n            },\n        },\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_edit_sources']\",\n        },\n        {\n            trigger: \".o_web_studio_xml_resource_select_menu button.o_select_menu_toggler\",\n        },\n        {\n            trigger:\n                \".o_web_studio_xml_resource_select_menu .o_select_menu_item_label:contains(report_editor_customization_full)\",\n        },\n        {\n            trigger: \".o_web_studio_code_editor_info .o_field_translate\",\n        },\n        {\n            trigger: \".o_translation_dialog .row:eq(1)\",\n            run() {\n                assertEqual(this.$anchor[0].children[0].textContent.trim(), \"French / Fran\u00e7ais\");\n                assertEqual(this.$anchor[0].children[1].textContent.trim(), \"original term edited\");\n            },\n        },\n        {\n            trigger: \".o_translation_dialog .row:eq(1) textarea\",\n            run: \"text translated edited term\",\n        },\n        {\n            trigger: \".modal-footer button.btn-primary\",\n        },\n        {\n            trigger: \".o_web_studio_editor\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_report_xml_other_record\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_edit_sources']\",\n        },\n        {\n            extra_trigger: \".o_web_studio_xml_editor\",\n            trigger: \".o-web-studio-report-container iframe p:contains(partner_1)\",\n            run() {\n                assertEqual(\n                    document.querySelector(\".o-web-studio-report-search-record input\").value,\n                    \"partner_1\"\n                );\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-pager .o_pager_next\",\n        },\n        {\n            trigger: \".o-web-studio-report-container iframe p:contains(partner_2)\",\n            run() {\n                assertEqual(\n                    document.querySelector(\".o-web-studio-report-search-record input\").value,\n                    \"partner_2\"\n                );\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_partial_eval\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-container iframe .odoo-editor-editable .lol\",\n            run() {\n                const closestContextElement = this.$anchor[0].closest(\"[oe-context]\");\n                const oeContext = closestContextElement.getAttribute(\"oe-context\");\n                const expected = {\n                    docs: { model: \"res.partner\", name: \"Contact\", in_foreach: false },\n                    company: { model: \"res.company\", name: \"Companies\", in_foreach: false },\n                    doc: { model: \"res.partner\", name: \"Contact\", in_foreach: true },\n                    my_children: { model: \"res.partner\", name: \"Contact\", in_foreach: false },\n                    child: { model: \"res.partner\", name: \"Contact\", in_foreach: true },\n                };\n                assertEqual(JSON.stringify(JSON.parse(oeContext)), JSON.stringify(expected));\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-container iframe .odoo-editor-editable .couic\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_render_multicompany\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-container iframe .odoo-editor-editable .test_layout\",\n            run() {},\n        },\n        {\n            trigger: \".o-web-studio-report-container iframe .odoo-editor-editable img\",\n            run() {\n                const currentUrl = new URL(window.location);\n                const cids = new URLSearchParams(currentUrl.hash.slice(1)).get(\"cids\").split(\"-\");\n                assertEqual(this.$anchor[0].getAttribute(\"src\"), `/logo.png?company=${cids[0]}`);\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_add_non_searchable_field\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            async run(helpers) {\n                const el = this.$anchor[0];\n                openEditorPowerBox(el);\n            },\n        },\n        {\n            trigger:\n                \".oe-powerbox-wrapper .oe-powerbox-commandDescription:contains(Insert a field)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text New\",\n        },\n        {\n            trigger: \"[data-name=avatar_1024] > button.o_model_field_selector_popover_item_name\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_default_value_input input\",\n            run: \"text file default value\",\n        },\n        {\n            trigger: \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover\",\n            run() {\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true })\n                );\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_report_edition_binary_field\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            async run(helpers) {\n                const el = this.$anchor[0];\n                openEditorPowerBox(el);\n            },\n        },\n        {\n            trigger:\n                \".oe-powerbox-wrapper .oe-powerbox-commandDescription:contains(Insert a field)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text Company\",\n        },\n        {\n            trigger: \"[data-name=company_id] > button.o_model_field_selector_popover_item_relation\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text New File\",\n        },\n        {\n            trigger:\n                \".o_model_field_selector_popover_item_name:contains(New File):not(:contains(filename))\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_default_value_input input\",\n            run: \"text file default value\",\n        },\n        {\n            trigger: \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover\",\n            run() {\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true })\n                );\n            },\n        },\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            async run(helpers) {\n                const el = this.$anchor[0];\n                openEditorPowerBox(el);\n            },\n        },\n        {\n            trigger:\n                \".oe-powerbox-wrapper .oe-powerbox-commandDescription:contains(Insert a field)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text Company\",\n        },\n        {\n            trigger: \"[data-name=company_id] > button.o_model_field_selector_popover_item_relation\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text New Image\",\n        },\n        {\n            trigger: \".o_model_field_selector_popover_item_name:contains(New Image)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_default_value_input input\",\n            run: \"text image default value\",\n        },\n        {\n            trigger: \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover\",\n            run() {\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true })\n                );\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_report_edition_dynamic_table\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            async run(helpers) {\n                const el = this.$anchor[0];\n                openEditorPowerBox(el);\n            },\n        },\n        {\n            trigger:\n                \".oe-powerbox-wrapper .oe-powerbox-commandDescription:contains(Insert a table based on a relational field)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text Activities\",\n        },\n        {\n            trigger: \"[data-name=activity_ids] > button.o_model_field_selector_popover_item_name\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_default_value_input input\",\n            run: \"text First Column\",\n        },\n        {\n            trigger: \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover\",\n            run() {\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true })\n                );\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable table tr td:contains(First Column)\",\n            isCheck: true,\n        },\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable table tr[t-foreach]\",\n            run() {\n                const el = this.$anchor[0];\n                const context = JSON.parse(el.getAttribute(\"oe-context\"));\n                assertEqual(context.x2many_record.model, \"mail.activity\");\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable table tr td:contains(Insert a field...)\",\n            run() {\n                const el = this.$anchor[0];\n                openEditorPowerBox(el);\n            },\n        },\n        {\n            trigger:\n                \".oe-powerbox-wrapper .oe-powerbox-commandDescription:contains(Insert a field)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_search input\",\n            run: \"text Summary\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover_item_name:contains(Summary)\",\n        },\n        {\n            trigger:\n                \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_default_value_input input\",\n            run: \"text Some Summary\",\n        },\n        {\n            trigger: \".o-web-studio-field-dynamic-placeholder .o_model_field_selector_popover\",\n            run() {\n                this.$anchor[0].dispatchEvent(\n                    new KeyboardEvent(\"keydown\", { key: \"Enter\", bubbles: true })\n                );\n            },\n        },\n        {\n            trigger:\n                \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable table td span[t-field='x2many_record.summary']\",\n            isCheck: true,\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_saving_xml_editor_reload\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"button[name='report_edit_sources']\",\n        },\n        {\n            extra_trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            trigger: \".o_web_studio_xml_editor .ace_editor\",\n            run() {\n                ace.edit(this.$anchor[0])\n                    .getSession()\n                    .insert(\n                        { row: 2, column: 0 },\n                        '<span class=\"test-added-0\">in document view</span>\\n'\n                    );\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            extra_trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            trigger: \".o_web_studio_xml_editor .ace_editor\",\n            run() {\n                const aceValue = ace.edit(this.$anchor[0]).getSession().getValue();\n\n                assertEqual(\n                    normalizeXML(aceValue),\n                    normalizeXML(`\n                        <t t-name=\"web_studio.test_report_document\">\n                            <div><p t-field=\"doc.name\"/></div>\n                            <span class=\"test-added-0\">in document view</span>\n                            <p><br/></p>\n                        </t>`)\n                );\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_error_at_loading\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"body:not(:has(.o_error_dialog)) .o-web-studio-report-editor\",\n        },\n        {\n            trigger: \"iframe div\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].textContent,\n                    \"The report could not be rendered due to an error\"\n                );\n            },\n        },\n        {\n            trigger: \"button[name='report_edit_sources']\",\n        },\n        {\n            trigger: \".o_web_studio_xml_editor\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_error_at_loading_debug\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"body:not(:has(.o_error_dialog)) .o-web-studio-report-editor\",\n        },\n        {\n            trigger: \".o-web-studio-report-container:not(:has(iframe))\",\n        },\n        {\n            trigger: \".o-web-studio-report-container strong:contains(builtins.ValueError)\",\n        },\n        {\n            trigger: \"button[name='report_edit_sources']\",\n        },\n        {\n            trigger: \".o_web_studio_xml_editor\",\n        },\n        {\n            trigger: \".o-web-studio-report-container:not(:has(iframe))\",\n        },\n        {\n            trigger:\n                \".o-web-studio-report-container strong:contains(odoo.addons.base.models.ir_qweb.QWebException)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_xml_and_form_diff\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \".o-web-studio-report-editor-wysiwyg iframe .odoo-editor-editable p:eq(2)\",\n            run() {\n                insertText(this.$anchor[0], \"edited with odooEditor\");\n            },\n        },\n        {\n            trigger: \"button[name='report_edit_sources']\",\n        },\n        {\n            trigger:\n                \".o_web_studio_xml_resource_select_menu button.o_select_menu_toggler .o_select_menu_toggler_slot\",\n            run() {\n                const currentViewKey = this.$anchor[0].textContent.split(\" (\")[0];\n                assertEqual(\n                    currentViewKey,\n                    \"web_studio.report_editor_customization_full.view._web_studio.test_report_document\"\n                );\n            },\n        },\n        {\n            trigger: \".o_web_studio_xml_resource_select_menu button.o_select_menu_toggler\",\n        },\n        {\n            trigger:\n                \".o_web_studio_xml_resource_select_menu .o_select_menu_item_label:contains(web_studio.test_report_document)\",\n        },\n        {\n            trigger: \"button[name='view_diff']\",\n        },\n        {\n            trigger: \".o_form_view table.diff\",\n            run() {\n                assertEqual(\n                    document.querySelector(\".o_form_view .o_field_widget[name='view_name']\")\n                        .textContent,\n                    \"web_studio.test_report_document\"\n                );\n                assertEqual(\n                    document.querySelector(\n                        \".o_form_view .o_field_widget[name='compare_view_id'] input\"\n                    ).value,\n                    \"web_studio_backup__web_studio.test_report_document\"\n                );\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_record_model_differs_from_action\", {\n    test: true,\n    sequence: 260,\n    steps: () => {\n        const stepsToAssert = [];\n\n        return [\n            {\n                trigger: \".o_studio_report_kanban_view\",\n                run() {\n                    const { ReportEditorModel } = odoo.loader.modules.get(\n                        \"@web_studio/client_action/report_editor/report_editor_model\"\n                    );\n\n                    patch(ReportEditorModel.prototype, {\n                        async loadReportEditor() {\n                            await super.loadReportEditor(...arguments);\n                            stepsToAssert.push(\n                                `report editor loaded. actionModel: \"${this._services.studio.editedAction.res_model}\". reportModel: \"${this.reportResModel}\"`\n                            );\n                        },\n                    });\n                },\n            },\n            {\n                trigger: \".o_studio_report_kanban_view .o_searchview input\",\n                run: \"text dummy test\",\n            },\n            {\n                trigger:\n                    \".o_studio_report_kanban_view .o_searchview .o_menu_item:contains(Report):contains(dummy test)\",\n            },\n            {\n                trigger: \".o_facet_remove\",\n            },\n            {\n                trigger: \".o_kanban_record:contains(dummy test)\",\n            },\n            {\n                trigger: \".o-web-studio-report-editor-wysiwyg\",\n                run() {\n                    assertEqual(\n                        JSON.stringify(stepsToAssert),\n                        JSON.stringify([\n                            `report editor loaded. actionModel: \"res.partner\". reportModel: \"x_dummy.test\"`,\n                        ])\n                    );\n                },\n            },\n        ];\n    },\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_remove_branding_on_copy\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"body iframe .odoo-editor-editable#wrapwrap\",\n            async run() {\n                const originNode = this.$anchor[0].querySelector(`[ws-view-id]`);\n                const copy = originNode.cloneNode(true);\n                originNode.insertAdjacentElement(\"afterend\", copy);\n                // Wait for a full macrotask tick and a frame to let the mutation observer\n                // of the ReportEditorWysiwyg to catch up on the change and finish its operations\n                await nextTick();\n                const attributeCopy = {};\n                for (const attr of copy.attributes) {\n                    attributeCopy[attr.name] = attr.value;\n                }\n                assertEqual(JSON.stringify(attributeCopy), \"{}\");\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_different_view_document_name\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_sidebar button[name='report_edit_sources']\",\n        },\n        {\n            trigger: \".o_web_studio_xml_resource_selector .o_select_menu_toggler\",\n        },\n        {\n            trigger: \".o_web_studio_xml_resource_selector .o-dropdown--menu\",\n            run() {\n                const sources = Array.from(\n                    this.$anchor[0].querySelectorAll(\".o_select_menu_item\")\n                ).map((e) => e.textContent);\n                assertEqual(\n                    sources.includes(\n                        \"Uses: web_studio.test_report_document (web_studio.test_report_document_1)\"\n                    ),\n                    true\n                );\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_edit_main_arch\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"iframe .odoo-editor-editable .outside-t-call\",\n            async run() {\n                const newNode = document.createElement(\"div\");\n                newNode.classList.add(\"added\");\n                const target = this.$anchor[0];\n                target.insertAdjacentElement(\"beforebegin\", newNode);\n                await nextTick();\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_edit_in_t_call\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"iframe .odoo-editor-editable .in-t-call\",\n            async run() {\n                const newNode = document.createElement(\"div\");\n                newNode.classList.add(\"added\");\n                const target = this.$anchor[0];\n                target.insertAdjacentElement(\"beforebegin\", newNode);\n                await nextTick();\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_edit_main_and_in_t_call\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"iframe .odoo-editor-editable#wrapwrap\",\n            async run() {\n                const newNode0 = document.createElement(\"div\");\n                newNode0.classList.add(\"added0\");\n                const target0 = this.$anchor[0].querySelector(\".outside-t-call\");\n                target0.insertAdjacentElement(\"beforebegin\", newNode0);\n                await nextTick();\n                const newNode1 = document.createElement(\"div\");\n                newNode1.classList.add(\"added1\");\n                const target1 = this.$anchor[0].querySelector(\".in-t-call\");\n                target1.insertAdjacentElement(\"beforebegin\", newNode1);\n                await nextTick();\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_image_crop\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"body iframe .odoo-editor-editable .myimg\",\n        },\n        {\n            trigger: \"body .oe-toolbar #image-crop\",\n        },\n        {\n            trigger: \"body .o-overlay-container .o_we_crop_widget .cropper-container\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_translations_are_copied\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"body iframe .odoo-editor-editable#wrapwrap div:contains(term2)\",\n            run() {\n                const newNode = document.createElement(\"div\");\n                (newNode.textContent = \"term3 from edition\"),\n                    this.$anchor[0].insertAdjacentElement(\"beforebegin\", newNode);\n                return nextTick();\n            },\n        },\n        {\n            trigger: \".o-web-studio-save-report.btn-primary\",\n        },\n        {\n            trigger: \".o-web-studio-save-report:not(.btn-primary)\",\n            isCheck: true,\n        },\n    ],\n});\n", "/** @odoo-module */\nimport { registry } from \"@web/core/registry\";\nimport { stepNotInStudio, assertEqual } from \"@web_studio/../tests/tours/tour_helpers\";\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"web_studio_test_form_view_not_altered_by_studio_xml_edition\", {\n        test: true,\n        url: \"/web?debug=1\",\n        sequence: 260,\n        steps: () => [\n            {\n                trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            },\n            {\n                trigger: \".o_form_view .o_form_editable\",\n            },\n            {\n                trigger: \".o_web_studio_navbar_item button\",\n            },\n            {\n                trigger: \".o_web_studio_sidebar .o_web_studio_view\",\n            },\n            {\n                trigger: \".o_web_studio_open_xml_editor\",\n            },\n            {\n                extra_trigger: \".o_web_studio_code_editor_info\",\n                trigger: \".o_web_studio_leave\",\n            },\n            stepNotInStudio(\".o_form_view .o_form_editable\"),\n        ],\n    });\n\n/* global ace */\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_edit_with_xml_editor\", {\n    test: true,\n    url: \"/web?debug=1\",\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".someDiv\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_view\",\n        },\n        {\n            trigger: \".o_web_studio_open_xml_editor\",\n        },\n        {\n            extra_trigger: \".o_web_studio_xml_editor\",\n            trigger: \".o_web_studio_xml_resource_selector .o_select_menu_toggler\",\n        },\n        {\n            trigger:\n                \".o_web_studio_xml_resource_selector .o-dropdown--menu .o_select_menu_item:contains(Odoo Studio)\",\n        },\n        {\n            trigger: \".ace_content\",\n            run() {\n                ace.edit(document.querySelector(\".ace_editor\")).setValue(\"<data/>\");\n            },\n        },\n        {\n            trigger: \".o_web_studio_xml_editor .o_web_studio_xml_resource_selector .btn-primary\",\n        },\n        {\n            trigger: \".o_web_studio_snackbar:not(:has(.fa-spin))\",\n        },\n        {\n            trigger: \".o_form_view\",\n            run() {\n                if (document.querySelector(\".someDiv\")) {\n                    throw new Error(\"The edition of the view's arch via the xml editor failed\");\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_enter_x2many_edition_and_add_field\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='user_ids']\",\n        },\n        {\n            extra_trigger: \".o-web-studio-edit-x2manys-buttons\",\n            trigger: \".o_web_studio_editX2Many[data-type='form']\",\n        },\n        {\n            extra_trigger: \".o_view_controller.o_form_view.test-user-form\",\n            trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n        },\n        {\n            extra_trigger: \".o_web_studio_existing_fields_section:not(.d-none)\",\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\",\n            run() {\n                $(\n                    \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\"\n                )[0].scrollIntoView();\n            },\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_web_studio_hook:eq(1))\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='log_ids']\",\n            run() {\n                const countFields = document.querySelectorAll(\n                    \".o_web_studio_form_view_editor .o_field_widget\"\n                ).length;\n                if (!countFields === 2) {\n                    throw new Error(\"There should be 2 fields in the form view\");\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_enter_x2many_auto_inlined_subview\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger:\n                \".o_web_studio_form_view_editor .o_field_widget[name='user_ids'] .o_field_x2many_list\",\n        },\n        {\n            extra_trigger: \".o-web-studio-edit-x2manys-buttons\",\n            trigger: \".o_web_studio_editX2Many[data-type='list']\",\n        },\n        {\n            extra_trigger: \".o_view_controller.o_list_view.test-user-list\",\n            trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n        },\n        {\n            extra_trigger: \".o_web_studio_existing_fields_section:not(.d-none)\",\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\",\n            run() {\n                $(\n                    \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\"\n                )[0].scrollIntoView();\n            },\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\",\n            run: \"drag_and_drop_native (.o_web_studio_list_view_editor .o_web_studio_hook:eq(1))\",\n        },\n        {\n            trigger: \".o_web_studio_list_view_editor th[data-name='log_ids']\",\n            run() {\n                const countFields = document.querySelectorAll(\n                    \".o_web_studio_form_view_editor th[data-name]\"\n                ).length;\n                if (!countFields === 2) {\n                    throw new Error(\"There should be 2 fields in the form view\");\n                }\n            },\n        },\n    ],\n});\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"web_studio_enter_x2many_auto_inlined_subview_with_multiple_field_matching\", {\n        test: true,\n        sequence: 260,\n        steps: () => [\n            {\n                trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            },\n            {\n                trigger: \".o_form_view .o_form_editable\",\n            },\n            {\n                trigger: \".o_web_studio_navbar_item button\",\n            },\n            {\n                trigger:\n                    \".o_web_studio_form_view_editor .o_field_widget[name='user_ids']:eq(1) .o_field_x2many_list\",\n            },\n            {\n                extra_trigger: \".o-web-studio-edit-x2manys-buttons\",\n                trigger: \".o_web_studio_editX2Many[data-type='list']\",\n            },\n            {\n                extra_trigger: \".o_view_controller.o_list_view.test-user-list\",\n                trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n            },\n            {\n                extra_trigger: \".o_web_studio_existing_fields_section:not(.d-none)\",\n                trigger:\n                    \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\",\n                run() {\n                    $(\n                        \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\"\n                    )[0].scrollIntoView();\n                },\n            },\n            {\n                trigger:\n                    \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(User log entries)\",\n                run: \"drag_and_drop_native (.o_web_studio_list_view_editor .o_web_studio_hook:eq(1))\",\n            },\n            {\n                trigger: \".o_web_studio_list_view_editor th[data-name='log_ids']\",\n                run() {\n                    const countFields = document.querySelectorAll(\n                        \".o_web_studio_form_view_editor th[data-name]\"\n                    ).length;\n                    if (!countFields === 2) {\n                        throw new Error(\"There should be 2 fields in the form view\");\n                    }\n                },\n            },\n        ],\n    });\n\nregistry.category(\"web_tour.tours\").add(\n    \"web_studio_boolean_field_drag_and_drop\",\n    {\n        test: true,\n        sequence: 260,\n        steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\"\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\"\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\"\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_new_fields .o_web_studio_field_boolean\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_web_studio_hook:eq(0))\",\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor\",\n            trigger: \".o_wrap_field_boolean .o_wrap_label\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_web_studio_hook:eq(2))\",\n        },\n        {\n            trigger: \".o_wrap_label:eq(1):contains('New CheckBox')\",\n            run() {}\n        },\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_field_with_group\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_list_view\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_list_view_editor th[data-name='function']\",\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n        },\n        {\n            extra_trigger: \".o_web_studio_existing_fields_section:not(.d-none)\",\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\",\n            run() {\n                $(\n                    \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\"\n                )[0].scrollIntoView();\n            },\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\",\n            run: \"drag_and_drop_native (.o_web_studio_list_view_editor th.o_web_studio_hook:eq(2))\",\n        },\n        {\n            extra_trigger:\n                \".o_web_studio_list_view_editor th.o_web_studio_hook:not(.o_web_studio_nearest_hook)\",\n            trigger: \".o_web_studio_list_view_editor th[data-name='website']\",\n            run() {\n                const countFields = document.querySelectorAll(\n                    \".o_web_studio_list_view_editor th[data-name]\"\n                ).length;\n                if (!countFields === 3) {\n                    throw new Error(\"There should be 3 fields in the form view\");\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_set_tree_node_conditional_invisibility\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n            extra_trigger: \".o_list_view\",\n        },\n        {\n            trigger: \".o_web_studio_list_view_editor th[data-name='title']\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar_checkbox:nth-child(1) .o_web_studio_attrs\",\n        },\n        {\n            trigger: \".o_model_field_selector_value\",\n        },\n        {\n            trigger: \".o_model_field_selector_popover_item_name:contains('Display Name')\",\n            in_modal: false,\n        },\n        {\n            trigger: \".o_tree_editor_condition input.o_input\",\n            run: \"text Robert\",\n        },\n        {\n            trigger: \".modal-footer .btn-primary\",\n        },\n        {\n            trigger: \".o_web_studio_list_view_editor th[data-name='title']\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_elements_with_groups_form\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor\",\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n        },\n        {\n            extra_trigger: \".o_web_studio_existing_fields_section:not(.d-none)\",\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\",\n            run() {\n                $(\n                    \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\"\n                )[0].scrollIntoView();\n            },\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_inner_group .o_web_studio_hook:eq(1))\",\n        },\n        {\n            extra_trigger:\n                \".o_web_studio_form_view_editor .o_web_studio_hook:not(.o_web_studio_nearest_hook)\",\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='website']\",\n            allowInvisible: true,\n            run() {\n                const countFields = document.querySelectorAll(\n                    \".o_web_studio_form_view_editor .o_field_widget[name]\"\n                ).length;\n                if (!countFields === 2) {\n                    throw new Error(\"There should be 2 fields in the form view\");\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"test_element_group_in_sidebar\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor .o_field_widget[name='display_name']\",\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='display_name']\",\n        },\n        {\n            trigger: \".o_field_many2many_tags[name='groups_id'] .badge\",\n            run() {\n                const tag = document.querySelector(\n                    \".o_field_many2many_tags[name='groups_id'] .badge\"\n                );\n                if (!tag || !tag.textContent.includes(\"Test Group\")) {\n                    throw new Error(\"The groups should be displayed in the sidebar\");\n                }\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_custom_selection_field_edit_values\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_new_fields .o_web_studio_field_selection\",\n            run: \"drag_and_drop_native (.o_web_studio_hook:eq(0))\",\n        },\n        {\n            trigger: \".o_web_studio_add_selection .o-web-studio-interactive-list-item-input\",\n            run: \"text some value\",\n        },\n        {\n            trigger: \".modal-footer .btn-primary\",\n        },\n        {\n            extra_trigger: \"body:not(:has(.modal))\",\n            trigger: \".o_web_studio_leave\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_wrap_input:has(.o_field_selection)\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_edit_selection_values\",\n        },\n        {\n            in_modal: true,\n            trigger: \".o_web_studio_add_selection .o-web-studio-interactive-list-item-input\",\n            run: \"text another value cancel\",\n        },\n        {\n            trigger: \".o_web_studio_add_selection .o-web-studio-interactive-list-edit-item\",\n        },\n        {\n            trigger: \".o_web_studio_selection_editor li:nth-child(2)\",\n            async run() {\n                assertEqual(this.$anchor[0].textContent, \"another value cancel\");\n            },\n        },\n        {\n            trigger: \".modal-footer .btn-secondary\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_edit_selection_values\",\n        },\n        {\n            trigger: \".o_web_studio_selection_editor li\",\n            run() {\n                assertEqual(\n                    Array.from(this.$anchor)\n                        .map((el) => el.textContent)\n                        .join(\" \"),\n                    \"some value\"\n                );\n            },\n        },\n        {\n            in_modal: true,\n            trigger: \".o_web_studio_add_selection .o-web-studio-interactive-list-item-input\",\n            run: \"text another value\",\n        },\n        {\n            trigger: \".modal-footer .btn-primary\",\n        },\n        {\n            extra_trigger: \"body:not(:has(.modal))\",\n            trigger: \".o_web_studio_leave\",\n        },\n        stepNotInStudio(),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_create_one2many_lines_then_edit_name\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_new_fields .o_web_studio_field_lines\",\n            run: \"drag_and_drop_native (.o_web_studio_hook:eq(0))\",\n        },\n        {\n            trigger: \".o_form_label\",\n            extra_trigger: \".o_field_x2many_list\",\n            timeout: 20000,\n        },\n        {\n            extra_trigger: \".o_web_studio_sidebar .o_web_studio_properties.active\",\n            trigger: \"input[name='string']\",\n            run: \"text new name\",\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n            timeout: 20000,\n        },\n        stepNotInStudio(\".o_form_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_address_view_id_no_edit\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_address_format\",\n            run: function () {\n                if (\n                    this.$anchor.find(\"[name=lang]\").length ||\n                    !this.$anchor.find(\"[name=street]\").length\n                ) {\n                    throw new Error(\n                        \"The address view id set on the company country should be displayed\"\n                    );\n                }\n            },\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            extra_trigger: \".o_web_studio_view_renderer\",\n            trigger: \".o_address_format\",\n            run: function () {\n                if (\n                    this.$anchor.find(\"[name=street]\").length ||\n                    !this.$anchor.find(\"[name=lang]\").length\n                ) {\n                    throw new Error(\n                        \"The address view id set on the company country shouldn't be editable\"\n                    );\n                }\n            },\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n        },\n        stepNotInStudio(\".o_form_view\"),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_create_new_model_from_existing_view\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_kanban_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_create_new_model\",\n        },\n        {\n            extra_trigger: \".modal-dialog\",\n            trigger: \"input[name='model_name']\",\n            run: \"text new model\",\n        },\n        {\n            trigger: \".confirm_button\",\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            trigger: \".o_form_view\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_create_model_with_clickable_stages\", {\n    test: true,\n    sequence: 260,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_create_new_model\",\n        },\n        {\n            extra_trigger: \".modal-dialog\",\n            trigger: \"input[name='model_name']\",\n            run: \"text new model\",\n        },\n        {\n            trigger: \".confirm_button\",\n        },\n        {\n            trigger: \"#use_stages\",\n        },\n        {\n            trigger: \".o_web_studio_model_configurator_next\",\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \"input#x_name_0\",\n            run: \"text new record\",\n        },\n        {\n            trigger: \".o_arrow_button:contains(In Progress)\",\n        },\n        {\n            extra_trigger: \".o_arrow_button_current:contains(In Progress)\",\n            trigger: \".o_form_button_save\",\n        },\n        {\n            trigger: \".o_back_button\",\n        },\n        {\n            trigger:\n                \".o_kanban_group:contains(In Progress) .o_kanban_record_details:contains(new record)\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"web_studio_test_enter_x2many_edition_with_multiple_subviews\", {\n        test: true,\n        sequence: 260,\n        steps: () => [\n            {\n                trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            },\n            {\n                extra_trigger: \".o_form_view span:contains('Address Type')\",\n                trigger: \".o_web_studio_navbar_item button\",\n            },\n            {\n                trigger:\n                    \".o_web_studio_form_view_editor .o_field_widget[name='child_ids'] .o_field_x2many_list\",\n                extra_trigger: \".o_list_renderer span:contains('Address Type')\",\n            },\n            {\n                extra_trigger: \".o-web-studio-edit-x2manys-buttons\",\n                trigger: \".o_web_studio_editX2Many[data-type='list']\",\n            },\n            {\n                trigger: \".o_content > .o_list_renderer span:contains('Address Type')\",\n                isCheck: true,\n            },\n        ],\n    });\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"web_studio_test_enter_x2many_edition_with_multiple_subviews_correct_xpath\", {\n        test: true,\n        sequence: 260,\n        steps: () => [\n            {\n                trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            },\n            {\n                extra_trigger: \".o_form_view\",\n                trigger: \".o_web_studio_navbar_item button\",\n            },\n            {\n                trigger:\n                    \".o_web_studio_form_view_editor .o_field_widget[name='child_ids'] .o_field_x2many_list\",\n            },\n            {\n                extra_trigger: \".o-web-studio-edit-x2manys-buttons\",\n                trigger: \".o_web_studio_editX2Many[data-type='list']\",\n            },\n            {\n                extra_trigger: \".o_view_controller.o_list_view.test-subview-list\",\n                trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n            },\n            {\n                extra_trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_section\",\n                trigger: `.o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component[data-drop='${JSON.stringify(\n                    { fieldName: \"active\" }\n                )}']`,\n                run: \"drag_and_drop_native (.o_web_studio_hook:eq(0))\",\n            },\n            {\n                content: \"Check that the active field has been added\",\n                trigger: \".o_web_studio_view_renderer .o_list_view thead th[data-name='active']\",\n                isCheck: true,\n            },\n        ],\n    });\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_studio_view_is_last\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n        },\n        {\n            extra_trigger: \".o_web_studio_existing_fields_section:not(.d-none)\",\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\",\n            run() {\n                $(\n                    \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\"\n                )[0].scrollIntoView();\n            },\n        },\n        {\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Website Link)\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_inner_group .o_web_studio_hook:last)\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='website']\",\n            allowInvisible: true,\n            run() {},\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_edit_form_subview_attributes\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger:\n                \".o_web_studio_form_view_editor .o_field_widget[name='child_ids'] .o_field_x2many_list\",\n        },\n        {\n            extra_trigger: \".o-web-studio-edit-x2manys-buttons\",\n            trigger: \".o_web_studio_editX2Many[data-type='form']\",\n        },\n        {\n            extra_trigger: \".o_view_controller.o_form_view.test-subview-form\",\n            trigger: \".o_web_studio_sidebar.o_notebook .nav-link:contains(View)\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar input[name='create']:checked\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar input[name='create']:not(:checked)\",\n            run() {},\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_x2many_two_levels_edition\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='user_ids']\",\n        },\n        {\n            extra_trigger: \".o-web-studio-edit-x2manys-buttons\",\n            trigger: \".o_web_studio_editX2Many[data-type='form']\",\n        },\n        {\n            extra_trigger: \".o_view_controller.o_form_view.test-subview-form-1\",\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='log_ids']\",\n        },\n        {\n            trigger: \".o_web_studio_editX2Many[data-type='form']\",\n        },\n        {\n            trigger: \".o_view_controller.o_form_view.test-subview-form-2\",\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_existing_fields_header\",\n        },\n        {\n            extra_trigger: \".o_web_studio_existing_fields\",\n            trigger:\n                \".o_web_studio_sidebar .o_web_studio_existing_fields_section .o_web_studio_component:contains(Created on)\",\n            run: \"drag_and_drop_native .o_web_studio_hook\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor [data-field-name='create_date']\",\n            run() {},\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_field_group_studio_no_fetch\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor\",\n            run() {\n                assertEqual(this.$anchor[0].querySelectorAll(\".o_field_widget\").length, 1);\n                assertEqual(\n                    this.$anchor[0].querySelectorAll(\".o_field_widget\")[0].dataset.studioXpath,\n                    \"/form[1]/field[2]\"\n                );\n            },\n        },\n        {\n            trigger: \".o_web_studio_views_icons a[title='List']\",\n        },\n        {\n            trigger: \".o_web_studio_list_view_editor\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].querySelectorAll(\"th:not(.o_web_studio_hook)\").length,\n                    1\n                );\n                assertEqual(\n                    this.$anchor[0].querySelectorAll(\"th:not(.o_web_studio_hook)\")[0].dataset\n                        .studioXpath,\n                    \"/tree[1]/field[2]\"\n                );\n            },\n        },\n        {\n            trigger: \".o_web_studio_views_icons a[title='Kanban']\",\n        },\n        {\n            trigger: \".o_web_studio_kanban_view_editor\",\n            run() {\n                assertEqual(\n                    this.$anchor[0].querySelectorAll(\n                        \".o_kanban_record:not(.o_kanban_demo):not(.o_kanban_ghost) [data-field-name]\"\n                    ).length,\n                    1\n                );\n                assertEqual(\n                    this.$anchor[0]\n                        .querySelectorAll(\n                            \".o_kanban_record:not(.o_kanban_demo):not(.o_kanban_ghost) [data-field-name]\"\n                        )[0]\n                        .getAttribute(\"studioxpath\"),\n                    \"/kanban[1]/t[1]/field[2]\"\n                );\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_move_similar_field\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor\",\n            trigger: \".o_notebook_headers a:contains('two')\",\n        },\n        {\n            trigger: \".tab-pane.active [data-field-name=display_name]\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_web_studio_hook:eq(1))\",\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n            run() {},\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_related_file\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_user_menu']\",\n        },\n        {\n            content: \"second\",\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor\",\n            trigger: \".o_web_studio_field_related\",\n            run: \"drag_and_drop_native (.o_inner_group)\",\n        },\n        {\n            extra_trigger: \".modal-dialog\",\n            trigger: \".o_model_field_selector_value\",\n        },\n        {\n            in_modal: false,\n            extra_trigger: \".o_model_field_selector_popover\",\n            trigger: \".o_model_field_selector_popover_search input\",\n            run: \"text Related Partner\",\n        },\n        {\n            in_modal: false,\n            trigger: \"[data-name=partner_id] > button.o_model_field_selector_popover_item_relation\",\n        },\n        {\n            in_modal: false,\n            trigger: \".o_model_field_selector_popover_search input\",\n            run: \"text New File\",\n        },\n        {\n            in_modal: false,\n            trigger:\n                \".o_model_field_selector_popover_item_name:contains(New File):not(:contains(filename))\",\n        },\n        {\n            trigger: \".modal-footer .btn-primary:first\",\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n            run() {},\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_undo_new_field\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_new_fields .o_web_studio_field_integer\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_web_studio_hook:eq(1))\",\n        },\n        {\n            trigger: \"button.o_web_studio_undo.o_web_studio_active\",\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n            isCheck: true,\n        }\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_change_lone_attr_modifier_form\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor\",\n            trigger: \".o_field_widget[name='name']\",\n        },\n        {\n            extra_trigger: `.o_web_studio_sidebar input[name=\"required\"]`,\n            trigger: '.o_web_studio_sidebar',\n            run() {\n                const required = this.$anchor[0].querySelector(`input[name=\"required\"]`);\n                assertEqual(required.checked, true);\n            }\n        },\n        {\n            trigger: '.o_web_studio_sidebar input[name=\"required\"]',\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor:not(:has(.o_required_modifier))\",\n            trigger: '.o_web_studio_sidebar',\n            run() {\n                const required = this.$anchor[0].querySelector(`input[name=\"required\"]`);\n                assertEqual(required.checked, false);\n            }\n        }\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_new_field_rename_description\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            extra_trigger: \".o_web_studio_form_view_editor\",\n            trigger: \".o_web_studio_sidebar .o_web_studio_component.o_web_studio_field_char\",\n            run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_web_studio_hook:eq(1))\"\n        },\n        {\n            trigger: \".o_web_studio_sidebar input[name='string']\",\n            run: \"text my new field\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor label[for='x_studio_my_new_field_0']:contains(my new field)\",\n            isCheck: true,\n        }\n    ]\n});\n\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"web_studio_test_edit_digits_option\", {\n        test: true,\n        url: \"/web\",\n        sequence: 260,\n        steps: () => [\n            {\n                trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            },\n            {\n                trigger: \".o_form_view .o_form_editable\",\n            },\n\n            {\n                trigger: \".o_web_studio_navbar_item button\",\n            },\n            {\n                extra_trigger: \".o_web_studio_view_renderer\",\n                trigger: \"[name=partner_latitude]\",\n            },\n            {\n                trigger: \"input#digits\",\n                run: \"text 2\",\n            },\n            {\n                trigger: \".o_web_studio_leave\",\n                isCheck: true,\n            },\n        ],\n    });\n\n    registry.category(\"web_tour.tours\").add(\"web_studio_no_fetch_subview\", {\n        test: true,\n        steps: () => [\n            {\n                trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            },\n            {\n                trigger: \"input#name_0\",\n                run: \"text value\"\n            },\n            {\n                trigger: \"button.o_form_button_save\",\n            },\n            {\n                extra_trigger: \".o_form_view\",\n                trigger: \".o_web_studio_navbar_item button\",\n            },\n            {\n                trigger: \".o_web_studio_sidebar .o_web_studio_new_fields .o_web_studio_field_many2many\",\n                run: \"drag_and_drop_native (.o_web_studio_form_view_editor .o_web_studio_hook:eq(0))\",\n            },\n            {\n                trigger: \".o_record_selector input\",\n                run: \"text Contact\",\n            },\n            {\n                trigger:\"a.dropdown-item:contains(Contact)\",\n            },\n            {\n                trigger: \".modal-footer button.btn-primary\",\n            },\n            {\n                trigger:\".o_wrap_field label:contains('New Many2Many')\",\n                isCheck: true,\n            }\n        ],\n    });\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_button_rainbow_effect\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            trigger: \".o_form_view .o_form_editable\",\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: `.o_web_studio_view_renderer button[name=\"open_commercial_entity\"]`,\n        },\n        {\n            trigger: \".o_web_studio_sidebar #effect\",\n        },\n        {\n            extra_trigger: \".o_web_studio_sidebar #rainbow_message\",\n            trigger: \".o_web_studio_sidebar\",\n            run() {\n                const blob = new Blob(\n                    [\n                        \"iVBORw0KGgoAAAANSUhEUgAAAAIAAAACCAIAAAD91JpzAAAAF0lEQVR4nGJxKFrEwMDAxAAGgAAAAP//D+IBWx9K7TUAAAAASUVORK5CYII=\",\n                    ],\n                    { type: \"image/png\" }\n                );\n                const file = new File([blob], \"my_studio_image.png\");\n\n                const fileInput = document.querySelector(\n                    \".o_web_studio_sidebar .o_file_input input\"\n                );\n                const dataTransfer = new DataTransfer();\n                dataTransfer.items.add(file);\n                fileInput.files = dataTransfer.files;\n                fileInput.dispatchEvent(new Event(\"change\"));\n            },\n        },\n        {\n            trigger: \".o_web_studio_sidebar img[src^='/web/content']\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio.test_res_users_fake_fields\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".o_web_studio_existing_fields_header\"\n        },\n        {\n            trigger: \".o_web_studio_existing_fields\",\n            run() {\n                const elements = [...document.querySelectorAll(\".o_web_studio_component\")];\n                const fieldStrings = elements.map(el => el.innerText.split(\"\\n\")[0]);\n                assertEqual(fieldStrings.includes(\"Administration\"), false);\n                assertEqual(fieldStrings.includes(\"Multi Companies\"), false);\n            }\n        }\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_reload_after_restoring_default_view\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='name']\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar input[name='string']\",\n            run: \"text new name\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_web_studio_view\",\n        },\n        {\n            trigger: \".o_web_studio_restore\"\n        },\n        {\n            trigger: \".modal-footer .btn-primary\",\n        },\n        {\n            extra_trigger: \".o_web_studio_undo:not(.o_web_studio_active)\",\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name='name'] span:contains('Name')\",\n            isCheck: true,\n        },\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_edit_reified_field\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n        },\n        {\n            extra_trigger: \".o_form_view\",\n            trigger: \".o_web_studio_navbar_item button\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor .o_field_widget[name^='sel_groups_'],.o_web_studio_form_view_editor .o_field_widget[name^='in_groups_']\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar input[name='string']\",\n            run: \"text new name\",\n        },\n        {\n            trigger: \".o_web_studio_leave\",\n            isCheck: true,\n        },\n    ]\n});\n\nregistry.category(\"web_tour.tours\").add(\"web_studio_test_approval_button_xml_id\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \"a[data-menu-xmlid='web_studio.studio_test_partner_menu']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o_form_view\",\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_navbar_item button:enabled\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o_web_studio_form_view_editor button[name='base.action_model_data']\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o_web_studio_sidebar #studio_approval\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o_web_studio_view_renderer .o_web_studio_approval_avatar\",\n            run() {},\n        },\n        {\n            trigger: \".o_web_studio_sidebar .o_approval_group #group_id\",\n            run() {},\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('hr_employee_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n        run: 'click',\n    },\n    {\n        content: \"Open an Employee Profile\",\n        trigger: \".o_kanban_record_title:contains('Johnny H.')\",\n        run: 'click',\n    },\n    {\n        content: \"Open user account menu\",\n        trigger: \".o_user_menu .dropdown-toggle\",\n        run: 'click',\n    }, {\n        content: \"Open My Profile\",\n        trigger: \"[data-menu=settings]\",\n        run: 'click',\n    },\n]});\n", "/** @odoo-module **/\n\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { registry } from \"@web/core/registry\";\nimport { patch } from \"@web/core/utils/patch\";\n\n/**\n * As 'hr' changes the flow a bit and displays the user preferences form in a full view instead of\n * a modal, we adapt the steps of the original tour accordingly.\n */\npatch(registry.category(\"web_tour.tours\").get(\"mail/static/tests/tours/user_modify_own_profile_tour.js\"), {\n    steps() {\n        return [\n            {\n                content: 'Open user account menu',\n                trigger: '.o_user_menu button',\n            }, \n            {\n                content: \"Open preferences / profile screen\",\n                trigger: '[data-menu=settings]',\n            }, \n            {\n                content: \"Update the email address\",\n                trigger: 'div[name=\"email\"] input',\n                run: 'text updatedemail@example.com',\n            }, \n            ...stepUtils.saveForm(),\n        ];\n    }\n});\n\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { appendArticleLink, endKnowledgeTour } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_article_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, ...appendArticleLink('[name=\"body\"]', \"EditorCommandsArticle\"),\n{ // wait for the block to appear in the editor\n    trigger: '.o_knowledge_behavior_type_article:contains(\"EditorCommandsArticle\")',\n    run: 'click',\n}, { // check that the view switched to the corresponding article while keeping the breadcrumbs history\n    trigger: '.o_knowledge_header:has(.o_breadcrumb_article_name_container:contains(\"EditorCommandsArticle\")):has(.breadcrumb-item > a:contains(\"EditorCommandsArticle\"))'\n}, ...endKnowledgeTour()\n]});\n\nconst composeBody = '.modal-dialog:contains(Compose Email) [name=\"body\"]';\nregistry.category(\"web_tour.tours\").add('knowledge_article_command_dialog_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the chatter\n    trigger: '.btn-chatter',\n}, { // open the message editor\n    trigger: '.o-mail-Chatter-sendMessage:not([disabled=\"\"])',\n}, { // open the full composer\n    trigger: \"button[aria-label='Full composer']\",\n}, ...appendArticleLink(`${composeBody}`, 'EditorCommandsArticle'), { // wait for the block to appear in the editor\n    trigger: `${composeBody} .o_knowledge_behavior_type_article:contains(\"EditorCommandsArticle\")`,\n    run: () => {},\n}, ...appendArticleLink(`${composeBody}`, 'LinkedArticle', 1), { // wait for the block to appear in the editor, after the previous one\n    trigger: `${composeBody} .odoo-editor-editable > p > a:nth-child(2).o_knowledge_behavior_type_article:contains(\"LinkedArticle\")[contenteditable=\"false\"]`,\n    run: () => {},\n}, { // verify that the first block is still there and contenteditable=false\n    trigger: `${composeBody} .odoo-editor-editable > p > a:nth-child(1).o_knowledge_behavior_type_article:contains(\"EditorCommandsArticle\")[contenteditable=\"false\"]`,\n    run: () => {},\n}, { // send the message\n    trigger: '.o_mail_send',\n}, {\n    trigger: '.o_widget_knowledge_chatter_panel .o-mail-Thread .o-mail-Message-body > p > a:nth-child(1).o_knowledge_behavior_type_article:contains(\"EditorCommandsArticle\")',\n    run: () => {},\n}, {\n    trigger: '.o_widget_knowledge_chatter_panel .o-mail-Thread .o-mail-Message-body > p > a:nth-child(2).o_knowledge_behavior_type_article:contains(\"LinkedArticle\")',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction clickDate(el) {\n    const rect = el.getBoundingClientRect();\n    const eventParams = {\n        bubbles: true,\n        clientX: rect.left + 1,\n        clientY: rect.top + 1,\n    };\n    el.dispatchEvent(new MouseEvent('mousedown', eventParams));\n    el.dispatchEvent(new MouseEvent('mouseup', eventParams));\n}\n\nfunction dragDate(el, target) {\n    // Cannot use drag_and_drop because it uses the center of the elements\n    const elRect = el.getBoundingClientRect();\n    el.dispatchEvent(new MouseEvent('mousedown', {\n        bubbles: true,\n        clientX: elRect.left + 1,\n        clientY: elRect.top + 1,\n    }));\n    const targetRect = target.getBoundingClientRect();\n    target.dispatchEvent(new MouseEvent('mousemove', {\n        bubbles: true,\n        clientX: targetRect.left + 1,\n        clientY: targetRect.top + 1,\n    }));\n    target.dispatchEvent(new MouseEvent('mouseup', {\n        bubbles: true,\n        clientX: targetRect.left + 1,\n        clientY: targetRect.top + 1,\n    }));\n}\n\nregistry.category(\"web_tour.tours\").add('knowledge_calendar_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), { // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { \n    //-----------------------------------------------\n    // Insert a new item calendar view in the article\n    //-----------------------------------------------\n    \n    // Open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // Click on the /calendar command\n    trigger: '.oe-powerbox-commandName:contains(\"Calendar\")',\n    run: 'click',\n}, { // As the article does not have properties definitions, it should create default ones\n    trigger: '.modal-footer .btn-primary',\n}, { // Scroll to the embedded view to load it\n    trigger: '.o_knowledge_behavior_type_embedded_view',\n    run: () => {},\n}, { \n    //---------------------------------------------------\n    // Create an article item by clicking in the calendar\n    //---------------------------------------------------\n\n    // Click on a date\n    trigger: 'tr[data-time=\"08:00:00\"] td.fc-widget-content:not(.fc-time)',\n    extra_trigger: '.o_knowledge_behavior_type_embedded_view .o_knowledge_article_view_calendar_embedded_view',\n    run: function () {\n        clickDate(this.$anchor[0]);\n    },\n}, {\n    // Check we created an item with the right datetime used as property\n    trigger: '.o_knowledge_properties_field .o_property_field:contains(\"Start Date\")',\n    extra_trigger: '.o_breadcrumb_article_name_container span:empty',\n    run: function () {\n        const input = this.$anchor.find(\"input\")[0];\n        if (!input.value.includes(\"08:00:00\")) {\n            throw new Error('Item was not created with the correct property value');\n        }\n    },\n}, { // Set the name of the item\n    trigger: '.o_knowledge_editor .odoo-editor-editable h1',\n    run: 'text Item Article',\n}, { // Go back to parent article\n    trigger: '.o_knowledge_tree .o_article_name:contains(\"EditorCommandsArticle\")',\n    run: 'click',\n}, { // Check that the item is shown in the calendar\n    trigger: '.fc-time-grid-event .o_event_title:contains(\"Item Article\")',\n    run: () => {},\n}, {\n    //--------------------------------------------------------------\n    // Insert another item calendar view (to test advanced settings)\n    // and create new start and stop properties to use by the view\n    //--------------------------------------------------------------\n\n    // Remove previous item calendar view\n    trigger: '.odoo-editor-editable',\n    run: function () {\n        this.$anchor.data('wysiwyg').odooEditor.resetContent();\n    },\n}, {\n    // Click on the \"Create Item Calednar\" helper\n    trigger: '.o_knowledge_helper .o_knowledge_add_item_calendar',\n    extra_trigger: '.odoo-editor-editable:not(:has(.o_knowledge_behavior_type_embedded_view))',\n    run: 'click',\n}, { // Open the start date dropdown\n    trigger: '.o_knowledge_item_calendar_dialog_date_start .o_select_menu_toggler',\n    run: 'click',\n}, { // Create a new start property\n    trigger: '.o_knowledge_item_calendar_dialog_date_start .o_select_menu input',\n    run: 'text Start Property'\n}, {\n    trigger: '.o_knowledge_item_calendar_dialog_date_start .o_select_menu .o_select_menu_item.o_create_datetime',\n    run: 'click',\n}, { // Open the stop dropwdown\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu_toggler',\n    run: 'click',\n}, { // Create a new stop property\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu input',\n    run: 'text Stop Property'\n}, {\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu .o_select_menu_item.o_create_choice',\n    run: 'click',\n}, { // Insert the calendar\n    trigger: '.modal-footer .btn-primary',\n    run: 'click',\n}, {\n    //---------------------------------------------------\n    // Create an article item by clicking in the calendar\n    //---------------------------------------------------\n\n    // Click on a date\n    trigger: 'tr[data-time=\"08:00:00\"] td.fc-widget-content:not(.fc-time)',\n    extra_trigger: '.o_knowledge_behavior_type_embedded_view .o_knowledge_article_view_calendar_embedded_view',\n    run: function () {\n        clickDate(this.$anchor[0]);\n    },\n}, {\n    // Check we created an item with the right datetime used as property\n    trigger: '.o_knowledge_properties_field .o_property_field:contains(\"Start Property\")',\n    extra_trigger: '.o_breadcrumb_article_name_container span:empty',\n    run: function () {\n        const input = this.$anchor.find(\"input\")[0];\n        if (!input.value.includes(\"08:00:00\")) {\n            throw new Error('Item was not created with the correct property value');\n        }\n    },\n}, { \n    //-----------------------------------------------------------------------\n    // Create new properties from the article view that will be used later in\n    // this tour\n    //-----------------------------------------------------------------------\n\n    // Create a new date property\n    trigger: '.o_knowledge_properties_field .o_field_property_add button',\n    run: 'click',\n}, {\n    trigger: '.o_field_property_definition_header',\n    run: 'text Date Property',\n}, {\n    trigger: '.o_field_property_definition_type button.dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.o_field_property_definition_type .dropdown-menu .dropdown-item:contains(\"Date\"):not(:contains(\"Time\"))',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_editor .odoo-editor-editable',\n    run: 'click',\n}, { // Create a new checkbox property\n    trigger: '.o_knowledge_properties_field .o_field_property_add button',\n    run: 'click',\n}, {\n    trigger: '.o_field_property_definition_header',\n    run: 'text Boolean Property',\n}, {\n    trigger: '.o_field_property_definition_type button.dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.o_field_property_definition_type .dropdown-menu .dropdown-item:contains(\"Checkbox\")',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_editor .odoo-editor-editable',\n    run: 'click',\n}, { // Create a text property\n    trigger: '.o_knowledge_properties_field .o_field_property_add button',\n    run: 'click',\n}, {\n    trigger: '.o_field_property_definition_header',\n    run: 'text Text Property',\n}, {\n    trigger: '.o_field_property_definition_type button.dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.o_field_property_definition_type .dropdown-menu .dropdown-item:contains(\"Text\")',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_editor .odoo-editor-editable',\n    run: 'click',\n}, { // Set the text property\n    trigger: '.o_knowledge_properties_field .o_property_field:contains(\"Text Property\") input',\n    run: 'text Custom text',\n}, { // Set the name of the item \n    trigger: '.o_knowledge_editor .odoo-editor-editable h1',\n    run: 'text Item Article',\n}, { // Go back to parent article\n    trigger: '.o_knowledge_tree .o_article_name:contains(\"Article Items\")',\n    run: 'click',\n}, { // Check that the item is shown in the calendar\n    trigger: '.fc-time-grid-event .o_event_title:contains(\"Item Article\")',\n    run: () => {},\n}, {\n    //-------------------------------------------------------------------------\n    // Test the props editor dialog by changing the values, check that the view\n    // is updated accordingly, and set the start and stop dates back to check\n    // that the item article is shown again\n    //-------------------------------------------------------------------------\n\n    // Open the view props editor\n    trigger: '.o_control_panel_breadcrumbs_actions .dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.dropdown-item:contains(Edit)'\n}, { // Change the start property\n    trigger: '.o_knowledge_item_calendar_dialog_date_start .o_select_menu_toggler',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_item_calendar_dialog_date_start .o_select_menu .o_select_menu_item:contains(\"Date Property\")',\n    run: 'click',\n}, { // Check that stop date has been removed as the start type changed,\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu_toggler_slot span.text-muted',\n    run: () => {},\n}, { // Open the stop property dropdown\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu_toggler',\n    run: 'click',\n}, { // Check that one cannot use the selected start date\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu:not(:contains(\"Date Property\"))',\n    run: () => {},\n}, { // Don't select a stop property\n    trigger: '.o_knowledge_item_calendar_props_dialog',\n    run: 'click',\n}, { // Open the color property dropdown\n    trigger: '.o_color .o_select_menu_toggler',\n    run: 'click',\n}, { // Select the previously created property\n    trigger: '.o_color .o_select_menu .o_select_menu_item:contains(\"Boolean Property\")',\n    run: 'click',\n}, { // Open the scale dropdown\n    trigger: '.o_scale .o_select_menu_toggler',\n    run: 'click',\n}, { // Select the month scale\n    trigger: '.o_scale .o_select_menu .o_select_menu_item:contains(\"Month\")',\n    run: 'click',\n}, { // Save changes\n    trigger: '.modal-footer .btn-primary',\n    run: 'click',\n}, { // Check calendar has been updated (new scale and no item shown)\n    trigger: '.o_knowledge_article_view_calendar_embedded_view .o_calendar_header .o_view_scale_selector:contains(\"Month\")',\n    extra_trigger: '.fc-view:not(:has(.fc-event-container))',\n    run: () => {},\n}, { // Change start and stop dates again\n    trigger: '.o_control_panel_breadcrumbs_actions .dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.dropdown-item:contains(Edit)'\n}, { // Change the start property\n    trigger: '.o_knowledge_item_calendar_dialog_date_start .o_select_menu_toggler',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_item_calendar_dialog_date_start .o_select_menu .o_select_menu_item:contains(\"Start Property\")',\n    run: 'click',\n}, { // Check that stop date has been removed as the start type changed,\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu_toggler_slot span.text-muted',\n    run: () => {},\n}, { // Open the stop property dropdown\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu_toggler',\n    run: 'click',\n}, { // Select the stop date\n    trigger: '.o_knowledge_item_calendar_dialog_date_stop .o_select_menu .o_select_menu_item:contains(\"Stop Property\")',\n    run: 'click',\n}, { // Save changes\n    trigger: '.modal-footer .btn-primary',\n    run: 'click',\n}, { // Open the view\n    trigger: '.o_control_panel_breadcrumbs_actions .dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.dropdown-item:contains(Open)'\n}, { // Check that the item is shown\n    trigger: '.fc-view .o_event_title:contains(\"Item Article\")',\n    extra_trigger: '.o_knowledge_article_view_calendar_embedded_view.o_action',\n    run: () => {},\n}, { // Leave the app and come back to make sure that changes have been saved\n    trigger: '.o_main_navbar .o_menu_toggle',\n}, {\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n    run: 'click',\n}, { \n    //----------------------------\n    // Move the item and resize it\n    //----------------------------\n\n    // Change the scale from the calendar view\n    trigger: '.o_knowledge_article_view_calendar_embedded_view .o_calendar_header .o_view_scale_selector button:contains(\"Month\")',\n    extra_trigger: '.o_knowledge_behavior_type_embedded_view',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_article_view_calendar_embedded_view .o_calendar_header .o_scale_button_week',\n    run: 'click',\n}, { // Move the item in the calendar\n    trigger: '.fc-time-grid-event .o_event_title:contains(\"Item Article\")',\n    run: function () {\n        const target = document.querySelector('tr[data-time=\"09:00:00\"] td.fc-widget-content:not(.fc-time)');\n        dragDate(this.$anchor[0], target);\n    },\n}, { // Make resizer visible\n    trigger: '.fc-time-grid-event',\n    run: function () {\n        const resizer = this.$anchor.find('.fc-end-resizer')[0];\n        resizer.style.display = \"block\";\n        resizer.style.width = \"100%\";\n        resizer.style.height = \"3px\";\n        resizer.style.bottom = \"0\";\n        },\n}, {\n    trigger: '.fc-time-grid-event:contains(\"Item Article\") .fc-end-resizer',\n    run: function () {\n        const target = document.querySelector('tr[data-time=\"11:00:00\"] td.fc-widget-content:not(.fc-time)');\n        dragDate(this.$anchor[0], target);\n    },\n}, { \n    //----------------------------------------------------------------------\n    // Check that the date properties have been updated correclty after that\n    // the item has been moved in the item calendar view, and that the text\n    // property has not been changed\n    //----------------------------------------------------------------------\n\n    // Open the item\n    trigger: '.fc-time-grid-event',\n    run: 'dblclick',\n}, { // Check that the properties have been updated\n    trigger: '.o_knowledge_properties_field .o_property_field:contains(\"Start Property\")',\n    extra_trigger: '.o_breadcrumb_article_name_container:contains(\"Item Article\")',\n    run: function () {\n        const input = this.$anchor.find(\"input\")[0];\n        if (!input.value.includes(\"09:00:00\")) {\n            throw new Error('Item start date property has not been updated');\n        }\n    },\n}, {\n    trigger: '.o_knowledge_properties_field .o_property_field:contains(\"Stop Property\")',\n    run: function () {\n        const input = this.$anchor.find(\"input\")[0];\n        // When resizing an event, the event spans the hovered row, so we need to add 15 minutes\n        if (!input.value.includes(\"11:15:00\")) {\n            throw new Error('Item stop date property has not been updated');\n        }\n    },\n}, { // Check text property did not change\n    trigger: '.o_knowledge_properties_field .o_property_field:contains(\"Text Property\")',\n    run: function () {\n        const input = this.$anchor.find(\"input\")[0];\n        if (!input.value.includes(\"Custom text\")) {\n            throw new Error('Item text property has changed');\n        }\n    },\n}, {\n    //---------------------------------------------------------------------\n    // Remove start property to test the behavior of the item calendar view\n    // when the required props are missing\n    //---------------------------------------------------------------------\n\n    // Click on edit property button\n    trigger: '.o_knowledge_properties_field .o_property_field:contains(\"Start Property\") .o_field_property_open_popover',\n    run: 'click',\n}, { // Delete start date property\n    trigger: '.o_field_property_definition .o_field_property_definition_delete',\n    run: 'click',\n}, { // Confirm deletion\n    trigger: '.modal-dialog .btn-primary',\n    run: 'click',\n}, { // Go back to parent article\n    trigger: '.o_knowledge_tree .o_article_name:contains(\"Article Items\")',\n    run: 'click',\n}, { // Make sure view is not crashed and shows nocontent helper\n    trigger: '.o_knowledge_article_view_calendar_embedded_view .o_knowledge_item_calendar_nocontent',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_file_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /file command\n    trigger: '.oe-powerbox-commandName:contains(\"File\")',\n    run: 'click',\n}, { // wait for the media dialog to open\n    trigger: '.o_select_media_dialog',\n}, { // click on the first item of the modal\n    trigger: '.o_existing_attachment_cell:contains(Onboarding)',\n    run: 'click'\n}, { // wait for the block to appear in the editor\n    trigger: '.o_knowledge_behavior_type_file a.o_image',\n    run: 'click',\n}, {\n    trigger: '.o-FileViewer-headerButton[aria-label=\"Close\"]',\n    extra_trigger: 'iframe.o-FileViewer-view body:contains(Content)',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_file_name_container:contains(Onboarding)',\n    run: function() {\n        this.$anchor[0].dispatchEvent(new Event('focus'));\n    }\n}, {\n    trigger: 'input[placeholder=\"Onboarding.txt\"]',\n    run: function (helpers) {\n        helpers.text(\"Renamed\");\n        this.$anchor[0].dispatchEvent(new Event('blur'));\n    }\n}, {\n    trigger: 'span.o_knowledge_file_name',\n    run: function() {\n        // specifically test that there is no zeroWidthSpace character in the\n        // name that would be added by the editor\n        const currentName = this.$anchor[0].textContent;\n        if (currentName !== \"Renamed\") {\n            throw new Error(`The new file name was expected to be: \"Renamed\", but the actual value is: \"${currentName}\"`);\n        }\n    },\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_index_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /index command\n    trigger: '.oe-powerbox-commandName:contains(\"Index\")',\n    run: 'click',\n}, { // wait for the block to appear in the editor\n    trigger: '.o_knowledge_behavior_type_articles_structure',\n}, { // click on the refresh button\n    trigger: '.o_knowledge_behavior_type_articles_structure button[title=\"Update\"]',\n    run: 'click',\n}, { // click on the switch mode button\n    trigger: '.o_knowledge_behavior_type_articles_structure button[title=\"Switch Mode\"]',\n    run: 'click',\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { setSelection } from '@web_editor/js/editor/odoo-editor/src/utils/utils';\nimport { markup } from \"@odoo/owl\";\n\nregistry.category(\"web_tour.tours\").add('knowledge_kanban_cards_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), { // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /kanban command\n    trigger: '.oe-powerbox-commandName:contains(\"Item Cards\")',\n    run: 'click',\n}, { // choose a name for the embedded view\n    trigger: '.modal-footer button.btn-primary',\n    run: 'click',\n},\n...commonKanbanSteps(),\n{ // create an article item\n    trigger: '.o_knowledge_behavior_type_embedded_view .o-kanban-button-new',\n    run: 'click',\n}, { // verify that the view switched to the article item\n    trigger: '.o_knowledge_header:has(input[id=\"name\"]:placeholder-shown):has(.breadcrumb-item > a:contains(\"EditorCommandsArticle\"))',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n\nregistry.category(\"web_tour.tours\").add('knowledge_kanban_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), { // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /kanban command\n    trigger: '.oe-powerbox-commandName:contains(\"Item Kanban\")',\n    run: 'click',\n}, { // choose a name for the embedded view\n    trigger: '.modal-footer button.btn-primary',\n    run: 'click',\n},\n...commonKanbanSteps(),\n{ // Check that the stages are well created\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_group .o_kanban_header_title:contains(\"Ongoing\")',\n    run: () => {},\n}, { // create an article item from Main New button\n    trigger: '.o_knowledge_behavior_type_embedded_view .o-kanban-button-new',\n    run: 'click',\n}, { // Type a Title for new article in the quick create form\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_quick_create .o_input',\n    run: 'text New Quick Create Item',\n}, { // Add a random icon to the new article in the quick create form\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_quick_create a[title=\"Add a random icon\"]',\n    run: 'click',\n}, { // Click on the icon to open the emoji picker and select another icon in the quick create form\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_quick_create .o_article_emoji',\n    run: 'click',\n}, { // Select an emoji for the new article\n    trigger: '.o-Emoji[data-codepoints=\"\ud83d\ude43\"]',\n    run: 'click',\n}, { // Click on Add to create the article\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_quick_create .o_kanban_add',\n    run: 'click'\n}, { // Verify that the article has been properly created\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_record_title span:contains(\"New Quick Create Item\")',\n    extra_trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_record_title .o_article_emoji:contains(\"\ud83d\ude43\")',\n    run: () => {},\n}, { // Click on the icon of the created article to open the emoji picker\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_record_title .o_article_emoji',\n    run: 'click',\n}, { // Select another emoji for the created article\n    trigger: '.o-Emoji[data-codepoints=\"\ud83e\udd29\"]',\n    run: 'click',\n}, { // Create a new article using quick create in OnGoing Column\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_group .o_kanban_header_title:contains(\"Ongoing\") .o_kanban_quick_add',\n    run: 'click'\n}, { // Type a Title for new article in the quick create form\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_group:has(.o_kanban_header_title:contains(\"Ongoing\")) .o_kanban_quick_create .o_input',\n    run: 'text Quick Create Ongoing Item',\n}, { // Click on Edit to open the article in edition in his own form view\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer .o_kanban_quick_create .o_kanban_edit',\n    run: 'click'\n}, { // verify that the view switched to the article item\n    trigger: '.o_knowledge_header .o_breadcrumb_article_name_container:contains(\"Quick Create Ongoing Item\")',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n\nregistry.category(\"web_tour.tours\").add('knowledge_item_kanban_custom_act_window', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), { // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // manually insert view from act_window object\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        const wysiwyg = $(this.$anchor[0].closest('.odoo-editor-editable')).data('wysiwyg');\n        const context = articleItemsKanbanActionContext(wysiwyg);\n        const restoreSelection = () => {\n            return setSelection(this.$anchor[0]);\n        }\n        wysiwyg._insertEmbeddedView(undefined, articleItemsKanbanAction, \"kanban\", articleItemsKanbanAction.name, restoreSelection, context);\n    },\n},\n...commonKanbanSteps(),\n...domHelpFieldSteps(),\n...endKnowledgeTour()\n]});\n\nfunction commonKanbanSteps () {\n    return [\n        { // scroll to the embedded view to load it\n            trigger: '.o_knowledge_behavior_type_embedded_view',\n            run: function () {\n                this.$anchor[0].scrollIntoView();\n            },\n        }, { // wait for the kanban view to be mounted\n            trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer',\n            run: () => {},\n        },\n    ];\n}\n\nfunction domHelpFieldSteps () {\n    return [\n        {\n            trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer',\n            run: () => {\n                const helpField = document.querySelector('.o_knowledge_content[data-prop-name=\"action_help\"]');\n                if (!helpField) {\n                    throw new Error('Help field was not rendered in the DOM');\n                }\n                // allow further modifications of the help field for testing\n                helpField.classList.remove('d-none');\n            },\n        }, { // modify the help message in the dom\n            trigger: '.o_knowledge_content[data-prop-name=\"action_help\"] > p',\n            run: function () {\n                this.$anchor[0].textContent = \"Test help message\";\n            }\n        }, { // create an article to switch to\n            trigger: '.o_section_header:contains(Workspace) .o_section_create',\n            run: 'click'\n        }, { // check that the article is correctly created\n            trigger: '.odoo-editor-editable > h1',\n            run: () => {},\n        }, { // switch back to the first article\n            trigger: '.o_knowledge_tree .o_article_name:contains(\"EditorCommandsArticle\")',\n            run: 'click',\n        }, { // scroll to load\n            trigger: '.o_knowledge_behavior_type_embedded_view',\n            run: function () {\n                this.$anchor[0].scrollIntoView();\n            }\n        }, { // wait for the kanban view to be mounted\n            trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer',\n            run: () => {}\n        }, { // open the view\n            trigger: '.o_control_panel_breadcrumbs_actions .dropdown-toggle',\n            run: 'click',\n        }, {\n            trigger: '.dropdown-item:contains(Open)'\n        }, { // verify that the help message is displayed\n            trigger: '.o_action_manager > .o_view_controller.o_kanban_view .o_nocontent_help:contains(\"Test help message\")',\n            run: () => {}\n        }, { // go back to the first view\n            trigger: '.breadcrumb a:contains(\"EditorCommandsArticle\")',\n            run: 'click',\n        }, { // scroll to the embedded view to load it\n            trigger: '.o_knowledge_behavior_type_embedded_view',\n            run: function () {\n                this.$anchor[0].scrollIntoView();\n            },\n        }, { // wait for the kanban view to be mounted\n            trigger: '.odoo-editor-editable',\n            extra_trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer',\n            run: function () {\n                const helpField = document.querySelector('.o_knowledge_content[data-prop-name=\"action_help\"]');\n                if (!helpField) {\n                    throw new Error('Help field was not rendered in the DOM');\n                }\n                // focus the body otherwise change will not be saved\n                this.$anchor[0].focus();\n                // remove the help field from the dom for testing\n                helpField.remove();\n            },\n        }, { // switch back to the first article\n            trigger: '.o_knowledge_tree .o_article_name:contains(\"Untitled\")',\n            run: 'click',\n        }, { // check that the article is loaded\n            trigger: '.odoo-editor-editable > h1',\n            run: () => {},\n        }, { // reswitch to the other article\n            trigger: '.o_knowledge_tree .o_article_name:contains(\"EditorCommandsArticle\")',\n            run: 'click',\n        }, { // scroll to the embedded view to load it\n            trigger: '.o_knowledge_behavior_type_embedded_view',\n            run: function () {\n                this.$anchor[0].scrollIntoView();\n            },\n        }, { // wait for the kanban view to be mounted\n            trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer',\n            run: () => {},\n        }, { // open the view\n            trigger: '.o_control_panel_breadcrumbs_actions .dropdown-toggle',\n            run: 'click',\n        }, {\n            trigger: '.dropdown-item:contains(Open)'\n        }, { // verify that the default help message is displayed\n            trigger: '.o_action_manager > .o_view_controller.o_kanban_view .o_nocontent_help:contains(\"No data to display\")',\n            run: () => {}\n        }, { // go back to the first view\n            trigger: '.breadcrumb a:contains(\"EditorCommandsArticle\")',\n            run: 'click',\n        }\n    ];\n}\n\nconst articleItemsKanbanAction = {\n    domain: \"[('parent_id', '=', active_id), ('is_article_item', '=', True)]\",\n    help: markup('<p class=\"o_nocontent_help\">No data to display</p>'),\n    name: \"Article Items\",\n    res_model: 'knowledge.article',\n    type: 'ir.actions.act_window',\n    views: [[false, 'kanban']],\n    view_mode: 'kanban',\n};\n\nfunction articleItemsKanbanActionContext (wysiwyg) {\n    return {\n        active_id: wysiwyg.options.recordInfo.res_id,\n        default_parent_id: wysiwyg.options.recordInfo.res_id,\n        default_is_article_item: true,\n    };\n}\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { decodeDataBehaviorProps } from \"@knowledge/js/knowledge_utils\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nconst testName = \"*()!'<>~\";\nlet behaviorProps;\n\nregistry.category(\"web_tour.tours\").add('knowledge_list_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), { // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /list command\n    trigger: '.oe-powerbox-commandName:contains(\"Item List\")',\n    run: 'click',\n}, { // input a test name for the view\n    trigger: '.modal-dialog #label',\n    run: `text ${testName}`,\n}, { // choose a name for the embedded view\n    trigger: '.modal-footer button.btn-primary',\n    run: 'click'\n}, { // scroll to the embedded view to load it\n    trigger: '.o_knowledge_behavior_type_embedded_view',\n    run: function () {\n        this.$anchor[0].scrollIntoView();\n    },\n}, { // wait for the list view to be mounted\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_list_renderer',\n    run: () => {},\n}, { // verify that the view has the correct name and store data-behavior-props\n    trigger: '.o_knowledge_embedded_view .o_control_panel .o_breadcrumb .active:contains(\"*()!\\'<>~\")',\n    run: () => {\n        const embeddedViewElement = document.querySelector('.o_knowledge_behavior_type_embedded_view');\n        behaviorProps = decodeDataBehaviorProps(embeddedViewElement.dataset.behaviorProps);\n    }\n}, { // click on rename button\n    trigger: '.o_control_panel_breadcrumbs_actions .dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.dropdown-item:contains(Edit)'\n}, { // click to validate the modal\n    trigger: '.modal-footer button.btn-primary',\n    run: 'click'\n}, { // check that the name is the correct one and compare previous data-behavior-props and the new one (should be equivalent)\n    trigger: '.o_knowledge_embedded_view .o_control_panel .o_breadcrumb .active:contains(\"*()!\\'<>~\")',\n    run: () => {\n        const embeddedViewElement = document.querySelector('.o_knowledge_behavior_type_embedded_view');\n        const newBehaviorProps = decodeDataBehaviorProps(embeddedViewElement.dataset.behaviorProps);\n        if (newBehaviorProps.display_name !== behaviorProps.display_name) {\n            throw new Error('The name displayed should not have changed');\n        }\n        if (JSON.stringify(newBehaviorProps) !== JSON.stringify(behaviorProps)) {\n            // check that knowledge.article render_embedded_view urllib.parse.quote did\n            // produce an equivalent data-behavior-props as knowledge_utils encodeDataBehaviorProps encodeURIComponent\n            throw new Error('data-behavior-props should be semantically the same as before');\n        }\n    }\n}, { // click on rename button\n    trigger: '.o_control_panel_breadcrumbs_actions .dropdown-toggle',\n    run: 'click',\n}, {\n    trigger: '.dropdown-item:contains(Edit)'\n}, { // rename the view\n    trigger: '.modal-body input',\n    run: 'text New Title',\n}, { // click to validate the modal\n    trigger: '.modal-footer button.btn-primary',\n    run: 'click',\n}, { // check that name has been updated\n    trigger: '.o_knowledge_embedded_view .o_control_panel .o_breadcrumb .active:contains(\"New Title\")',\n    run: () => {},\n}, {\n    // reload the article to make sure that the article is saved for readonly tour\n    trigger: 'a[data-menu-xmlid=\"knowledge.knowledge_menu_home\"]',\n}, { // wait for embed to be visible\n    trigger: '.o_knowledge_behavior_type_embedded_view',\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_outline_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /outline command\n    trigger: '.oe-powerbox-commandName:contains(\"Index\")',\n    run: 'click',\n}, { // wait for the block to appear in the editor\n    trigger: '.o_knowledge_behavior_type_articles_structure',\n}, { // click on the refresh button\n    trigger: '.o_knowledge_behavior_type_articles_structure button[title=\"Update\"]',\n    run: 'click',\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from \"../knowledge_tour_utils.js\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n/**\n * Verify that a filter is not duplicated and is properly maintained after\n * a round trip with the breadcrumbs.\n *\n * @param {String} kanban name of a kanban view in which records can be created\n * @param {String} filterName name of a favorite filter which is already present in the view\n * @returns {Array} steps\n */\nconst validateFavoriteFilterPersistence = function(kanban, filterName) {\n    return [{\n        content: 'create and edit item in the kanban view',\n        trigger: `.o_knowledge_embedded_view .o_kanban_view:contains(${kanban}) .o-kanban-button-new`,\n\t    run: \"click\",\n    }, {\n        content: 'Give the name to the item',\n        trigger: 'input#name_0',\n        run: 'text Item 1',\n    }, {\n        content: 'click on the edit button',\n        trigger: '.o_kanban_edit',\n    }, {\n        content: `go to the ${kanban} from the breadcrumb`,\n        trigger: '.o_back_button',\n    }, {\n        // Open the favorite of the first kanban and check it's favorite\n        trigger: `.o_breadcrumb:contains('${kanban}')`,\n        run: function () {\n            const view = this.$anchor[0].closest(\n                '.o_kanban_view'\n            );\n            const searchMenuButton = view.querySelector(\".o_searchview_dropdown_toggler\");\n            searchMenuButton.click();\n        },\n    }, {\n        trigger: '.o_favorite_menu',\n        run: function () {\n            const favorites = this.$anchor[0].querySelectorAll(\"span.dropdown-item\");\n            if (favorites.length !== 1 || favorites[0].innerText !== filterName) {\n                console.error(`Only one filter \"(${filterName})\" should be available`);\n            }\n        },\n    }]\n};\n\n/**\n * Insert the Knowledge kanban view as an embedded view in article.\n *\n * @param {String} article article name\n * @returns {Array} steps\n */\nconst embedKnowledgeKanbanViewSteps = function (article) {\n    return [{ // open the Knowledge App\n        trigger: \".o_app[data-menu-xmlid='knowledge.knowledge_menu_root']\",\n    }, { // click on the search menu\n        trigger: \"[role='menuitem']:contains(Search)\",\n    }, { // toggle on the kanban view\n        trigger: \".o_switch_view.o_kanban\",\n    }, { // wait for the kanban view\n        trigger: \".o_kanban_renderer\",\n        run: () => {},\n    }, { // open action menu dropdown\n        trigger: \".o_control_panel .o_cp_action_menus button\",\n    }, { // click on the knowledge menu button\n        trigger: \".o_control_panel .o_cp_action_menus .dropdown-toggle:contains(Knowledge)\",\n        run: function () {\n            this.$anchor[0].dispatchEvent(new Event(\"mouseenter\"));\n        },\n    }, { // click on insert view in article\n        trigger: \".o_cp_action_menus span:contains('Insert view in article')\",\n    }, { // embed in article\n        trigger: `.modal-dialog td.o_field_cell:contains(${article})`,\n    }];\n};\n\n/**\n * Test favorite filters and use by default filters in embedded views in\n * Knowledge. Need an article with 2 named kanban embeds to work.\n *\n * @param {String} kanban1 name of the first kanban\n * @param {String} kanban2 name of the second kanban\n * @returns {Array} steps\n */\nconst validateFavoriteFiltersSteps = function (kanban1, kanban2) {\n    return [{\n        content: 'Open the search panel menu',\n        trigger: `.o_knowledge_embedded_view .o_control_panel:contains(${kanban1}) .o_searchview_dropdown_toggler`,\n    }, {\n        trigger: \".o_favorite_menu .o_add_favorite\",\n    }, {\n        trigger: \".o_favorite_menu:contains(Favorites) input[type='text']\",\n        run: \"text testFilter\",\n    }, {\n        // use by default\n        trigger: \".o_favorite_menu .o-checkbox:contains(Default filter) input\",\n    }, {\n        trigger: \".o_favorite_menu .o_save_favorite\",\n    },\n    stepUtils.toggleHomeMenu(),\n    {\n        // open the Knowledge App\n        trigger: \".o_app[data-menu-xmlid='knowledge.knowledge_menu_root']\",\n    }, {\n        // check that the search item has been added\n        trigger: \".o_facet_value\",\n        run: function () {\n            const items = [...document.querySelectorAll(\".o_searchview_facet\")];\n            const testFacets = items.filter((el) => {\n                return (\n                    el.querySelector(\".o_searchview_facet_label .fa-star\") &&\n                    el.querySelector(\".o_facet_values\")?.innerText === \"testFilter\"\n                );\n            });\n            if (testFacets.length !== 1) {\n                console.error(\"The 'testFilter' facet should be applied only on the first view\");\n            }\n        },\n    }, {\n        // Open the favorite of the second kanban and check it has no favorite\n        // (favorite are defined per view)\n        trigger: `.o_breadcrumb:contains('${kanban2}')`,\n        run: function () {\n            const view = this.$anchor[0].closest(\n                '.o_kanban_view'\n            );\n            const searchMenuButton = view.querySelector(\".o_searchview_dropdown_toggler\");\n            searchMenuButton.click();\n        },\n    }, {\n        trigger: \".o_favorite_menu\",\n        run: function () {\n            const items = document.querySelectorAll(\".o_favorite_menu .dropdown-item\");\n            if (items.length !== 1 || items[0].innerText !== \"Save current search\") {\n                console.error(\"The favorite should not be available for the second view\");\n            }\n        },\n    }];\n};\n\nregistry.category(\"web_tour.tours\").add(\"knowledge_items_search_favorites_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            // open the Knowledge App\n            trigger: \".o_app[data-menu-xmlid='knowledge.knowledge_menu_root']\",\n        },\n        {\n            trigger: \".o_field_html\",\n            run: function () {\n                const header = document.querySelector(\".o_breadcrumb_article_name input\");\n                if (header.value !== \"Article 1\") {\n                    console.error(`Wrong article: ${header.value}`);\n                }\n            },\n        },\n        // Create the first Kanban\n        {\n            trigger: \".odoo-editor-editable > h1\",\n            run: function () {\n                openCommandBar(this.$anchor[0]);\n            },\n        },\n        {\n            trigger: \".oe-powerbox-commandName:contains('Item Kanban')\",\n        },\n        {\n            trigger: \".modal-body input.form-control\",\n            run: \"text Items 1\",\n        },\n        {\n            trigger: \"button:contains('Insert')\",\n        },\n        // wait for kanban 1 to be inserted\n        {\n            trigger: \".o_knowledge_embedded_view .o_control_panel:contains(Items 1)\",\n            run: () => {},\n        },\n        // Create the second Kanban\n        {\n            trigger: \".odoo-editor-editable > h1\",\n            run: function () {\n                openCommandBar(this.$anchor[0]);\n            },\n        },\n        {\n            trigger: \".oe-powerbox-commandName:contains('Item Kanban')\",\n        },\n        {\n            trigger: \".modal-body input.form-control\",\n            run: \"text Items 2\",\n        },\n        {\n            trigger: \"button:contains('Insert')\",\n        },\n        // wait for kanban 2 to be inserted\n        {\n            trigger: \".o_knowledge_embedded_view .o_control_panel:contains(Items 2)\",\n            run: () => {},\n        },\n        ...validateFavoriteFiltersSteps(\"Items 1\", \"Items 2\"),\n        // testFilter was added as a favorite during validateFavoriteFiltersSteps to Items 1\n        ...validateFavoriteFilterPersistence(\"Items 1\", \"testFilter\"),\n        ...endKnowledgeTour(),\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"knowledge_search_favorites_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(),\n        // insert a first kanban view\n        ...embedKnowledgeKanbanViewSteps(\"Article 1\"),\n        { // wait for embedded view to load and click on rename button\n            trigger: '.o_knowledge_behavior_type_embedded_view:has(.o_knowledge_embedded_view .o_control_panel:contains(Articles)) .o_control_panel_breadcrumbs_actions .dropdown-toggle',\n            allowInvisible: true,\n        }, {\n            trigger: '.dropdown-item:contains(Edit)'\n        }, { // rename the view Kanban 1\n            trigger: '.modal-dialog input.form-control',\n            run: `text Kanban 1`,\n        }, { // click on rename\n            trigger: \"button:contains('Rename')\",\n        }, { // check the application of the rename\n            trigger: '.o_knowledge_embedded_view .o_control_panel:contains(Kanban 1)',\n            run: () => {},\n        },\n        stepUtils.toggleHomeMenu(),\n        // insert a second kanban view\n        ...embedKnowledgeKanbanViewSteps(\"Article 1\"),\n        { // wait for embedded view to load\n            trigger: '.o_knowledge_embedded_view .o_control_panel:contains(Articles)',\n            run: () => {},\n        },\n        ...validateFavoriteFiltersSteps(\"Kanban 1\", \"Articles\"),\n        ...endKnowledgeTour(),\n    ],\n});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_table_of_content_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /toc command\n    trigger: '.oe-powerbox-commandName:contains(\"Table Of Content\")',\n    run: 'click',\n}, { // wait for the block to appear in the editor\n    trigger: '.o_knowledge_behavior_type_toc',\n}, { // insert a few titles in the editor\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        const $anchor = $(this.$anchor[0]);\n        $anchor.append([\n            $('<h1>Title 1</h1>'),\n            $('<h2>Title 1.1</h2>'),\n            $('<h3>Title 1.1.1</h3>'),\n            $('<h2>Title 1.2</h2>'),\n        ]);\n    },\n}, { // click on the h1 anchor link generated by the toc\n    trigger: '.o_knowledge_toc_link_depth_0',\n    run: 'click',\n}, { // open the tools panel\n    trigger: '#dropdown_tools_panel',\n    run: 'click',\n}, { // switch to locked (readonly) mode\n    trigger: '.o_knowledge_more_options_panel .btn-lock',\n    run: 'click',\n}, { // check that we are in readonly mode\n    trigger: '.o_field_html .o_readonly',\n    run: () => {},\n}, { // check that the content of the toc is not duplicated\n    trigger: '.o_knowledge_behavior_type_toc',\n    run: function () {\n        if (this.$anchor[0].querySelectorAll('.o_knowledge_toc_content').length !== 1) {\n            throw new Error('The table of content group of links should be present exactly once (not duplicated)');\n        }\n    },\n}, { // click on the h1 anchor link generated by the toc\n    trigger: '.o_knowledge_toc_link_depth_0',\n    run: 'click',\n}, { // open the tools panel\n    trigger: '#dropdown_tools_panel',\n    run: 'click',\n}, { // unlock the article\n    trigger: '.o_knowledge_more_options_panel.show .btn-lock',\n    run: 'click',\n}, { // check that we are in edit mode\n    trigger: '.o_field_html .odoo-editor-editable',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { endKnowledgeTour, openCommandBar } from '../knowledge_tour_utils.js';\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_template_command_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // go to the custom article\n    trigger: '.o_article .o_article_name:contains(\"EditorCommandsArticle\")',\n}, { // wait for article to be correctly loaded\n    trigger: '.o_breadcrumb_article_name_container:contains(\"EditorCommandsArticle\")',\n    run: () => {},\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /kanban command\n    trigger: '.oe-powerbox-commandName:contains(\"Item Kanban\")',\n    run: 'click',\n}, { // insert a kanban view (which contains breadcrumbs, this is used as a\n     // check to verify that a clipboard macro will not consider those\n     // breadcrumbs to advance).\n    trigger: '.btn-primary:contains(Insert)',\n    run: 'click',\n}, { // wait for the block to appear in the editor\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_last_breadcrumb_item:contains(Article Items)',\n    run: () => {},\n}, { // open the command bar\n    trigger: '.odoo-editor-editable > p',\n    run: function () {\n        openCommandBar(this.$anchor[0]);\n    },\n}, { // click on the /clipboard command\n    trigger: '.oe-powerbox-commandName:contains(\"Clipboard\")',\n    run: 'click',\n}, { // wait for the block to appear in the editor\n    trigger: '.o_knowledge_behavior_type_template',\n    run: () => {},\n}, { // enter text into the mail template\n    trigger: '.o_knowledge_content > p',\n    run: 'text Hello world'\n}, { // verify that the text was correctly inserted\n    trigger: '.o_knowledge_content > p:contains(Hello world)',\n    run: () => {},\n}, { // open the chatter\n    trigger: '.btn-chatter',\n    run: 'click',\n}, {\n    trigger: '.o-mail-Thread',\n    run: () => {},\n}, { // open the follower list of the article\n    trigger: '.o-mail-Followers-button',\n    run: 'click',\n}, { // open the contact record of the follower\n    trigger: '.o-mail-Follower-details:contains(HelloWorldPartner)',\n    run: 'click',\n}, { // verify that the partner form view is fully loaded\n    trigger: '.o_breadcrumb .o_last_breadcrumb_item.active:contains(HelloWorldPartner)',\n    run: () => {},\n}, { // return to the knowledge article by going back from the breadcrumbs\n    trigger: '.o_breadcrumb a:contains(EditorCommandsArticle)',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_behavior_type_template button:first:contains(Copy)',\n    run: () => {},\n}, { // open the chatter again\n    trigger: '.btn-chatter',\n    run: 'click',\n}, {\n    trigger: '.o-mail-Thread',\n    run: () => {},\n}, { // open the follower list of the article\n    trigger: '.o-mail-Followers-button',\n    run: 'click',\n}, { // open the contact record of the follower\n    trigger: '.o-mail-Follower-details:contains(HelloWorldPartner)',\n    run: 'click',\n}, { // verify that the partner form view is fully loaded\n    trigger: '.o_breadcrumb .o_last_breadcrumb_item.active:contains(HelloWorldPartner)',\n    run: () => {},\n}, { // search an article to open it from the contact record\n    trigger: 'button[title=\"Search Knowledge Articles\"]',\n    run: 'click',\n}, { // open the article\n    trigger: '.o_command_default:contains(EditorCommandsArticle)',\n    run: 'click',\n}, { // wait for article to be correctly loaded\n    trigger: '.o_breadcrumb_article_name_container:contains(\"EditorCommandsArticle\")',\n    run: () => {},\n}, { // use the template as description for the contact record\n    trigger: '.o_knowledge_behavior_type_template button:contains(Use as)',\n    run: 'click',\n}, { // check that the content of the template was inserted as description\n    trigger: '.o_form_sheet .o_field_html .odoo-editor-editable p:first-child:contains(\"Hello world\")',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { Component, xml } from \"@odoo/owl\";\nimport { endKnowledgeTour, openCommandBar } from \"../knowledge_tour_utils.js\";\nimport { patch } from \"@web/core/utils/patch\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { VideoBehavior } from \"@knowledge/components/behaviors/video_behavior/video_behavior\";\nimport { VideoSelector } from \"@web_editor/components/media_dialog/video_selector\";\n\nconst YoutubeVideoId = \"Rk1MYMPDx3s\";\nlet unpatchVideoBehavior;\nlet unpatchVideoSelector;\n\nclass MockedVideoIframe extends Component {\n    static template = xml`\n        <div class=\"o_video_iframe_src\" t-out=\"props.src\" />\n    `;\n};\n\nregistry.category(\"web_tour.tours\").add(\"knowledge_video_command_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(), { // open the Knowledge App\n            trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n        }, { // patch the components\n            trigger: \"body\",\n            run: () => {\n                unpatchVideoBehavior = patch(VideoBehavior.components, {\n                    ...VideoBehavior.components,\n                    VideoIframe: MockedVideoIframe\n                });\n                unpatchVideoSelector = patch(VideoSelector.components, {\n                    ...VideoSelector.components,\n                    VideoIframe: MockedVideoIframe\n                });\n            },\n        }, { // open the command bar\n            trigger: \".odoo-editor-editable > p\",\n            run: function () {\n                openCommandBar(this.$anchor[0]);\n            },\n        }, { // click on the /video command\n            trigger: '.oe-powerbox-commandName:contains(\"Video\")',\n            run: \"click\",\n        }, {\n            content: \"Enter a video URL\",\n            trigger: \".modal-body #o_video_text\",\n            run: `text https://www.youtube.com/watch?v=${YoutubeVideoId}`,\n        }, {\n            content: \"Wait for preview to appear\",\n            trigger: `.o_video_iframe_src:contains(\"//www.youtube.com/embed/${YoutubeVideoId}?rel=0&autoplay=0\")`,\n            run: () => {},\n        }, {\n            content: \"Confirm selection\",\n            trigger: '.modal-footer button:contains(\"Insert Video\")',\n        }, { // wait for the block to appear in the editor\n            trigger: \".o_knowledge_behavior_type_video\",\n            extra_trigger: `.o_knowledge_behavior_type_video .o_video_iframe_src:contains(\"https://www.youtube.com/embed/${YoutubeVideoId}?rel=0&autoplay=0\")`\n        }, { // unpatch the components\n            trigger: \"body\",\n            run: () => {\n                unpatchVideoBehavior();\n                unpatchVideoSelector();\n            },\n        },...endKnowledgeTour()\n    ]\n});\n", "/** @odoo-module */\n\nimport {\n    answerThreadSteps,\n    createNewCommentSteps,\n    endKnowledgeTour,\n    resolveCommentSteps\n} from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category('web_tour.tours').add('knowledge_article_thread_main_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(), {\n        // Open Knowledge App\n            trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n        }, {\n            trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Sepultura\")'\n        },\n        ...createNewCommentSteps(),\n        { // Opens the edition of the comment box\n            trigger: '.o_knowledge_comment_box, .o_knowledge_comment_box img',\n            run: 'click'\n        }, {\n            trigger: '.o-mail-Composer-input, .o_knowledge_comments_popover',\n            run: () => {}\n        },\n        ...answerThreadSteps('Brand New Comment'),\n        ...endKnowledgeTour()\n    ]\n});\n\nregistry.category('web_tour.tours').add('knowledge_article_thread_answer_comment_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(), {\n        // Open Knowledge App\n            trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n        },\n        {\n            trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Sepultura\")'\n        },\n        ...answerThreadSteps(),\n        ...endKnowledgeTour()\n    ]\n});\n\nregistry.category('web_tour.tours').add('knowledge_article_thread_resolve_comment_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(), {\n        // Open Knowledge App\n            trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n        }, {\n            trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Sepultura\")'\n        }, { // Opens the edition of the comment box\n            trigger: '.o_knowledge_comment_box, .o_knowledge_comment_box img',\n            run: 'click'\n        }, {\n            trigger: '.o-mail-Composer-input, .o_knowledge_comments_popover',\n            run: () => {}\n        },\n        ...resolveCommentSteps(), { // Checks that the box is indeed removed from the DOM\n            trigger: '.o_widget_knowledge_comments_handler div:not( .o_knowledge_comment_box)',\n            run: () => {}\n        },\n        ...endKnowledgeTour()\n    ]\n});\n\nregistry.category('web_tour.tours').add('knowledge_article_thread_panel_tour', {\n    test: true,\n    url:'/web',\n    steps: () => [\n        stepUtils.showAppsMenuItem(), { // Open Knowledge App\n            trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n        }, {\n            trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Sepultura\")'\n        }, { //Opens the panel\n            trigger: '.btn-comments'\n        }, { //Checks panel is loaded\n            trigger: '.o_knowledge_comments_panel',\n            run: () => {}\n        }, {\n            trigger: '.o_knowledge_comments_panel .o_knowledge_comment_box'\n        },\n        ...answerThreadSteps(),\n        ...resolveCommentSteps(),\n        { // Open resolved mode\n            trigger: '.o_knowledge_comments_panel select',\n            run: 'text resolved'\n        }, {\n            trigger: '.o_knowledge_comment_resolved',\n        }, // You can answer on resolved threads\n        ...answerThreadSteps('This should be resolved here'),\n        ...endKnowledgeTour()\n    ]\n});\n", "/** @odoo-module */\n\nimport { endKnowledgeTour } from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction moveCover(position) {\n    const cover = document.querySelector('.o_knowledge_cover img');\n    cover.dispatchEvent(new PointerEvent('pointerdown'));\n    document.dispatchEvent(new PointerEvent('pointermove', {clientY: position}));\n    document.dispatchEvent(new PointerEvent('pointerup'));\n}\n\n/**\n * Tests the cover picker feature when unsplash credentials are unset. In this\n * case, the \"Add Cover\" button should always open the cover selector.\n */\nregistry.category(\"web_tour.tours\").add('knowledge_cover_selector_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // Open Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, {\n    // Click on the \"Create\" button\n    trigger: '.o_knowledge_header .btn-create',\n}, {\n    // Set the name of the article\n    trigger: '.o_breadcrumb_article_name > input',\n    extra_trigger: '.o_article_active:contains(\"Untitled\")',\n    run: 'text Birds',\n}, {\n    // Make the add cover button visible (only visible on hover)\n    trigger: '.o_article_active:contains(\"Birds\")',\n    run() {},\n}, {\n    // Click on add cover button\n    trigger: '.o_knowledge_add_cover',\n    allowInvisible: true,\n}, {\n    // Check that the cover selector has been opened and that it shows\n    // the form allowing to enter unsplash credentials, and click on the\n    // add url button\n    trigger: '.o_upload_media_url_button',\n    extra_trigger: '.modal-body .unsplash_error',\n    run: () => {},\n}, {\n    // Change the search query to find odoo_logo file\n    trigger: '.modal-body input.o_we_search',\n    extra_trigger: '.modal-body .o_nocontent_help',\n    run: 'text odoo_logo',\n}, {\n    // Choose the odoo_logo cover\n    trigger: '.o_existing_attachment_cell img[title*=\"odoo_logo\"]',\n    run: 'click',\n}, {\n    // Check cover has been added to the article and is initially centered and\n    // make the reposition cover button visible\n    trigger: '.o_knowledge_cover img[style=\"object-position: 50% 50%;\"]',\n    run() {},\n}, {\n    // Click on the reposition cover button\n    trigger: '.o_knowledge_reposition_cover',\n    allowInvisible: true,\n}, {\n    // Move the cover down and click on the \"Cancel\" button\n    trigger: '.o_reposition_hint',\n    run: () => {\n        moveCover(1000);\n        const undoButton = document.querySelector('.o_knowledge_undo_cover_move');\n        // Timeout to make sure the event is fired after that the cover has moved\n        setTimeout(() => undoButton.dispatchEvent(new PointerEvent('pointerdown', {bubbles: true})), 0);\n    },\n}, {\n    // Check that the undo button works as expected (cover should be centered)\n    trigger: '.o_knowledge_cover img[style=\"object-position: 50% 50%;\"]',\n    extra_trigger: '.o_knowledge_cover:not(:has(.o_reposition_hint))',\n    run() {},\n}, {\n    // Move cover again but use the \"save\" button this time\n    trigger: '.o_knowledge_reposition_cover',\n    allowInvisible: true,\n}, {\n    trigger: '.o_reposition_hint',\n    run: () => {\n        moveCover(1000);\n        const saveButton = document.querySelector('.o_knowledge_save_cover_move');\n        // Timeout to make sure the event is fired after that the cover has moved\n        setTimeout(() => saveButton.dispatchEvent(new PointerEvent('pointerdown', {bubbles: true})), 0);\n    }\n}, {\n    // Check that the cover is positioned at the top\n    trigger: '.o_knowledge_cover img[style=\"object-position: 50% 0.01%;\"]',\n    extra_trigger: '.o_knowledge_cover:not(:has(.o_reposition_hint))',\n}, {\n    // Create another article\n    trigger: '.o_knowledge_header .btn-create',\n}, {\n    // Change the name of the article\n    trigger: '.o_breadcrumb_article_name > input',\n    extra_trigger: '.o_article_active:contains(\"Untitled\")',\n    run: 'text odoo',\n}, {\n    // Go back to previous article\n    trigger: '.o_knowledge_sidebar .o_article_name:contains(\"Birds\")',\n    extra_trigger: '.o_article_active:contains(\"odoo\")',\n}, {\n    // Check that the cover is still positioned at the top and make the replace\n    // cover visible\n    trigger: '.o_knowledge_cover img[style=\"object-position: 50% 0.01%;\"]',\n    extra_trigger: '.o_article_active:contains(\"Birds\")',\n    run() {},\n}, {\n    // Click on replace cover button\n    trigger: '.o_knowledge_replace_cover',\n    allowInvisible: true,\n}, {\n    // Check that the cover selector has been opened, that no image is shown\n    // since the search query (birds) do not match the name of the existing\n    // cover, and close the cover selector\n    trigger: '.modal-footer .btn-secondary',\n    extra_trigger: '.modal-body .o_nocontent_help',\n}, {\n    // Make the remove cover button visible\n    trigger: '.o_knowledge_edit_cover_buttons',\n    run() {},\n}, {\n    // Click on remove cover button\n    trigger: '.o_knowledge_remove_cover',\n    allowInvisible: true,\n}, {\n    // Check cover has been removed from the article and open other article\n    trigger: '.o_knowledge_sidebar .o_article_name:contains(\"odoo\")',\n    extra_trigger: '.o_knowledge_body:not(:has(.o_widget_knowledge_cover))',\n}, {\n    // Make the add cover button visible\n    trigger: '.o_article_active:contains(\"odoo\")',\n    run() {},\n}, {\n    // Click on add cover button\n    trigger: '.o_knowledge_add_cover',\n    allowInvisible: true,\n}, {\n    // Check that odoo logo previously uploaded is shown in the selector as the\n    // search query, which is the article name, is \"odoo\" which is also in the\n    // cover attachment's name, and that clicking on it sets it as cover of the\n    // current article\n    trigger: '.modal-body .o_existing_attachment_cell img[title=\"odoo_logo.png\"]',\n}, {\n    // Check cover has been set, and open previous article again\n    trigger: '.o_knowledge_sidebar .o_article_name:contains(\"Birds\")',\n    extra_trigger: '.o_knowledge_cover',\n}, {\n    // Make the add cover button visible\n    trigger: '.o_knowledge_edit_cover_buttons',\n    run() {},\n}, {\n    // Click on add cover button\n    trigger: '.o_knowledge_add_cover',\n    allowInvisible: true,\n}, {\n    // Check odoo logo is not shown as the search query does not match its name\n    // and remove search query\n    trigger: '.modal-body input.o_we_search',\n    extra_trigger: '.modal-body .o_nocontent_help',\n    run: 'remove_text',\n}, {\n    // Check that odoo logo is now shown in the cover selector, and make the trash\n    // button visible\n    trigger: '.modal-body .o_existing_attachment_cell img[title=\"odoo_logo.png\"]',\n    run() {},\n}, {\n    // Click on delete cover button\n    trigger: '.modal-body .o_existing_attachment_cell:has(img[title=\"odoo_logo.png\"]) .o_existing_attachment_remove',\n    allowInvisible: true,\n}, {\n    // Confirm deletion of cover (should ask for confirmation)\n    trigger: '.modal-footer .btn-primary',\n    extra_trigger: '.modal-title:contains(\"Confirmation\")'\n}, {\n    // Check that no cover is shown anymore in the cover selector, and close it\n    trigger: '.modal-footer .btn-secondary',\n    extra_trigger: '.modal-body .o_we_existing_attachments:not(:has(.o_existing_attachment_cell))',\n}, {\n    // Open other article to check that its cover has been removed since it has\n    // been deleted\n    trigger: '.o_knowledge_sidebar .o_article_name:contains(\"odoo\")',\n}, {\n    trigger: '.o_knowledge_body:not(:has(.o_widget_knowledge_cover))',\n    extra_trigger: '.o_article_active:contains(\"odoo\")',\n    allowInvisible: true,\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { endKnowledgeTour, makeVisible } from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n/**\n * Tests the cover picker feature when unsplash credentials are set. In this\n * case, the \"Add Cover\" button should either add a random picture from a \n * selected unsplash collection if no name is set on the article, either\n * add a random image using the article name as query word.\n */\nregistry.category(\"web_tour.tours\").add('knowledge_random_cover_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // Open Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, {\n    // Click on the \"Create\" action\n    trigger: '.o_knowledge_header .btn-create',\n}, {\n    // Make the add cover button visible (only visible on hover)\n    trigger: '.o_article_active:contains(\"Untitled\")',\n    run: () => makeVisible('.o_knowledge_add_cover'),\n}, {\n    // Click on add cover button\n    trigger: '.o_knowledge_add_cover',\n}, {\n    // Check that a cover has been added, and make the change cover button visible\n    trigger: '.o_knowledge_cover .o_knowledge_cover_image',\n    run: () => makeVisible('.o_knowledge_replace_cover'),\n}, {\n    // Click on change cover button\n    trigger: '.o_knowledge_replace_cover',\n}, {\n    // Check that the cover selector has been opened, that no unsplash images can be\n    // loaded as the article has no name and close the cover selector\n    trigger: '.modal-footer .btn-secondary',\n    extra_trigger: '.modal-body .o_load_done_msg',\n}, {\n    // Make the remove cover button visible\n    trigger: '.o_knowledge_edit_cover_buttons',\n    run: () => makeVisible('.o_knowledge_remove_cover'),\n}, {\n    // Remove the cover of the article\n    trigger: '.o_knowledge_remove_cover',\n}, {\n    // Set the name of the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Birds',\n}, {\n    // Make the add cover button visible\n    trigger: '.o_article_active:contains(\"Birds\")',\n    run: () => makeVisible('.o_knowledge_add_cover'),\n}, {\n    // Click on add cover button\n    trigger: '.o_knowledge_add_cover',\n}, {\n    // Check that a cover has been added and make the change cover button visible\n    trigger: '.o_knowledge_cover .o_knowledge_cover_image',\n    run: () => makeVisible('.o_knowledge_replace_cover'),\n}, {\n    // Click on change cover button\n    trigger: '.o_knowledge_replace_cover',\n}, {\n    // Check that the cover selector has been opened, that other unsplash\n    // images can be loaded and close the cover selector\n    trigger: '.modal-footer .btn-secondary',\n    extra_trigger: '.modal-body .o_load_more',\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { endKnowledgeTour, openCommandBar } from './knowledge_tour_utils';\n\nregistry.category(\"web_tour.tours\").add('knowledge_embedded_view_filters_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n        // open Knowledge App\n        trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n    }, { // open the command bar\n        trigger: '.odoo-editor-editable > p',\n        run: function () {\n            openCommandBar(this.$anchor[0]);\n        },\n    }, { // add embedded list view of article items\n        trigger: '.oe-powerbox-commandName:contains(\"Item List\")'\n    }, {\n        trigger: '.btn-primary'\n    }, { // Check that we have 2 elements in the embedded view\n        trigger: 'tbody tr.o_data_row:nth-child(2)',\n        run: () => {}\n    }, { // add a simple filter\n        trigger: '.o_searchview_input_container input',\n        run: 'text 1'\n    }, {\n        trigger: 'li#1'\n    }, { // Check that the filter is effective\n        trigger: 'tbody:not(tr.o_data_row:nth-child(2))',\n        run: () => {}\n    }, { // Open the filtered article\n        trigger: 'tbody > tr > td[name=\"display_name\"]'\n    }, { // Wait for the article to be open\n        trigger: '.o_breadcrumb_article_name_container > span:contains(\"Child 1\")',\n        run: () => {}\n    }, { // Open parent via the sidebar\n        trigger: '.o_article_name:contains(\"EditorCommandsArticle\")'\n    }, { // Check that there is no filter in the searchBar\n        trigger: '.o_searchview_input_container:not( > div)',\n        run: () => {}\n    }, { // Check that we have 2 elements in the embedded view\n        trigger: 'tbody tr.o_data_row:nth-child(2)',\n        run: () => {}\n    }, { // Go back via the breadcrumb\n        trigger: '.o_back_button'\n    }, { // Check that there is the filter in the searchBar\n        trigger: '.o_searchview_input_container > div',\n        run: () => {}\n    }, { // Check that the filter is effective\n        trigger: 'tbody:not(tr.o_data_row:nth-child(2))',\n        run: () => {}\n    }, ...endKnowledgeTour()]\n});\n", "/** @odoo-module */\n\n/**\n * Knowledge history tour.\n * Features tested:\n * - Create / edit an article an ensure revisions are created on write\n * - Open the history dialog and check that the revisions are correctly shown\n * - Select a revision and check that the content / comparison are correct\n * - Click the restore button and check that the content is correctly restored\n */\n\nimport { endKnowledgeTour } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nconst testArticleName = 'Test history Article';\nfunction changeArticleContentAndSave(newContent) {\n    return [ {\n        // change the content of the article\n        trigger: '.note-editable.odoo-editor-editable h1',\n        run: 'text ' + newContent,  // modify the article content\n    }, {\n        // reload knowledge articles to make sure that the article is saved\n        trigger: 'a[data-menu-xmlid=\"knowledge.knowledge_menu_home\"]',\n    }, {\n        // wait for the page to reload and OWL to accept value change\n        trigger: '.o_article:contains(\"' + testArticleName + '\"):not(.o_article_active)',\n        run: async () => {\n            await new Promise((r) => setTimeout(r, 300));\n        },\n    }, {\n        // click on the test article\n        trigger: '.o_article:contains(\"' + testArticleName + '\") a.o_article_name',\n    }, {\n        // wait for the article to be loaded\n        trigger: '.o_article_active:contains(\"' + testArticleName + '\") ',\n        run: () => {},\n    }];\n}\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_history_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n        // open Knowledge App\n        trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n    }, {\n        // click on the main \"New\" action\n        trigger: '.o_knowledge_header .btn:contains(\"New\")',\n    }, {\n        // check that the article is correctly created (private section)\n        trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"Untitled\")',\n        run: () => {},\n    },\n        ...changeArticleContentAndSave(testArticleName),\n        ...changeArticleContentAndSave('Modified Title 01'),\n        ...changeArticleContentAndSave('Modified Title 02'),\n        ...changeArticleContentAndSave('Modified Title 03'),\n    {\n        // Open history dialog\n        trigger: '.btn.btn-history',\n    }, {\n        // check the history dialog is opened\n        trigger: '.modal-header:contains(\"History\")',\n    }, {\n        // check that we have the correct number of revision (4)\n        trigger: \".html-history-dialog .revision-list .btn\",\n        run: function () {\n            const items = document.querySelectorAll(\".revision-list .btn\");\n            if (items.length !== 4) {\n                throw new Error('Expect 4 Revisions in the history dialog, got ' + items.length);\n            }\n        },\n    }, {\n        // check the first revision content is correct\n        trigger: '#history-content-tab:contains(\"Modified Title 02\")',\n    }, {\n        // click on the 3rd revision\n        trigger: '.html-history-dialog .revision-list .btn:nth-child(3)',\n    }, {\n        // check the 3rd revision content is correct\n        trigger: '#history-content-tab:contains(\"' + testArticleName + '\")',\n    }, {\n        // click on the comparison tab\n        trigger: '#history-comparison',\n    }, {\n        // check the comparison content is correct\n        trigger: '#history-comparison-tab',\n        run: function () {\n            const comparaisonHtml = document.querySelector('#history-comparison-tab').innerHTML;\n            const correctHtml = '<h1><added>' + testArticleName + '</added><removed>Modified Title 03</removed></h1>';\n            if (comparaisonHtml !== correctHtml) {\n                throw new Error('Expect comparison to be ' + correctHtml + ', got ' + comparaisonHtml);\n            }\n        }\n    }, {\n        // click on the restore button\n        trigger: '.modal-footer .btn-primary:contains(\"Restore\")',\n    } , {\n        // ensure the article content is restored\n        trigger: '.note-editable.odoo-editor-editable h1:contains(\"' + testArticleName + '\")',\n    },\n    ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\n/**\n * Global Knowledge flow tour.\n * Features tested:\n * - Create an article\n * - Change its title / content\n * - Share an article with a created partner\n * - Create 2 children articles and invert their order\n * - Favorite 2 different articles and invert their order in the favorite section\n */\n\nimport { dragAndDropArticle, endKnowledgeTour, makeVisible } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('knowledge_main_flow_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, {\n    // click on the main \"New\" action\n    trigger: '.o_knowledge_header .btn:contains(\"New\")',\n}, {\n    // check that the article is correctly created (private section)\n    trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    trigger: '.note-editable.odoo-editor-editable h1',\n    run: 'text My Private Article',  // modify the article content\n}, {\n    trigger: 'section[data-section=\"workspace\"]',\n    run: () => {\n        // force the create button to be visible (it's only visible on hover)\n        makeVisible('section[data-section=\"workspace\"] .o_section_create');\n    },\n}, {\n    // create an article in the \"Workspace\" section\n    trigger: 'section[data-section=\"workspace\"] .o_section_create',\n}, {\n    // check that the article is correctly created (workspace section), and that the previous\n    // article has been renamed using its title (first h1 in body).\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Untitled\")',\n    extra_trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"My Private Article\")',\n    run: () => {},\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text My Workspace Article',  // modify the article name\n}, {\n    trigger: '.note-editable.odoo-editor-editable',\n    run: 'text Content of My Workspace Article',  // modify the article content\n}, {\n    trigger: '.o_article:contains(\"My Workspace Article\")',\n    run: () => {\n        // force the create button to be visible (it's only visible on hover)\n        $('.o_article:contains(\"My Workspace Article\") a.o_article_create').css('display', 'block');\n    },\n}, {\n    // create child article\n    trigger: '.o_article:contains(\"My Workspace Article\") a.o_article_create',\n}, {\n    // check that the article is correctly created (workspace section)\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Child Article 1',  // modify the article name\n}, {\n    trigger: '.o_article:contains(\"My Workspace Article\")',\n}, {\n    // create child article (2)\n    trigger: '.o_article:contains(\"My Workspace Article\") a.o_article_create',\n}, {\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Child Article 2',  // modify the article name\n}, {\n    // move child article 2 above child article 1\n    trigger: '.o_article_handle:contains(\"Child Article 2\")',\n    run: () => {\n        dragAndDropArticle(\n            $('.o_article_handle:contains(\"Child Article 2\")'),\n            $('.o_article_handle:contains(\"Child Article 1\")'),\n        );\n    },\n}, {\n    // verify that the move was done\n    trigger: '.o_article:has(.o_article_name:contains(\"My Workspace Article\")) ul > :eq(0):contains(\"Child Article 2\")',\n    run: () => {},\n}, {\n    // go back to main workspace article\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"My Workspace Article\")',\n}, {\n    trigger: '.o_knowledge_editor:contains(\"Content of My Workspace Article\")',\n    run: () => {},  // wait for article to be correctly loaded\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    // open the share dropdown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n}, {\n    // click on 'Invite'\n    trigger: '.o_knowledge_share_panel .btn:contains(\"Invite\")',\n}, {\n    // Type the invited person's name\n    trigger: '.o_field_many2many_tags_email[name=partner_ids] input',\n    run: 'text micheline@knowledge.com',\n}, {\n    // Open the simplified create form view\n    trigger: '.o-autocomplete--dropdown-menu .o_m2o_dropdown_option_create_edit a',\n    run: 'click',\n}, {\n    // Give an email address to the partner\n    trigger: '.o_field_widget[name=email] input',\n    run: 'text micheline@knowledge.com',\n}, {\n    // Save the new partner\n    trigger: '.o_form_button_save',\n}, {\n    // Submit the invite wizard\n    trigger: 'button:contains(\"Invite\")',\n    extra_trigger: '.o_field_tags span.o_badge_text',\n}, {\n    // add to favorite\n    trigger: '.o_knowledge_toggle_favorite',\n}, {\n    // check article was correctly added into favorites\n    trigger: 'section[data-section=\"favorites\"] .o_article .o_article_name:contains(\"My Workspace Article\")',\n    run: () => {},\n}, {\n    // open the share dropdown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n}, {\n    // open the share dropdown\n    trigger: '.o_member_email:contains(\"micheline@knowledge.com\")',\n    in_modal: false,\n    run: () => {},\n}, {\n    // go back to private article\n    trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"My Private Article\")',\n}, {\n    trigger: '.o_knowledge_editor:contains(\"My Private Article\")',\n    run: () => {},  // wait for article to be correctly loaded\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    // add to favorite\n    trigger: '.o_knowledge_toggle_favorite',\n}, {\n    // wait for the article to be registered as favorited\n    trigger: '.o_knowledge_toggle_favorite .fa-star',\n    run: () => {},\n}, {\n    // move private article above workspace article in the favorite section\n    trigger: 'section[data-section=\"favorites\"] .o_article_handle:contains(\"My Private Article\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"favorites\"] .o_article_handle:contains(\"My Private Article\")'),\n            $('section[data-section=\"favorites\"] .o_article_handle:contains(\"My Workspace Article\")'),\n        );\n    },\n}, {\n    // verify that the move was done\n    trigger: 'section[data-section=\"favorites\"] ul > :eq(0):contains(\"My Private Article\")',\n    run: () => {},\n}, {\n    // go back to main workspace article\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"My Workspace Article\")',\n}, {\n    trigger: ':contains(\"Content of My Workspace Article\")',\n    run() {},\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    // click on the main \"New\" action\n    trigger: '.o_knowledge_header .btn:contains(\"New\")',\n}, {\n    trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {}, // check that the article is correctly created (private section)\n}, {\n    // check the autofocus\n    trigger: '.note-editable.odoo-editor-editable:focus',\n    run: () => {},\n}, {\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Article to be moved',  // modify the article name\n}, {// move article\n    trigger: 'a#dropdown_tools_panel',\n    run: 'click'\n}, {\n    trigger: '.btn-move',\n    run: 'click',\n}, {\n    trigger: '.o_select_menu_item:contains(\"Article 3\")',\n    run: 'click',\n}, {\n    trigger: '.o_select_menu_toggler_slot:contains(\"Article 3\")',\n    run: () => {},\n}, {\n    trigger: '.modal-content .btn-primary:contains(\"Move Article\")',\n    run: 'click',\n}, {\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Article to be moved\")',\n    run: 'click'\n}, {\n    // open the trash\n    trigger: '.o_knowledge_sidebar_trash div[role=\"button\"]',\n}, {\n    // verify that the trash list has been opened correctly and that items are correctly ordered\n    trigger: '.o_data_row:first .o_data_cell[name=\"display_name\"]:contains(\"Article 2\")',\n    extra_trigger: '.o_breadcrumb .active:contains(\"Trash\")',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\n/**\n * Global Knowledge flow tour - Adapter for portal user\n * Features tested:\n * - Create a private article\n * - Change its title / content\n * - Write on a \"workspace\" article to which we have access\n * - Create children articles to a \"workspace\" article to which we have access\n * - Favorite 2 different articles and invert their order in the favorite section\n */\n\nimport { dragAndDropArticle } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { registry } from \"@web/core/registry\";\n\n\nregistry.category(\"web_tour.tours\").add('knowledge_main_flow_tour_portal', {\n    test: true,\n    url: '/knowledge/home',\n    steps: () => [{\n    // click on the main \"New\" action\n    trigger: '.o_knowledge_header .btn:contains(\"New\")',\n}, {\n    trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},  // check that the article is correctly created (private section)\n}, {\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text My Private Article',  // modify the article name\n}, {\n    trigger: '.note-editable.odoo-editor-editable',\n    run: 'text Content of My Private Article',  // modify the article content\n}, {\n    trigger: 'body',\n    run: () => {\n        // Make sure the internal article is not visible\n        if (document.querySelectorAll(\n            'section[data-section=\"workspace\"] .o_article .o_article_name'\n        ).length !== 1) {\n            throw new Error(\"Internal Workspace Article is not supposed to be visible for portal user.\");\n        }\n    }\n}, {\n    trigger: '#knowledge_search_bar' // make sure the search article feature works\n}, {\n    trigger: '.o_select_menu_item:contains(\"Workspace Article\")',\n    in_modal: false,\n}, {\n    trigger: 'button:contains(\"Open\")'\n}, {\n    trigger: '.o_knowledge_editor:contains(\"Content of Workspace Article\")',\n    run: () => {},  // wait for article to be correctly loaded\n}, {\n    trigger: '.note-editable.odoo-editor-editable',\n    run: 'text Edited Content of Workspace Article',  // modify the article content\n}, {\n    trigger: '.o_article:contains(\"Workspace Article\")',\n    run: () => {\n        // force the create button to be visible (it's only visible on hover)\n        $('.o_article:contains(\"Workspace Article\") a.o_article_create').css('display', 'block');\n    },\n}, {\n    // create child article\n    trigger: '.o_article:contains(\"Workspace Article\") a.o_article_create',\n}, {\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},  // check that the article is correctly created (workspace section)\n}, {\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Child Article 1',  // modify the article name\n}, {\n    // create child article (2)\n    trigger: '.o_article:contains(\"Workspace Article\") a.o_article_create',\n}, {\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},  // check that the article is correctly created (workspace section)\n}, {\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Child Article 2',  // modify the article name\n}, {\n    // go back to main workspace article\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Workspace Article\")',\n}, {\n    trigger: '.o_knowledge_editor:contains(\"Edited Content of Workspace Article\")',\n    run: () => {},  // wait for article to be correctly loaded\n}, {\n    // add to favorite\n    trigger: '.o_knowledge_toggle_favorite',\n}, {\n    // check article was correctly added into favorites\n    trigger: 'div.o_favorite_container .o_article .o_article_name:contains(\"Workspace Article\")',\n    run: () => {},\n}, {\n    // go back to private article\n    trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"My Private Article\")',\n}, {\n    trigger: '.o_knowledge_editor:contains(\"My Private Article\")',\n    run: () => {},  // wait for article to be correctly loaded\n}, {\n    // add to favorite\n    trigger: '.o_knowledge_toggle_favorite',\n}, {\n    // wait for the article to be registered as favorited\n    trigger: '.o_knowledge_toggle_favorite .fa-star',\n    run: () => {},\n}, {\n    // move private article above workspace article in the favorite section\n    trigger: 'div.o_favorite_container .o_article_handle:contains(\"My Private Article\")',\n    run: () => {\n        dragAndDropArticle(\n            $('div.o_favorite_container .o_article_handle:contains(\"My Private Article\")'),\n            $('div.o_favorite_container .o_article_handle:contains(\"Workspace Article\")'),\n        );\n    },\n}, {\n    // verify that the move was done\n    trigger: 'div.o_favorite_container ul > :eq(0):contains(\"My Private Article\")',\n    isCheck: true,\n}]});\n", "/** @odoo-module */\n\nimport { endKnowledgeTour } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('knowledge_pick_emoji_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, {\n    // click on the main \"New\" action\n    trigger: '.o_knowledge_header .btn:contains(\"New\")',\n}, {\n    trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {}, // check that the article is correctly created (private section)\n}, {\n    trigger: '.o_knowledge_add_buttons',\n    run: () => {\n        // force the cover buttons to be visible (it's only visible on hover)\n        $('.o_knowledge_add_icon, .o_knowledge_add_cover').css({\n            opacity: 1,\n            visibility: 'visible'\n        });\n    },\n}, {\n    // add a random emoji\n    trigger: '.o_knowledge_add_icon',\n    run: 'click',\n}, {\n    trigger: '.o_knowledge_body .o_article_emoji',\n    run: 'click',\n}, {\n    trigger: '.o-Emoji[data-codepoints=\"\ud83d\ude03\"]',\n    run: 'click',\n}, {\n    // check that the emoji has been properly changed in the article body\n    trigger: '.o_knowledge_body .o_article_emoji:contains(\ud83d\ude03)',\n    run: () => {},\n}, {\n    // check that the emoji has been properly changed in the header\n    trigger: '.o_knowledge_header .o_article_emoji:contains(\ud83d\ude03)',\n    run: () => {},\n}, {\n    // check that the emoji has been properly changed in the aside block\n    trigger: '.o_knowledge_sidebar .o_article_emoji:contains(\ud83d\ude03)',\n    run: () => {}\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { dragAndDropArticle, endKnowledgeTour } from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('knowledge_properties_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // open Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // ensure display of ParentArticle child articles\n    trigger: '.o_article_handle:contains(\"ParentArticle\") .o_article_caret',\n    run: function (actions) {\n        const button = this.$anchor[0];\n        if (button.querySelector('i.fa-caret-right')) {\n            actions.click(this.$anchor);\n        }\n    }\n}, { // go to ChildArticle\n    trigger: '.o_article .o_article_name:contains(\"ChildArticle\")',\n    run: 'click',\n}, { // wait ChildArticle loading\n    trigger: '.breadcrumb .active:contains(\"ChildArticle\")',\n    run: () => {},\n}, { // click on add properties\n    trigger: 'button.o_knowledge_add_properties',\n    run: 'click',\n}, {\n    trigger: '.o_field_property_add button',\n    run: 'click'\n}, { // modify property name\n    trigger: '.o_field_property_definition_header',\n    run: 'text_blur myproperty',\n}, { // verify property and finish property edition\n    trigger: '.o_knowledge_editor .odoo-editor-editable',\n    extra_trigger: '.o_field_property_label:contains(\"myproperty\")',\n    run: 'click',\n}, { // go to InheritPropertiesArticle\n    trigger: '.o_article .o_article_name:contains(\"InheritPropertiesArticle\")',\n    run: 'click',\n}, { // wait InheritPropertiesArticle loading and move InheritPropertiesArticle under ParentArticle\n    trigger: '.breadcrumb .active:contains(\"InheritPropertiesArticle\")',\n    run: () => {\n        dragAndDropArticle(\n            $('.o_article_handle:contains(\"InheritPropertiesArticle\")'),\n            $('.o_article_handle:contains(\"ChildArticle\")'),\n        );\n    },\n}, { // verify property\n    trigger: '.o_knowledge_properties .o_field_property_label:contains(\"myproperty\")',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { dragAndDropArticle, endKnowledgeTour } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { registry } from \"@web/core/registry\";\n\n// Checks that one can add an readonly article to its favorites\n\nregistry.category(\"web_tour.tours\").add('knowledge_readonly_favorite_tour', {\n    test: true,\n    steps: () => [{\n    // Make sure we are on the readonly article 1, that is not favorited, and\n    // click on the toggle favorite button.\n    trigger: 'a.o_knowledge_toggle_favorite:has(.fa-star-o)',\n    extra_trigger: '.o_article_active:contains(\"Readonly Article 1\")',\n}, {\n    // Check that the article has been added to the favorites\n    trigger: 'section[data-section=\"favorites\"]:contains(\"Readonly Article 1\")',\n    extra_trigger: 'a.o_knowledge_toggle_favorite:has(.fa-star)',\n    run: () => {},\n}, {\n    // Open the other readonly article\n    trigger: '.o_knowledge_sidebar .o_article_name:contains(\"Readonly Article 2\")',\n}, {\n    // Make sure we are on the readonly article 1, that is not favorited, and\n    // click on the toggle favorite button.\n    trigger: 'a.o_knowledge_toggle_favorite:has(.fa-star-o)',\n    extra_trigger: '.o_article_active:contains(\"Readonly Article 2\")',\n}, {\n    // Check that the article has been added to the favorites under the other\n    // one and try to resquence the favorite articles\n    trigger: 'section[data-section=\"favorites\"] li:last:contains(\"Readonly Article 2\")',\n    run: () => dragAndDropArticle(\n        $('section[data-section=\"favorites\"] li:last .o_article_handle'),\n        $('section[data-section=\"favorites\"] li:first .o_article_handle')\n    ),\n}, {\n    // Check that articles have been reordered correctly\n    trigger: 'section[data-section=\"favorites\"] li:last:contains(\"Readonly Article 1\")',\n    extra_trigger: 'section[data-section=\"favorites\"] li:first:contains(\"Readonly Article 2\")',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { endKnowledgeTour } from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n/**\n * This tour checks that a user that has readonly access on an article cannot\n * create items from the item kanban.\n */\nregistry.category(\"web_tour.tours\").add('knowledge_readonly_item_kanban_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), { // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // scroll to the embedded view to load it\n    trigger: '.o_knowledge_behavior_type_embedded_view',\n    run: function () {\n        this.$anchor[0].scrollIntoView();\n    },\n}, { // wait for the kanban view to be mounted\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_kanban_renderer',\n    run: () => {},\n}, { // check that the \"new\" button is not shown\n    trigger: '.o_control_panel_main:not(:has(.o-kanban-button-new))',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { endKnowledgeTour } from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n/**\n * This tour checks that a user that has readonly access on an article cannot\n * create items from the item list.\n */\nregistry.category(\"web_tour.tours\").add('knowledge_readonly_item_list_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [stepUtils.showAppsMenuItem(), { // open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, { // scroll to the embedded view to load it\n    trigger: '.o_knowledge_behavior_type_embedded_view',\n    run: function () {\n        this.$anchor[0].scrollIntoView();\n    },\n}, { // wait for the list view to be mounted\n    trigger: '.o_knowledge_behavior_type_embedded_view .o_list_renderer',\n    run: () => {},\n}, { // check that the \"new\" button is not shown\n    trigger: '.o_control_panel_main:not(:has(.o_list_button_add))',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { dragAndDropArticle } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { endKnowledgeTour } from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\n\n// Checks that one can resequence children under a readonly parent\n\nregistry.category(\"web_tour.tours\").add('knowledge_resequence_children_of_readonly_parent_tour', {\n    test: true,\n    steps: () => [\n{ // check presence of parent article and unfold it\n    trigger: '.o_article_active:contains(Readonly Parent) > a.o_article_caret',\n    run: 'click',\n}, { // check existence and order of children, and reorder children\n    trigger: '.o_article_active:contains(Readonly Parent)',\n    extra_trigger: '.o_article_has_children:has(li:nth-child(1):contains(Child 1)):has(li:nth-child(2):contains(Child 2))',\n    run: function () {\n        const children = this.$anchor[0].parentElement.querySelectorAll(\".o_article_name\");\n        // move 2nd child above the first.\n        dragAndDropArticle($(children[2]), $(children[1]));\n    },\n}, { // check that the children were correctly reordered, and try to make a root from one children\n    trigger: '.o_article_active:contains(Readonly Parent)',\n    extra_trigger: '.o_article_has_children:has(li:nth-child(1):contains(Child 2)):has(li:nth-child(2):contains(Child 1))',\n    run: function () {\n        const child1 = this.$anchor[0].parentElement.querySelectorAll(\".o_article_name\")[2]\n        // move 1st child above parent.\n        dragAndDropArticle($(child1), this.$anchor);\n    },\n}, { // check that the 1st child move was effective\n    trigger: '.o_section:contains(Workspace):has(li:nth-child(1):contains(Child 1)):has(li:nth-child(2):contains(Readonly Parent))',\n    run: () => {},\n}, ...endKnowledgeTour()\n]});\n", "/** @odoo-module */\n\nimport { dragAndDropArticle } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('knowledge_sidebar_readonly_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // Open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n}, {\n    // Unfold the private article and check that articles are in the correct\n    // order to make the move possible\n    trigger: '.o_article.readonly .o_article_caret',\n    extra_trigger: '.o_knowledge_tree .o_article:contains(\"Workspace Article\") + .o_article:contains(\"Private Article\")',\n}, {\n    // Check that article has been unfolded and move an article under a redonly article (fails)\n    trigger: '.o_article:contains(\"Private Child\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"workspace\"] .o_article_name:contains(\"Workspace Article\")'),\n            $('section[data-section=\"workspace\"] .o_article_name:contains(\"Private Article\")'),\n        );\n    },\n}, {\n    // Close the move cancelled modal\n    trigger: '.modal-footer .btn-primary',\n    extra_trigger: '.modal-title:contains(\"Move cancelled\")',\n}, {\n    // Move a readonly article (fails)\n    trigger: '.o_knowledge_tree .o_article:contains(\"Workspace Article\") + .o_article:contains(\"Private Article\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"workspace\"] .o_article_name:contains(\"Private Article\")'),\n            $('section[data-section=\"workspace\"] .o_article_name:contains(\"Workspace Article\")'),\n        );\n    },\n}, {\n    // Check that article did not move and try to change icon of readable article (fails)\n    trigger: '.o_article:contains(\"Private Article\") .o_article_emoji:contains(\"\ud83d\udcc4\")',\n    extra_trigger: '.o_knowledge_tree .o_article:contains(\"Workspace Article\") + .o_article:contains(\"Private Article\")',\n}, {\n    // Check that emoji picker did not show up\n    trigger: 'body:not(:has(.o-EmojiPicker))',\n    run: () => {},\n}]});\n", "/** @odoo-module */\n\nimport { changeInternalPermission, dragAndDropArticle, makeVisible } from '@knowledge/../tests/tours/knowledge_tour_utils';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\n/**\n * Sidebar tour.\n * Tests sidebar features and responsiveness.\n * Todo: add responsiveness checks from usage of moveArticleDialog\n * when select2 will be replaced (can currently not select options)\n */\n\nregistry.category(\"web_tour.tours\").add('knowledge_sidebar_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    // Open the Knowledge App\n    trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n},\n// Create a workspace article\n{\n    // Force the create button to be visible (it's only visible on hover)\n    trigger: 'section[data-section=\"workspace\"]',\n    run: () => {\n        makeVisible('section[data-section=\"workspace\"] .o_section_create');\n    },\n}, {\n    // Create an article in the \"Workspace\" section\n    trigger: 'section[data-section=\"workspace\"] .o_section_create',\n}, {\n    // Check that the article is created inside the Workspace\n    trigger: 'section[data-section=\"workspace\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Workspace Article',\n}, {\n    // Check that the name has been updated in the sidebar\n    trigger: '.o_article_active:contains(\"Workspace Article\")',\n    run: () => {},\n}, {\n    // Add content to the article\n    trigger: '.note-editable.odoo-editor-editable',\n    run: 'text Content of Workspace Article',\n},\n// Create a private article\n{\n    // Force the create button to be visible (it's only visible on hover)\n    trigger: 'section[data-section=\"private\"]',\n    run: () => {\n        makeVisible('section[data-section=\"private\"] .o_section_create');\n    },\n}, {\n    // Create an article in the \"Private\" section\n    trigger: 'section[data-section=\"private\"] .o_section_create',\n}, {\n    // Check that the article is created inside the private section\n    trigger: 'section[data-section=\"private\"] .o_article .o_article_name:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Private Article',\n},\n// Create a shared article\n{\n    // Check that the shared section does not exists\n    trigger: '.o_knowledge_tree:not(:has(section[data-section=\"shared\"]))',\n    extra_trigger: '.o_article_active:contains(\"Private Article\")',\n    run: () => {},\n}, {\n    // First create a private one\n    trigger: 'section[data-section=\"private\"] .o_section_create',\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    extra_trigger: '.o_article_active:contains(\"Untitled\")',\n    run: 'text Shared Article',\n}, {\n    // Open the share dropdown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n}, {\n    // Click on 'Invite'\n    trigger: '.o_knowledge_share_panel .btn:contains(\"Invite\")',\n}, {\n    // Type the invited person's name\n    trigger: '.o_field_many2many_tags_email[name=partner_ids] input',\n    run: 'text henri@knowledge.com',\n}, {\n    // Open the simplified create form view\n    trigger: '.o-autocomplete--dropdown-menu .o_m2o_dropdown_option_create_edit a',\n    run: 'click',\n}, {\n    // Give an email address to the partner\n    trigger: '.o_field_widget[name=email] input',\n    run: 'text henri@knowledge.com',\n}, {\n    // Save the new partner\n    trigger: '.o_form_button_save',\n}, {\n    // Submit the invite wizard\n    trigger: 'button:contains(\"Invite\")',\n    extra_trigger: '.o_field_tags span.o_badge_text',\n}, {\n    // Check that the article has been added to a new \"Shared\" section\n    trigger: 'section[data-section=\"shared\"]:contains(\"Shared Article\")',\n    run: () => {},\n},\n// Create a child of a workspace article\n{\n    // Force the create button to be visible (it's only visible on hover)\n    trigger: '.o_article:contains(\"Workspace Article\")',\n    run: () => {\n        $('.o_article:contains(\"Workspace Article\") a.o_article_create').css('display', 'block');\n    },\n}, {\n    // Create a child\n    trigger: '.o_article:contains(\"Workspace Article\") a.o_article_create',\n}, {\n    // Check that the child has been added\n    trigger: '.o_article:contains(\"Workspace Article\") .o_article:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Workspace Child',\n},\n// Create a child of a private article\n{\n    // Force the create button to be visible (it's only visible on hover)\n    trigger: '.o_article:contains(\"Private Article\")',\n    run: () => {\n        $('.o_article:contains(\"Private Article\") a.o_article_create').css('display', 'block');\n    },\n}, {\n    // Create a child\n    trigger: '.o_article:contains(\"Private Article\") a.o_article_create',\n}, {\n    // Check that the child has been added\n    trigger: '.o_article:contains(\"Private Article\") .o_article:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Private Child 1',\n},\n// Create a child of a shared article\n{\n    // Force the create button to be visible (it's only visible on hover)\n    trigger: '.o_article:contains(\"Shared Article\")',\n    run: () => {\n        $('.o_article:contains(\"Shared Article\") a.o_article_create').css('display', 'block');\n    },\n}, {\n    // Create a child\n    trigger: '.o_article:contains(\"Shared Article\") a.o_article_create',\n}, {\n    // Check that the child has been added\n    trigger: '.o_article:contains(\"Shared Article\") .o_article:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Shared Child',\n},\n// Open an article by clicking on it\n{\n    // Click in the sidebar\n    trigger: '.o_article_name:contains(\"Workspace Article\")',\n}, {\n    // Check that article is correctly opened\n    trigger: '.note-editable.odoo-editor-editable:contains(\"Content of Workspace Article\")',\n    extra_trigger: '.o_article_active:contains(\"Workspace Article\")',\n    run: () => {},\n},\n// Open an article using the searchBox\n{\n    // Open the CP\n    trigger: '#knowledge_search_bar',\n}, {\n    // Click on an article\n    trigger: '.o_command_name:not(.small):contains(\"Private Article\")',\n}, {\n    // Check article was opened\n    trigger: '.o_article_active .o_article_name:contains(\"Private Article\")',\n    run: () => {},\n}, \n// Open the trash\n{\n    trigger: '.o_knowledge_sidebar_trash > div[role=\"button\"]',\n}, {\n    // Check that trash has been opened\n    trigger: '.o_last_breadcrumb_item.active:contains(\"Trash\")',\n    run: () => {},\n}, {\n    // Come back to the form view\n    trigger: '.breadcrumb-item.o_back_button',\n},\n// Add/remove an article to/from the favorites\n{\n    // Make sure the favorite section does not exists\n    trigger: '.o_knowledge_tree:not(:has(section[data-section=\"favorites\"]))',\n    run: () => {},\n}, {\n    // Click on the toggleFavorite button\n    trigger: 'a.o_knowledge_toggle_favorite',\n}, {\n    // Check that the article has been added to the added favorite section\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\")',\n    run: () => {},\n}, {\n    // Click on the toggleFavorite button again\n    trigger: 'a.o_knowledge_toggle_favorite',\n}, {\n    // Check that the favorite section has been removed\n    trigger: '.o_knowledge_tree:not(:has(section[data-section=\"favorites\"]))',\n    extra_trigger: 'a.o_knowledge_toggle_favorite .fa-star-o',\n},\n// Unfold/Fold favorite article\n{\n    // Add article to favorite\n    trigger: 'a.o_knowledge_toggle_favorite',\n}, {\n    // Check that favorite is initially folded, and unfold it\n    trigger: 'section[data-section=\"favorites\"] .o_article_caret .fa-caret-right',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article:not(:has(.o_article))',\n}, {\n    // Check that caret changed and that child is displayed\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\") .o_article_name:contains(\"Private Child 1\")',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article_caret .fa-caret-down',\n    run: () => {},\n}, {\n    // Click on the caret again to refold the article\n    trigger: 'section[data-section=\"favorites\"] .o_article_caret',\n}, {\n    // Check that caret changed and that child is hidden again\n    trigger: 'section[data-section=\"favorites\"] .o_article:not(:has(.o_article))',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article_caret .fa-caret-right',\n    run: () => {},\n}, {\n    // Check that article in main tree is still unfolded\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Private Child 1\")',\n    run: () => {},\n},\n\n// Create a child from the favorite tree\n{\n    // Force the create button to be visible (it's only visible on hover)\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\")',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article_caret .fa-caret-right',\n    run: () => {\n        $('section[data-section=\"favorites\"] .o_article:contains(\"Private Article\") a.o_article_create').css('display', 'block');\n    },\n}, {\n    // Create a child\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\") a.o_article_create',\n}, {\n    // Check that article has been unfolded\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\") .fa-caret-down',\n    run: () => {},\n}, {\n    // Check that previously existing child is displayed\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\") .o_article_name:contains(\"Private Child 1\")',\n    run: () => {},\n}, {\n    // Check that the child has been added in the favorite tree\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\") .o_article_name:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Check that the child has been added in the private section\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Private Article\") .o_article_name:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Private Child 2',\n}, {\n    // Check that the article has been renamed in the favorite tree\n    trigger: 'section[data-section=\"favorites\"] .o_article_name:contains(\"Private Child 2\")',\n    run: () => {},\n}, {\n    // Check that the article has been renamed in the private section\n    trigger: 'section[data-section=\"private\"] .o_article_name:contains(\"Private Child 2\")',\n    run: () => {},\n},\n// Fold/unfold an article\n{\n    // Click on the caret (should be caret down)\n    trigger: 'section[data-section=\"private\"] .o_article_caret',\n    extra_trigger: 'section[data-section=\"private\"] .o_article_caret .fa-caret-down',\n}, {\n    // Check that caret changed, and that children are hidden, and that favorite has not been folded\n    trigger: 'section[data-section=\"private\"] .o_article:not(:has(.o_article))',\n    extra_trigger: 'section[data-section=\"private\"] .o_article_caret .fa-caret-right',\n    run: () => {},\n}, {\n    // Check that favorite has not been folded\n    trigger: 'section[data-section=\"favorites\"] .o_article .o_article',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article_handle:contains(\"Private Article\") .fa-caret-down',\n}, {\n    // Fold favorite article (to later check that unfolding article won't unfold favorite)\n    trigger: 'section[data-section=\"favorites\"] .o_article_caret',\n}, {\n    // Click on the caret again\n    trigger: 'section[data-section=\"private\"] .o_article_caret',\n}, {\n    // Check that articles are shown again\n    trigger: 'section[data-section=\"private\"] .o_article .o_article',\n    extra_trigger: 'section[data-section=\"private\"] .o_article_caret .fa-caret-down',\n    run: () => {},\n}, {\n    // Check that favorite has not been unfolded\n    trigger: 'section[data-section=\"favorites\"] .o_article:not(:has(.o_article))',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article_handle:contains(\"Private Article\") .fa-caret-right',\n    run: () => {},\n},\n// Create a child of a folded article\n{\n    // Fold article again\n    trigger: 'section[data-section=\"private\"] .o_article_caret',\n}, {\n    trigger: 'section[data-section=\"private\"] .o_article_caret .fa-caret-right',\n    run: () => {\n        $('section[data-section=\"private\"] .o_article:contains(\"Private Article\") .o_article_create').css('display', 'block');\n    }\n}, {\n    // Click on the create button\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Private Article\") .o_article_create',\n}, {\n    // Check that article has been unfolded and that previously existing children are shown\n    trigger: 'section[data-section=\"private\"] .o_article .o_article:contains(\"Private Child 1\")',\n    extra_trigger: 'section[data-section=\"private\"] .o_article_caret .fa-caret-down',\n    run: () => {},\n}, {\n    // Check that article has been added in both trees\n    trigger: 'section[data-section=\"private\"] .o_article .o_article:contains(\"Untitled\")',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article .o_article:contains(\"Untitled\")',\n    run: () => {},\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    run: 'text Private Child 3',\n},\n// Add a random icon\n{\n    // Force the add icon button to be visible (it's only visible on hover)\n    trigger: '.o_knowledge_add_buttons',\n    run: () => {\n        makeVisible('.o_knowledge_add_icon');\n    },\n}, {\n    // Click on the \"add Icon\" button\n    trigger: '.o_knowledge_add_icon',\n}, {\n    // Check that the icon has been updated in the sidenar\n    trigger: '.o_knowledge_body div[name=\"icon\"]',\n    run: () => {\n        const bodyIcon = document.querySelector('.o_knowledge_body div[name=\"icon\"]').innerText;\n        const sidebarIcon = document.querySelector('.o_article_active .o_article_emoji').innerText;\n        if (bodyIcon !== sidebarIcon) {\n            console.error(\"Sidebar icon has not been updated.\");\n        }\n    },\n},\n// Update icon of active article from sidebar\n{\n    // Click on the icon in the sidebar\n    trigger: '.o_article_active .o_article_emoji',\n}, {\n    // Choose an icon\n    trigger: '.o-Emoji[data-codepoints=\"\ud83e\udd76\"]',\n}, {\n    // Check that the icon has been updated in both trees in the sidebar\n    trigger: 'section[data-section=\"favorites\"] .o_article_active .o_article_emoji:contains(\"\ud83e\udd76\")',\n    extra_trigger: 'section[data-section=\"private\"] .o_article_active .o_article_emoji:contains(\"\ud83e\udd76\")',\n    run: () => {},\n}, {\n    // Check that the icon in the body has been updated\n    trigger: '.o_knowledge_body div[name=\"icon\"]:contains(\"\ud83e\udd76\")',\n    run: () => {},\n},\n// Update icon of non active article\n{\n    // Click on the icon in the sidebar\n    trigger: '.o_article:contains(\"Workspace Article\") .o_article_emoji',\n}, {\n    // Choose an icon\n    trigger: '.o-Emoji[data-codepoints=\"\ud83e\udd75\"]',\n}, {\n    // Check that the icon has been updated in the sidebar\n    trigger: '.o_article:contains(\"Workspace Article\") .o_article_emoji:contains(\"\ud83e\udd75\")',\n    run: () => {},\n}, {\n    // Check that the icon in the body has not been updated\n    trigger: '.o_knowledge_body div[name=\"icon\"]:contains(\"\ud83e\udd76\")',\n    run: () => {},\n},\n// Update icon of locked article (fails)\n{\n    // Open another article\n    trigger: '.o_article_name:contains(\"Workspace Child\")',\n}, {\n    // Lock the article\n    trigger: '#dropdown_tools_panel',\n    extra_trigger: '.o_article_active:contains(\"Workspace Child\")',\n}, {\n    trigger: '.o_knowledge_more_options_panel .btn-lock',\n}, {\n    // Click on the icon of the active article in the sidebar\n    trigger: '.o_article_active .o_article_emoji:contains(\"\ud83d\udcc4\")',\n    extra_trigger: '.breadcrumb-item.active .fa-lock',\n}, {\n    // Check that emoji picker did not show up\n    trigger: 'body:not(:has(.o-EmojiPicker))',\n    run: () => {},\n},\n// Update icon of unlocked article\n{\n    // Unlock the article\n    trigger: '#dropdown_tools_panel',\n}, {\n    trigger: '.o_knowledge_more_options_panel .btn-lock .fa-unlock',\n}, {\n    // Click on the icon of the active article in the sidebar\n    trigger: '.o_article_active a.o_article_emoji',\n    extra_trigger: '.breadcrumb-item.active:not(:has(.fa-lock))',\n}, {\n    // Choose an icon\n    trigger: '.o-Emoji[data-codepoints=\"\ud83d\ude2c\"]',\n}, {\n    // Check that the icon has been updated in the sidebar\n    trigger: '.o_article:contains(\"Workspace Child\") .o_article_emoji:contains(\"\ud83d\ude2c\")',\n    run: () => {},\n},\n// Convert article into item\n{\n    // Open the kebab menu\n    trigger: '#dropdown_tools_panel',\n}, {\n    // Click on convert button\n    trigger: '.dropdown-item .fa-tasks',\n}, {\n    // Check that article has been removed from the sidebar\n    trigger: 'section[data-section=\"workspace\"] .o_article:not(:has(.o_article))',\n    extra_trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Workspace Article\"):not(.o_article_has_children)',\n    run: () => {},\n},\n// Favorite an item\n{\n    // Click on the toggle favorite button\n    trigger: '.o_knowledge_toggle_favorite',\n}, {\n    // Check that item has been added in the favorite section\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Workspace Child\")',\n    run: () => {},\n},\n// Convert item into article\n{\n    // Open the kebab menu\n    trigger: '#dropdown_tools_panel',\n}, {\n    // Click on convert button\n    trigger: '.dropdown-item .fa-sitemap',\n}, {\n    // Check that article has been readded in the main tree\n    trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Workspace Child\")',\n    run: () => {},\n},\n// Convert a favorite article to an item\n{\n    // Open the kebab menu\n    trigger: '#dropdown_tools_panel',\n}, {\n    // Click on the convert button\n    trigger: '.dropdown-item .fa-tasks',\n}, {\n    // Check that article has been removed from the main tree but not from the favorite tree\n    trigger: 'section[data-section=\"workspace\"] .o_article:not(:has(.o_article))',\n    extra_trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Workspace Article\"):not(.o_article_has_children)',\n    run: () => {},\n}, {\n    // Check that article has not been removed from the favorite tree\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Workspace Child\")',\n    run: () => {},\n},\n// Remove member of child of shared article\n{\n    // Open the shared child article\n    trigger: '.o_article_name:contains(\"Shared Child\")',\n}, {\n    // Open the share dropdown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n    extra_trigger: '.o_article_active:contains(\"Shared Child\")',\n}, {\n    // Make remove member button visible\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => {\n        document.querySelector('.o_knowledge_share_panel .o_delete.o_remove').style.display = 'block';\n    },\n}, {\n    // Click on the delete member button\n    trigger: '.o_knowledge_share_panel .o_delete.o_remove',\n}, {\n    // Confirm restriction\n    trigger: '.modal-footer .btn-primary',\n}, {\n    // Check that the article did not move\n    trigger: 'section[data-section=\"shared\"] .o_article .o_article',\n    extra_trigger: '.o_knowledge_share_panel_icon',\n},\n// Publish child of a shared article\n{\n    // Open the share dropdown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n}, {\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    extra_trigger: '.o_permission[aria-label=\"Internal Permission\"]',\n    run: () => changeInternalPermission('write'),\n}, {\n    // Check that the article did not move\n    trigger: 'section[data-section=\"shared\"] .o_article .o_article',\n    run: () => {},\n},\n// Publish shared article\n{\n    // Open shared article\n    trigger: '.o_article_name:contains(\"Shared Article\")',\n}, {\n    // Open the share dropdown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n    extra_trigger: '.o_article_active:contains(\"Shared Article\")',\n}, {\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => changeInternalPermission('write'),\n}, {\n    // Check that the article moved to the workspace\n    trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Shared Article\")',\n    run: () => {},\n}, \n// Restrict workspace article with member\n{\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => changeInternalPermission('none'),\n}, {\n    // Check that article moved to shared\n    trigger: 'section[data-section=\"shared\"] .o_article:contains(\"Shared Article\")',\n    run: () => {},\n},\n// Remove member of shared article\n{\n    // Make remove member button visible\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => {\n        document.querySelector('.o_knowledge_share_panel .o_delete.o_remove').style.display = 'block';\n    },\n}, {\n    // Remove member\n    trigger: '.o_knowledge_share_panel .o_delete.o_remove',\n}, {\n    // Check that article moved to private\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Shared Article\")',\n}, {\n    // Readd the member to replace the article in the shared section\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n}, {\n    trigger: '.o_knowledge_share_panel .btn:contains(\"Invite\")',\n}, {\n    trigger: '.o_field_many2many_tags_email[name=partner_ids] input',\n    run: 'text henri@knowledge.com',\n}, {\n    trigger: '.o-autocomplete--dropdown-item:contains(\"henri@\")',\n    extra_trigger: '.o-autocomplete--dropdown-menu.show',\n}, {\n    trigger: 'button:contains(\"Invite\")',\n    extra_trigger: '.o_field_tags span.o_badge_text',\n},\n// Publish child of private article\n{\n    // Open private child\n    trigger: '.o_article_name:contains(\"Private Child 2\")',\n}, {\n    // Open the share dropown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n    extra_trigger: '.o_article_active:contains(\"Private Child 2\")',\n}, {\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => changeInternalPermission('read'),\n}, {\n    // Check that article is still in private\n    trigger: 'section[data-section=\"private\"] .o_article .o_article:contains(\"Private Child 2\")',\n    run: () => {},\n},\n// Publish private article\n{\n    // Open private article\n    trigger: '.o_article_name:contains(\"Private Article\")',\n}, {\n    // Open the share dropdown\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n    extra_trigger: '.o_article_active:contains(\"Private Article\")',\n}, {\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => changeInternalPermission('read'),\n}, {\n    // Check that article moved to the workspace\n    trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Private Article\")',\n    run: () => {},\n},\n// Change permission of workspace article to write\n{\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => changeInternalPermission('write'),\n}, {\n    // Check that article did not move\n    trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Private Article\")',\n    run: () => {},\n},\n// Change permission of workspace article to read\n{\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => changeInternalPermission('read'),\n}, {\n    // Check that article did not move\n    trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Private Article\")',\n    run: () => {},\n}, \n// Restrict workspace article\n{\n    // Change permission\n    trigger: '.o_knowledge_share_panel:not(:has(.fa-spin))',\n    run: () => changeInternalPermission('none'),\n}, {\n    // Check that the article moved to private\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Private Article\")',\n    run: () => {},\n},\n// Drag and drop child above other child\n{\n    trigger: 'section[data-section=\"private\"] .o_article .o_article:first:contains(\"Private Child 1\")',\n    run: () => {\n        dragAndDropArticle(\n            $('.o_section[data-section=\"private\"] .o_article_name:contains(\"Private Child 3\")'),\n            $('.o_section[data-section=\"private\"] .o_article_name:contains(\"Private Child 1\")'),\n        );\n    },\n}, {\n    // Check that children have been reordered in both trees\n    trigger: 'section[data-section=\"favorites\"] .o_article .o_article:first:contains(\"Private Child 3\")',\n    extra_trigger: 'section[data-section=\"private\"] .o_article .o_article:first:contains(\"Private Child 3\")',\n},\n// Drag and drop child above root\n{\n    // Open child article\n    trigger: '.o_article_name:contains(\"Private Child 2\")',\n}, {\n    // Check that article shows \"Add Properties\" button\n    trigger: '.o_knowledge_add_buttons',\n    extra_trigger: '.o_article_active:contains(\"Private Child 2\")',\n    run: () => {\n        if (!document.querySelector('.o_knowledge_add_buttons .o_knowledge_add_properties')) {\n            console.error('Child articles should have properties.');\n        }\n    },\n}, {\n    trigger: 'section[data-section=\"private\"] .o_article:first:contains(\"Private Article\")',\n    run: () => {\n        dragAndDropArticle(\n            $('.o_section[data-section=\"private\"] .o_article_name:contains(\"Private Child 2\")'),\n            $('.o_section[data-section=\"private\"] .o_article_name:contains(\"Private Article\")'),\n        );\n    },\n}, {\n    // Check that child became the first private root article\n    trigger: '.o_section[data-section=\"private\"] .o_article:not(:has(.o_article:contains(\"Private Child 2\")))',\n    extra_trigger: '.o_section[data-section=\"private\"] ul >:first:contains(\"Private Child 2\")',\n    run: () => {},\n}, {\n    // Check that article was removed from children in favorites\n    trigger: '.o_section[data-section=\"favorites\"]:not(:has(.o_article:contains(\"Private Child 2\")))',\n    run: () => {\n        makeVisible('.o_knowledge_add_buttons');\n    }\n}, {\n    // Check that article does not show \"Add Properties\" button anymore\n    trigger: '.o_knowledge_add_buttons:not(:has(button.o_knowledge_add_properties))',\n    run: () => {},\n},\n// Drag and drop root above root\n{\n    trigger: '.o_section[data-section=\"private\"] .o_article:contains(\"Private Child 2\") + .o_article:contains(\"Private Article\")',\n    run: () => {\n        dragAndDropArticle(\n            $('.o_section[data-section=\"private\"] .o_article_name:contains(\"Private Article\")'),\n            $('.o_section[data-section=\"private\"] .o_article_name:contains(\"Private Child 2\")'),\n        );\n    },\n}, {\n    // Check that the articles have been reordered\n    trigger: '.o_section[data-section=\"private\"] .o_article:contains(\"Private Article\") + .o_article:contains(\"Private Child 2\")',\n    run: () => {\n        makeVisible('section[data-section=\"private\"] .o_section_create');\n    },\n},\n// Drag and drop root above child\n{\n    // Create a new article\n    trigger: 'section[data-section=\"private\"] .o_section_create',\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    extra_trigger: '.o_article_active:contains(\"Untitled\")',\n    run: 'text Private Child 4',\n}, {\n    trigger: '.o_article_active:contains(\"Private Child 4\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"private\"] .o_article_name:contains(\"Private Child 4\")'),\n            $('section[data-section=\"private\"] .o_article_name:contains(\"Private Child 1\")'),\n        );\n    },\n}, {\n    // Check that the children are correclty ordered\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Private Child 3\") + .o_article:contains(\"Private Child 4\")',\n    extra_trigger: 'section[data-section=\"private\"] .o_article:contains(\"Private Child 4\") + .o_article:contains(\"Private Child 1\")',\n    run: () => {},\n}, {\n    // Check that the children are also ordered in the favorite tree\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Child 3\") + .o_article:contains(\"Private Child 4\")',\n    extra_trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Child 4\") + .o_article:contains(\"Private Child 1\")',\n    run: () => {},\n},\n// Drag and drop workspace to private\n{\n    trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Workspace Article\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"workspace\"] .o_article:contains(\"Workspace Article\")'),\n            $('section[data-section=\"private\"]'),\n        );\n    },\n}, {\n    // Moving from section should ask for confirmation\n    trigger: '.modal-footer .btn-primary',\n}, {\n    // Check that article moved to the private section\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Workspace Article\")',\n    extra_trigger: 'section[data-section=\"workspace\"]:not(:has(.o_article:contains(\"Workspace Article\")))',\n    run: () => {},\n}, {\n    // Show that empty section message is shown\n    trigger: 'section[data-section=\"workspace\"] .o_knowledge_empty_info',\n    run: () => {},\n},\n// Cancel drag and drop\n{\n    trigger: '.o_knowledge_tree',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"private\"] .o_article_name:contains(\"Workspace Article\")'),\n            $('section[data-section=\"workspace\"] .o_section_header'),\n        );\n    },\n}, {\n    // Cancel the move\n    trigger: '.modal-footer .btn-secondary',\n}, {\n    // Check that the article did not move\n    trigger: 'section[data-section=\"private\"] .o_article:contains(\"Workspace Article\")',\n    extra_trigger: 'section[data-section=\"workspace\"]:not(:has(.o_article:contains(\"Workspace Article\")))',\n    run: () => {},\n},\n// Drag and drop private to workspace\n{\n    trigger: '.o_knowledge_tree',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"private\"] .o_article_name:contains(\"Workspace Article\")'),\n            $('section[data-section=\"workspace\"]'),\n        );\n    },\n}, {\n    // Moving from section should ask for confirmation\n    trigger: '.modal-footer .btn-primary',\n}, {\n    // Check that article moved to the workspace section\n    trigger: 'section[data-section=\"workspace\"] .o_article:contains(\"Workspace Article\")',\n    extra_trigger: 'section[data-section=\"private\"]:not(:has(.o_article:contains(\"Workspace Article\")))',\n    run: () => {},\n}, {\n    // Check that the empty section message disappeared\n    trigger: 'section[data-section=\"workspace\"]:not(:has(.o_knowledge_empty_info))',\n    run: () => {},\n},\n// Drag and drop article to shared (fails)\n{\n    trigger: '.o_article:contains(\"Private Article\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"private\"] .o_article:contains(\"Private Article\")'),\n            $('section[data-section=\"shared\"]'),\n        );\n    },\n}, {\n    // Close the move cancelled modal\n    trigger: '.modal-footer .btn-primary',\n    extra_trigger: '.modal-title:contains(\"Move cancelled\")',\n},\n// Resequence shared articles\n{\n    trigger: 'section[data-section=\"private\"]',\n    run: () => {\n        makeVisible('section[data-section=\"private\"] .o_section_create');\n    },\n}, {\n    // Create a new shared article\n    trigger: 'section[data-section=\"private\"] .o_section_create',\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    extra_trigger: '.o_article_active:contains(\"Untitled\")',\n    run: 'text Shared 2',\n}, {\n    // Share the article\n    trigger: '.o_knowledge_header .btn:contains(\"Share\")',\n}, {\n    trigger: '.o_knowledge_share_panel .btn:contains(\"Invite\")',\n}, {\n    trigger: '.o_field_many2many_tags_email[name=partner_ids] input',\n    run: 'text henri@knowledge.com',\n}, {\n    trigger: '.o-autocomplete--dropdown-item:contains(\"henri@\")',\n    extra_trigger: '.o-autocomplete--dropdown-menu.show',\n}, {\n    trigger: 'button:contains(\"Invite\")',\n    extra_trigger: '.o_field_tags span.o_badge_text',\n}, {\n    trigger: 'section[data-section=\"shared\"] .o_article:contains(\"Shared Article\") + .o_article:contains(\"Shared 2\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"shared\"] .o_article_name:contains(\"Shared 2\")'),\n            $('section[data-section=\"shared\"] .o_article_name:contains(\"Shared Article\")'),\n        );\n    },\n}, {\n    // Check that the articles have been resequenced\n    trigger: 'section[data-section=\"shared\"] .o_article:contains(\"Shared 2\") + .o_article:contains(\"Shared Article\")',\n    run: () => {\n        makeVisible('section[data-section=\"private\"] .o_section_create');\n    },\n},\n// Drag and drop article above shared child\n{\n    // Create a new article\n    trigger: 'section[data-section=\"private\"] .o_section_create',\n}, {\n    // Rename the article\n    trigger: '.o_breadcrumb_article_name > input',\n    extra_trigger: '.o_article_active:contains(\"Untitled\")',\n    run: 'text Moved to Share',\n}, {\n    trigger: '.o_article_active:contains(\"Moved to Share\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"private\"] .o_article_name:contains(\"Moved to Share\")'),\n            $('section[data-section=\"shared\"] .o_article_name:contains(\"Shared Child\")'),\n        );\n    },\n}, {\n    // Moving under a shared article should ask for confirmation\n    trigger: '.modal-footer .btn-primary',\n}, {\n    // Check that the article has been moved\n    trigger: 'section[data-section=\"shared\"] .o_article .o_article:contains(\"Moved to Share\")',\n    extra_trigger: 'section[data-section=\"private\"]:not(:has(.o_article:contains(\"Moved to Share\")))',\n    run: () => {},\n},\n// Drag and drop shared child to shared\n{\n    trigger: '.o_knowledge_tree',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"shared\"] .o_article_name:contains(\"Moved to Share\")'),\n            $('section[data-section=\"shared\"] .o_article_name:contains(\"Shared Article\")'),\n        );\n    },\n}, {\n    // Close the move cancelled modal\n    trigger: '.modal-footer .btn-primary',\n    extra_trigger: '.modal-title:contains(\"Move cancelled\")',\n},\n// Drag and drop article to trash\n{\n    trigger: '.o_knowledge_tree',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"private\"] .o_article_name:contains(\"Private Child 2\")'),\n            $('.o_section.o_knowledge_sidebar_trash'),\n        );\n    },\n}, {\n    // Check that article has been removed from the sidebar\n    trigger: '.o_knowledge_tree:not(:has(.o_article:contains(\"Private Child 2\")))',\n    run: () => {},\n},\n// Drag and drop parent of active article to trash\n{\n    trigger: '.o_article_active:contains(\"Moved to Share\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"shared\"] .o_article_name:contains(\"Shared Article\")'),\n            $('.o_section.o_knowledge_sidebar_trash'),\n        );\n    },\n}, {\n    // Check that article has been removed from the sidebar\n    trigger: '.o_knowledge_tree:not(:has(.o_article:contains(\"Shared Article\")))',\n    run: () => {},\n}, {\n    // Check that user has been redirected to first accessible article\n    trigger: '.o_knowledge_tree .o_article:first:has(.o_article_active)',\n    run: () => {},\n},\n// Resequence favorites\n{\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Private Article\") + .o_article:contains(\"Workspace Child\")',\n    run: () => {\n        dragAndDropArticle(\n            $('section[data-section=\"favorites\"] .o_article_name:contains(\"Workspace Child\")'),\n            $('section[data-section=\"favorites\"] .o_article_name:contains(\"Private Article\")'),\n        );\n    },\n}, {\n    // Check that favorites have been resequenced\n    trigger: 'section[data-section=\"favorites\"] .o_article:contains(\"Workspace Child\") + .o_article:contains(\"Private Article\")',\n    run: () => {},\n}]});\n", "/** @odoo-module */\n\nimport { endKnowledgeTour } from './knowledge_tour_utils.js';\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n\nregistry.category(\"web_tour.tours\").add(\"knowledge_load_template\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(), {\n            // open the Knowledge App\n            trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n        }, { // click on the main \"New\" action\n            trigger: '.o_knowledge_header .btn:contains(\"New\")',\n        }, { // open the template picker dialog\n            trigger: '.o_knowledge_helper .o_knowledge_load_template',\n        }, { // choose a template\n            trigger: '.o_knowledge_template_selector div:contains(\"My Template\")',\n        }, { // insert the template\n            trigger: 'button:contains(\"Load Template\")'\n        }, { // check that the icon has been changed\n            trigger: '.o_knowledge_body .o_article_emoji:contains(\ud83d\udcda)',\n            run: () => {},\n        }, { // check that the title of the article has changed\n            trigger: '.o_breadcrumb_article_name_container:contains(\"My Template\")',\n            run: () => {},\n        }, { // check that the body of the article has changed\n            trigger: '.o_knowledge_body .note-editable:contains(Lorem ipsum dolor sit amet, consectetur adipisicing elit.)',\n            run: () => {},\n        }, ...endKnowledgeTour()\n    ]\n});\n", "/** @odoo-module */\n\nimport { SORTABLE_TOLERANCE } from \"@knowledge/components/sidebar/sidebar\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\nimport { setSelection, boundariesIn } from \"@web_editor/js/editor/odoo-editor/src/utils/utils\";\nimport { insertText } from \"@web/../tests/utils\";\n\nexport const changeInternalPermission = (permission) => {\n    const target = document.querySelector('.o_permission[aria-label=\"Internal Permission\"]');\n    target.value = permission;\n    target.dispatchEvent(new Event(\"change\"));\n};\n\n/**\n * Drag&drop an article in the sidebar\n * @param {$.Element} element\n * @param {$.Element} target\n */\nexport const dragAndDropArticle = ($element, $target) => {\n    const elementOffset = $element.offset();\n    const targetOffset = $target.offset();\n    // If the target is under the element, the cursor needs to be in the upper\n    // part of the target to trigger the move. If it is above, the cursor needs\n    // to be in the bottom part.\n    const targetY = targetOffset.top + (targetOffset.top > elementOffset.top ? ($target.outerHeight() - 1) : 0); \n\n    const element = $element[0].closest(\"li\");\n    const target = $target[0];\n    element.dispatchEvent(\n        new PointerEvent(\"pointerdown\", {\n            bubbles: true,\n            which: 1,\n            clientX: elementOffset.right,\n            clientY: elementOffset.top,\n        })\n    );\n\n    // Initial movement starting the drag sequence\n    element.dispatchEvent(\n        new PointerEvent(\"pointermove\", {\n            bubbles: true,\n            which: 1,\n            clientX: elementOffset.right,\n            clientY: elementOffset.top + SORTABLE_TOLERANCE,\n        })\n    );\n\n    // Timeouts because sidebar onMove is debounced\n    setTimeout(() => {\n        target.dispatchEvent(\n            new PointerEvent(\"pointermove\", {\n                bubbles: true,\n                which: 1,\n                clientX: targetOffset.right,\n                clientY: targetY,\n            })\n        );\n\n        setTimeout(() => {\n            element.dispatchEvent(\n                new PointerEvent(\"pointerup\", {\n                    bubbles: true,\n                    which: 1,\n                    clientX: targetOffset.right,\n                    clientY: targetY,\n                })\n            );\n        }, 200);\n    }, 200);\n};\n\n/**\n * Steps to insert an articleLink for the given article, in the first editable\n * html_field found in the given container selector (should have a paragraph\n * as its last element, and the link will be inserted at the position at index\n * offset in the paragraph).\n *\n * @param {string} htmlFieldContainerSelector jquery selector for the container\n * @param {string} articleName name of the article to insert a link for\n * @param {integer} offset position of the command call in the paragraph\n * @returns {Array} tour steps\n */\nexport function appendArticleLink(htmlFieldContainerSelector, articleName, offset=0) {\n    return [{ // open the command bar\n        trigger: `${htmlFieldContainerSelector} .odoo-editor-editable > p:last-child`,\n        run: function () {\n            openCommandBar(this.$anchor[0], offset);\n        },\n    }, { // click on the /article command\n        trigger: '.oe-powerbox-commandName:contains(Article)',\n        run: 'click',\n        in_modal: false,\n    }, { // select an article in the list\n        trigger: `.o_select_menu_item:contains(${articleName})`,\n        run: 'click',\n        in_modal: false,\n    }, { // wait for the choice to be registered\n        trigger: `.o_select_menu_toggler_slot:contains(${articleName})`,\n        run: () => {},\n    }, { // click on the \"Insert Link\" button\n        trigger: '.modal-dialog:contains(Link an Article) .modal-footer button.btn-primary',\n        run: 'click'\n    }];\n}\n\n/**\n * Ensure that the tour does not end on the Knowledge form view by returning to\n * the home menu.\n */\nexport function endKnowledgeTour() {\n    return [\n        stepUtils.toggleHomeMenu(), {\n            trigger: '.o_app[data-menu-xmlid=\"knowledge.knowledge_menu_root\"]',\n            run: () => {},\n        }\n    ];\n}\n\nexport function makeVisible(selector) {\n    const el = document.querySelector(selector);\n    if (el) {\n        el.style.setProperty(\"visibility\", \"visible\", \"important\");\n        el.style.setProperty(\"opacity\", \"1\", \"important\");\n        el.style.setProperty(\"display\", \"block\", \"important\");\n    }\n}\n\n/**\n * Opens the power box of the editor\n * @param {HTMLElement} paragraph\n * @param {integer} offset position of the command call in the paragraph\n */\nexport function openCommandBar(paragraph, offset=0) {\n    const sel = document.getSelection();\n    sel.removeAllRanges();\n    const range = document.createRange();\n    range.setStart(paragraph, offset);\n    range.setEnd(paragraph, offset);\n    sel.addRange(range);\n    paragraph.dispatchEvent(\n        new KeyboardEvent(\"keydown\", {\n            key: \"/\",\n        })\n    );\n    const slash = document.createTextNode(\"/\");\n    paragraph.prepend(slash);\n    sel.removeAllRanges();\n    range.setStart(slash, 1);\n    range.setEnd(slash, 1);\n    sel.addRange(range);\n    paragraph.dispatchEvent(\n        new InputEvent(\"input\", {\n            inputType: \"insertText\",\n            data: \"/\",\n            bubbles: true,\n        })\n    );\n    paragraph.dispatchEvent(\n        new KeyboardEvent(\"keyup\", {\n            key: \"/\",\n        })\n    );\n}\n\nexport function createNewCommentSteps(text) {\n    return [{\n        // Select some text in the first paragraph\n        trigger: '.note-editable p.to-select',\n        run: function () {\n            setSelection(...boundariesIn(this.$anchor[0]));\n        }\n    }, {\n        // Trigger comment creation with the editor toolbar\n        trigger: '.oe-toolbar div[id=\"comment-line\"]',\n    }, {\n        trigger: '.o_knowledge_comments_popover, .o_knowledge_comment_box',\n        run: () => {}\n    }, {\n        trigger: '.o_knowledge_comments_popover .o-mail-Composer-input, .o-mail-Composer-input',\n        run: async () => {\n            await insertText('.o-mail-Composer-input', text || 'Hello World');\n        }\n    }, {\n        // Send comment\n        trigger: '.o_knowledge_comments_popover .o-mail-Composer-send:not([disabled=\"\"]), .o-mail-Composer-send:not([disabled=\"\"])'\n    }, {\n        trigger: '.o_knowledge_comment_box[data-id] .o_knowledge_comment_small_ui img, .o_knowledge_comment_box[data-id]',\n        run: () => {}\n    }, {\n        trigger: '.o_knowledge_comment_box[data-id] .o_knowledge_comment_small_ui img, .o_knowledge_comment_box[data-id]',\n        run: function () {\n            this.$anchor[0].querySelector('.o_knowledge_comment_small_ui img')?.click();\n        }\n    }, {\n        trigger: `.o-mail-Thread :contains(${text || 'Hello World'})`,\n        run: () => {}\n    },];\n}\n\nexport function answerThreadSteps(text) {\n    return [\n        {\n            trigger: '.o_knowledge_comments_popover, .o_knowledge_comment_box',\n        }, {\n            trigger: '.o_knowledge_comments_popover .o-mail-Composer-input, .o-mail-Composer-input',\n            run: async () => {\n                await insertText('.o-mail-Composer-input', text || 'Hello World');\n            }\n        }, {\n            // Send comment\n            trigger: '.o_knowledge_comments_popover .o-mail-Composer-send:not([disabled=\"\"]), .o-mail-Composer-send:not([disabled=\"\"])'\n        }, {\n            trigger: `.o-mail-Thread :contains(${text || 'Hello World'})`,\n            run: () => {}\n        }, {\n            trigger: '.note-editable'\n        }, {\n            trigger: '.o_knowledge_comment_box:not(.commenting)',\n            run: () => {}\n        }\n    ];\n}\n\nexport function resolveCommentSteps() {\n    return [\n        {\n            trigger: '.o-mail-Message-actions',\n            run: () => {\n                makeVisible('.o-mail-Message-actions');\n            }\n        }, {// Resolve Thread\n            trigger: 'button[name=\"closeThread\"]'\n        }\n    ];\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"shared_sign_request_tour\", {\n    test: true,\n    url: \"/web\",\n    steps: () => [\n        {\n            content: \"Open Sign APP\",\n            trigger: '.o_app[data-menu-xmlid=\"sign.menu_document\"]',\n            run: \"click\",\n        },\n        {\n            content: \"Remove My Favorites filter\",\n            trigger: \".o_cp_searchview .o_facet_remove\",\n            run: \"click\",\n        },\n        {\n            content: 'Search template \"template_1_role\"',\n            trigger: \".o_cp_searchview input\",\n            run: \"text template_1_role\",\n        },\n        {\n            content: \"Search Document Name\",\n            trigger: \".o_searchview_autocomplete .o_menu_item:first\",\n            run: \"click\",\n        },\n        {\n            content: \"Share the template\",\n            trigger: '.o_kanban_record_bottom:first button:contains(\"Share\"):first',\n            extra_trigger: '.oe_kanban_main:first span:contains(\"template_1_role\")',\n            run: \"click\",\n        },\n        {\n            content: \"Go on signing page\",\n            trigger: \".o_field_CopyClipboardChar\",\n            run: function () {\n                const share_link = this.$anchor.contents()[0].firstChild.textContent;\n                // Retrieve the link without the origin to avoid\n                // mismatch between localhost:8069 and 127.0.0.1:8069\n                // when running the tour with chrome headless\n                const regex = \"/sign/document/mail/.*\";\n                const url = share_link.match(regex)[0];\n                window.location.href = window.location.origin + url;\n            },\n        },\n        {\n            content: \"Fill the sign item\",\n            trigger: \"iframe input.o_sign_sign_item\",\n            run: \"text Mitchell Admin\",\n        },\n        {\n            content: \"Validate & Send Completed Document\",\n            trigger: \".o_validate_button\",\n            run: \"click\",\n        },\n        {\n            content: \"Fill name\",\n            trigger: \"#o_sign_public_signer_name_input\",\n            extra_trigger: '.modal-title:contains(\"Final Validation\")',\n            run: \"text Mitchell Admin\",\n        },\n        {\n            content: \"Fill email\",\n            trigger: \"#o_sign_public_signer_mail_input\",\n            run: \"text mitchell.admin@public.com\",\n        },\n        {\n            content: \"Validate & Send\",\n            trigger: '.modal-footer button:contains(\"Validate & Send\")',\n            run: \"click\",\n        },\n        {\n            content: \"Download Document\",\n            trigger: \"button.btn.btn-primary\",\n            extra_trigger: '.modal-title:contains(\"Thank you!\")',\n            run() {},\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"sign_resend_expired_link_tour\", {\n    test: true,\n    steps: () => [\n        {\n            trigger: \".btn.btn-primary\",\n            content: \"Click to resend the url\",\n            extra_trigger: \"a:contains(Send a new link)\",\n            run() {},\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction triggerDragEvent(element, type, data = {}) {\n    const event = new DragEvent(type, { bubbles: true });\n    for (const key in data) {\n        Object.defineProperty(event, key, {\n            value: data[key],\n        });\n    }\n    element.dispatchEvent(event);\n}\n\nfunction dragAndDropSignItemAtHeight(type, page, height = 0.5, width = 0.5) {\n    const iframe = document.querySelector(\"iframe\");\n    const iframeDocument = iframe.contentWindow.document;\n    const signItemTypeButtons = iframeDocument.querySelectorAll(\n        \".o_sign_field_type_toolbar_items .o_sign_field_type_button\"\n    );\n    const from = Array.from(signItemTypeButtons).find((el) => el.innerText === type);\n\n    const to = iframeDocument.querySelector(`.page[data-page-number=\"${page}\"]`);\n    const toPosition = to.getBoundingClientRect();\n    toPosition.x += iframe.contentWindow.scrollX + to.clientWidth * width;\n    toPosition.y += iframe.contentWindow.scrollY + to.clientHeight * height;\n\n    const dataTransferObject = {};\n    const dataTransferMock = {\n        setData: (key, value) => {\n            dataTransferObject[key] = value;\n        },\n        getData: (key) => {\n            return dataTransferObject[key];\n        },\n        setDragImage: () => {},\n    };\n\n    triggerDragEvent(from, \"dragstart\", {\n        dataTransfer: dataTransferMock,\n    });\n\n    triggerDragEvent(to, \"drop\", {\n        pageX: toPosition.x,\n        pageY: toPosition.y,\n        dataTransfer: dataTransferMock,\n    });\n\n    triggerDragEvent(from, \"dragend\");\n}\n\nregistry.category(\"web_tour.tours\").add(\"sign_template_creation_tour\", {\n    test: true,\n    url: \"/web?debug=1\",\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: \"Open Sign App\",\n            trigger: '.o_app[data-menu-xmlid=\"sign.menu_document\"]',\n            run: \"click\",\n        },\n        {\n            content: \"Remove My Favorites filter\",\n            trigger: \".o_cp_searchview .o_facet_remove\",\n            run: \"click\",\n        },\n        {\n            content: 'Search template \"blank_template\"',\n            trigger: \".o_cp_searchview input\",\n            run: \"text blank_template\",\n        },\n        {\n            content: \"Search Document Name\",\n            trigger: \".o_searchview_autocomplete .o_menu_item:first\",\n            run: \"click\",\n        },\n        {\n            content: \"Enter Template Edit Mode\",\n            trigger: '.oe_kanban_main:first span:contains(\"blank_template\")',\n            run: \"click\",\n        },\n        {\n            content: \"Wait for iframe to load PDF\",\n            trigger: \"iframe #viewerContainer\",\n            run: () => {},\n        },\n        {\n            content: \"Wait for page to be loaded\",\n            trigger: \"iframe .page\",\n            run: () => {},\n        },\n        {\n            content: \"Drop Signature Item\",\n            trigger: \"iframe body\",\n            run: function () {\n                dragAndDropSignItemAtHeight(\"Signature\", 1, 0.5, 0.25);\n            },\n        },\n        {\n            content: \"Drop Name Sign Item\",\n            trigger: \"iframe body\",\n            run: function () {\n                dragAndDropSignItemAtHeight(\"Name\", 1, 0.25, 0.25);\n            },\n        },\n        {\n            content: \"Drop Text Sign Item\",\n            trigger: \"iframe body\",\n            run: function () {\n                dragAndDropSignItemAtHeight(\"Text\", 1, 0.15, 0.25);\n            },\n        },\n        {\n            content: \"Open popover on name sign item\",\n            trigger: 'iframe .o_sign_sign_item:contains(\"Name\") .o_sign_item_display',\n            run: \"click\",\n        },\n        {\n            content: \"Change responsible\",\n            trigger: \".o_popover .o_input_dropdown input\",\n            run: \"text employee\",\n        },\n        {\n            content: \"select employee\",\n            trigger: '.o_popover .o_input_dropdown .dropdown .dropdown-item:contains(\"Employee\")',\n        },\n        {\n            content: \"Validate changes\",\n            trigger: \".o_popover .o_sign_validate_field_button\",\n        },\n        {\n            content: \"Drop Selection Sign Item\",\n            trigger: \"iframe body\",\n            run: function () {\n                dragAndDropSignItemAtHeight(\"Selection\", 1, 0.75, 0.25);\n            },\n        },\n        {\n            content: \"Open popover on Selection sign item\",\n            trigger: 'iframe .o_sign_sign_item:contains(\"Selection\") .o_sign_item_display',\n            run: \"click\",\n        },\n        {\n            content: \"Write new selection option name\",\n            trigger: \".o_popover .o_input_dropdown input\",\n            run: \"text option\",\n        },\n        {\n            content: \"Create new selection option\",\n            trigger: '.o_popover .o_input_dropdown .dropdown a:contains(\"Create\")',\n        },\n        {\n            content: \"Check option is added\",\n            trigger: '.o_popover #o_sign_select_options_input .o_tag_badge_text:contains(\"option\")',\n        },\n        {\n            content: \"Validate changes\",\n            trigger: \".o_popover .o_sign_validate_field_button\",\n        },\n        {\n            content: \"Open popover on text sign item\",\n            trigger: \"iframe .o_sign_sign_item:contains('Text') .o_sign_item_display\",\n        },\n        {\n            content: \"Change text placeholder\",\n            trigger: \".o_popover .o_popover_placeholder input\",\n            run: \"text placeholder\",\n        },\n        {\n            content: \"Validate changes\",\n            trigger: \".o_popover .o_sign_validate_field_button\",\n        },\n        {\n            content: \"Change template name\",\n            trigger: \".o_sign_template_name_input\",\n            run: \"text filled_template\",\n        },\n        {\n            trigger: \".breadcrumb .o_back_button\",\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { _t } from \"@web/core/l10n/translation\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add(\"sign_widgets_tour\", {\n    test: true,\n    url: \"/web\",\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: \"Settings\",\n            trigger: 'a[data-menu-xmlid=\"base.menu_administration\"]',\n            run: \"click\",\n        },\n        {\n            content: \"Users\",\n            trigger: \"div#invite_users button.o_web_settings_access_rights\",\n            run: \"click\",\n        },\n        {\n            content: \"Mitchel\",\n            trigger: \"table.o_list_table td.o_data_cell:contains(Admin)\",\n            run: \"click\",\n        },\n\n        {\n            content: \"Preference tab\",\n            trigger: 'a.nav-link:contains(\"' + _t(\"Preferences\") + '\")',\n            run: \"click\",\n        },\n        {\n            content: \"Editor loaded\",\n            trigger: \".note-editable\",\n        },\n        {\n            content: \"Click on widget sign\",\n            trigger: \".o_signature:first\",\n            run: \"click\",\n        },\n        {\n            content: \"Click on auto button\",\n            trigger: \".o_web_sign_auto_button\",\n            run: \"click\",\n        },\n        {\n            content: \"Click on style button\",\n            trigger: \".o_web_sign_auto_select_style > button\",\n            run: \"click\",\n        },\n        {\n            content: \"Select a style\",\n            trigger: \".o_web_sign_auto_select_style .dropdown-item:nth-child(3)\",\n            run: \"click\",\n        },\n        {\n            content: \"Click on style button\",\n            trigger: \".o_web_sign_auto_select_style > button\",\n            run: \"click\",\n        },\n        {\n            content: \"Select a style\",\n            trigger: \".o_web_sign_auto_select_style .dropdown-item:nth-child(2)\",\n            run: \"click\",\n        },\n        {\n            content: \"Sign\",\n            trigger: 'button.btn-primary:contains(\"Adopt & Sign\")',\n            extra_trigger: \"canvas.jSignature\",\n            run: function () {\n                setTimeout(() => {\n                    this.$anchor.click();\n                }, 1000);\n            },\n        },\n        ...stepUtils.saveForm(),\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add(\"sign_report_modal_tour\", {\n    test: true,\n    url: \"/web\",\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: \"Open Sign app\",\n            trigger: '.o_app[data-menu-xmlid=\"sign.menu_document\"]',\n            run: \"click\",\n        },\n        {\n            content: \"Open Reports menu\",\n            trigger: '.o_main_navbar button[data-menu-xmlid=\"sign.sign_reports\"]',\n            run: \"click\",\n        },\n        {\n            content: \"Open Green Savings Report\",\n            trigger: '.dropdown-item[data-menu-xmlid=\"sign.sign_report_green_savings\"]',\n            run: \"click\",\n        },\n        {\n            content: \"Open the modal\",\n            extra_trigger: 'iframe .green-savings-page a[data-bs-target=\".modal_green_savings\"]',\n            trigger: 'iframe a:contains(\"How are these results calculated?\")',\n            run: \"click\",\n        },\n        {\n            trigger: \"iframe .modal_green_savings.show\",\n            run: () => {},\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add(\"test_sign_flow_tour\", {\n    test: true,\n    url: \"/web\",\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            content: \"Open Sign APP\",\n            trigger: '.o_app[data-menu-xmlid=\"sign.menu_document\"]',\n            run: \"click\",\n        },\n        {\n            content: \"Remove My Favorites filter\",\n            trigger: \".o_cp_searchview .o_facet_remove\",\n            run: \"click\",\n        },\n        {\n            content: 'Search template \"template_1_roles\"',\n            trigger: \".o_cp_searchview input\",\n            run: \"text template_1_role(2)\",\n            position: \"bottom\",\n        },\n        {\n            content: \"Search Document Name\",\n            trigger: \".o_searchview_autocomplete .o_menu_item:first\",\n            run: \"click\",\n        },\n        {\n            content: \"list view\",\n            trigger: \"button.o_list\",\n            run: \"click\",\n        },\n        {\n            content: \"Click Sign Now\",\n            extra_trigger: '.o_list_button button:contains(\"Sign Now\")',\n            trigger: \"button:contains('Sign Now')\",\n            run: \"click\",\n        },\n        {\n            content: \"Click sign\",\n            trigger: \"button[name='sign_directly']\",\n            run: \"click\",\n        },\n        {\n            content: \"Click to start\",\n            trigger: 'iframe .o_sign_sign_item_navigator:contains(\"Click to start\")',\n            position: \"bottom\",\n        },\n        {\n            trigger: \"iframe input.o_sign_sign_item:focus\",\n            auto: true,\n            run() {},\n        },\n        {\n            content: \"Fill the sign item\",\n            trigger: \"iframe input.o_sign_sign_item\",\n            run: \"text Mitchell Admin\",\n        },\n        {\n            content: \"Click next 1\",\n            trigger: 'iframe .o_sign_sign_item_navigator:contains(\"next\")',\n            run: \"click\",\n        },\n        {\n            content: \"Click sign it\",\n            trigger: 'iframe .o_sign_sign_item_navigator:contains(\"sign it\")',\n            run: \"click\",\n        },\n        {\n            trigger: \"iframe button.o_sign_sign_item:has(> img)\",\n            extra_trigger: \"iframe :not(:has(.o_sign_sign_item_navigator))\",\n            auto: true,\n        },\n        {\n            content: \"Click on auto button\",\n            trigger: \".o_web_sign_auto_button\",\n            run: \"click\",\n        },\n        {\n            content: \"Sign\",\n            trigger: 'button.btn-primary:contains(\"Sign all\")',\n            extra_trigger: \"canvas.jSignature\",\n            run() {\n                setTimeout(() => {\n                    this.$anchor.click();\n                }, 1000);\n            },\n        },\n        {\n            content: \"Validate & Send Completed Document\",\n            extra_trigger: \".o_sign_validate_banner\",\n            trigger: \"button:contains('Validate & Send Completed Document')\",\n            run: \"click\",\n        },\n        {\n            content: \"view\",\n            extra_trigger: \".modal-dialog\",\n            trigger: \".modal-footer button.btn-primary\",\n            alt_trigger: \".modal-footer button.btn-secondary\",\n            run: \"click\",\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add(\"translate_sign_instructions\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Translations must be loaded\",\n            trigger: 'iframe .o_sign_sign_item_navigator:contains(\"Cliquez pour commencer\")',\n            run: () => null, // it's a check\n        },\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('planning_split_shift_week', {\n    url: '/web?debug=tests',\n    test: true,\n    steps: () => [{\n    trigger: '.o_app[data-menu-xmlid=\"planning.planning_menu_root\"]',\n    content: \"Let's start managing your employees' schedule!\",\n    position: 'bottom',\n}, {\n    trigger: \".scale_button_selection\",\n    content: \"The initial default scale should be week\",\n    run() {\n        const subjectValue = document.querySelector('.scale_button_selection').textContent;\n        if (subjectValue !== \"Week\") {\n            console.error(\n                `Default scale should be week (actual: ${subjectValue})`\n            );\n        }\n    },\n},{\n    trigger: \".o_searchview_dropdown_toggler\",\n    content: \"Open Filter\",\n}, {\n    trigger: \".o_add_custom_filter\",\n    content: \"Click on custom filter\",\n}, {\n    trigger: \".o_model_field_selector\",\n    content: \"Write domain excluding open shifts\",\n    run() {\n        const input = document.querySelector(\".o_domain_selector_debug_container textarea\")\n        input.value = '[(\"resource_id\", \"!=\", False)]';\n        input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: false }));\n    }\n}, {\n    trigger: \".modal-footer > .btn-primary\",\n    content: \"Add custom filter\",\n}, {\n    trigger: \".o_searchview_input\",\n    content: \"Search planning shifts assigned to Aramis\",\n    run: \"text Aramis\",\n}, {\n    trigger: \".o_menu_item.dropdown-item > a:not(.o_expand)\",\n    content: \"Select filter resource = Aramis\",\n    run: 'click',\n}, {\n    trigger: \".o_searchview_input\",\n    content: \"Search planning shifts assigned to Athos\",\n    run: \"text Athos\",\n}, {\n    trigger: \".o_menu_item.dropdown-item > a:not(.o_expand)\",\n    content: \"Select filter resource = Athos\",\n    run: 'click',\n}, {\n    trigger: \".o_searchview_input\",\n    content: \"Search planning shifts assigned to Porthos\",\n    run: \"text Porthos\",\n}, {\n    trigger: \".o_menu_item.dropdown-item > a:not(.o_expand)\",\n    content: \"Select filter resource = Porthos\",\n    run: 'click',\n}, {\n    trigger: \".o_gantt_pill_split_tool[data-split-tool-pill-id='__pill__1_0']\",\n    content: \"Split the slot assigned to Aramis after one day\",\n    run: 'click',\n}, {\n    trigger: \".o_gantt_pill_wrapper[data-pill-id='__pill__4']\",\n    content: \"Wait for the new shift to appear\",\n    run() {},\n}, {\n    trigger: \".o_gantt_pill_split_tool[data-split-tool-pill-id='__pill__3_1']\",\n    content: \"Split the slot assigned to Athos after two days\",\n    run: 'click',\n}, {\n    trigger: \".o_gantt_pill_wrapper[data-pill-id='__pill__5']\",\n    content: \"Wait for the new shift to appear\",\n    run() {},\n}, {\n    trigger: \".o_gantt_pill_split_tool[data-split-tool-pill-id='__pill__3_0']\",\n    content: \"Split the first slot assigned to Athos after one day\",\n    run: 'click',\n}, {\n    trigger: \".o_gantt_pill_wrapper[data-pill-id='__pill__6']\",\n    content: \"Wait for the new shift to appear\",\n    run() {},\n}, {\n    trigger: \".o_gantt_pill_split_tool[data-split-tool-pill-id='__pill__6_0']\",\n    content: \"Split the first slot assigned to Porthos after one day\",\n    run: 'click',\n}]});\n", "/** @odoo-module **/\n\nimport { markup } from \"@odoo/owl\";\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('planning_test_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [{\n    trigger: '.o_app[data-menu-xmlid=\"planning.planning_menu_root\"]',\n    content: \"Let's start managing your employees' schedule!\",\n    position: 'bottom',\n}, {\n    trigger: \".o_gantt_button_add\",\n    content: markup(\"Let's create your first <b>shift</b>.\"),\n    id: 'project_planning_start',\n}, {\n    trigger: \".o_field_widget[name='resource_id'] input\",\n    content: markup(\"Assign this shift to your <b>resource</b>, or leave it open for the moment.\"),\n    run: 'text Aaron',\n}, {\n    trigger: \".o-autocomplete--dropdown-item > a:contains('Aaron')\",\n    auto: true,\n    in_modal: false,\n}, {\n    trigger: \".o_field_widget[name='role_id'] input\",\n    content: markup(\"Select the <b>role</b> your employee will have (<i>e.g. Chef, Bartender, Waiter, etc.</i>).\"),\n    run: 'text Developer',\n}, {\n    trigger: \".o-autocomplete--dropdown-item > a:contains('Developer')\",\n    auto: true,\n    in_modal: false,\n}, {\n    trigger: \".o_field_widget[name='start_datetime'] input\",\n    content: \"Set start datetime\",\n    run: function (actions) {\n        const input = this.$anchor[0];\n        input.value = input.value.replace(/(\\d{2}:){2}\\d{2}/g, '08:00:00');\n        input.dispatchEvent(new InputEvent('input', {\n            bubbles: true,\n        }));\n        input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: false }));\n    }\n}, {\n    trigger: \"input[data-field=end_datetime]\",\n    content: \"Set end datetime\",\n    run: function (actions) {\n        const input = this.$anchor[0];\n        input.value = input.value.replace(/(\\d{2}:){2}\\d{2}/g, '11:59:59');\n        input.dispatchEvent(new InputEvent('input', {\n            bubbles: true,\n        }));\n        input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: false }));\n    }\n}, {\n    trigger: \"div[name='template_creation'] input\",\n    content: \"Save this shift as a template\",\n    run: function (actions) {\n        if (!this.$anchor.prop('checked')) {\n            actions.click(this.$anchor);\n        }\n    },\n}, {\n    trigger: \"button[special='save']\",\n    content: \"Save this shift once it is ready.\",\n}, {\n    trigger: \".o_gantt_pill :contains('11:59')\",\n    content: markup(\"<b>Drag & drop</b> your shift to reschedule it. <i>Tip: hit CTRL (or Cmd) to duplicate it instead.</i> <b>Adjust the size</b> of the shift to modify its period.\"),\n    auto: true,\n    run: function () {\n        if (this.$anchor.length) {\n            const expected = \"8:00 AM - 11:59 AM (4h)\";\n            // Without the replace below, this step could break since luxon\n            // (via Intl) uses sometimes U+202f instead of a simple space.\n            // Note: U+202f is a narrow non-break space.\n            const actual = this.$anchor[0].textContent.replace(/\\u202f/g, \" \");\n            if (!actual.startsWith(expected)) {\n                console.error(\"Test in gantt view doesn't start as expected. Expected : '\" + expected + \"', actual : '\" + actual + \"'\");\n            }\n        } else {\n            console.error(\"Not able to select pill ending at 11h59\");\n        }\n    }\n}, {\n    trigger: \".o_gantt_button_send_all\",\n    content: markup(\"If you are happy with your planning, you can now <b>send</b> it to your employees.\"),\n}, {\n    trigger: \"button[name='action_check_emails']\",\n    content: markup(\"<b>Publish & send</b> your planning to make it available to your employees.\"),\n}, {\n    trigger: \".o_gantt_row_header:contains('Aaron') .o_gantt_progress_bar\",\n    content: \"See employee progress bar\",\n    auto: true,\n    run: function () {\n        const $progressbar = this.$anchor;\n        if ($progressbar.length) {\n            if ($progressbar[0].querySelector(\"span\").style.width === '') {\n                console.error(\"Progress bar should be displayed\");\n            }\n            if (!$progressbar[0].classList.contains(\"o_gantt_group_success\")) {\n                console.error(\"Progress bar should be displayed in success\");\n            }\n        } else {\n            console.error(\"Not able to select progressbar\");\n        }\n    }\n}, {\n    trigger: \".o_gantt_button_copy_previous_week\",\n    content: \"Copy previous week if you want to follow previous week planning schedule\",\n    run: 'click',\n}, {\n    id: \"planning_check_format_step\",\n    trigger: \".o_gantt_pill span:contains(Developer)\",\n    content: \"Check naming format of resource and role when grouped\",\n    auto: true,\n    run: function () {}\n}, {\n    trigger: \".o_gantt_button_auto_plan\",\n    content: \"Click on Auto Plan button to assign open shifts to employees\",\n    run: 'click',\n}, {\n    id: \"planning_check_format_step\",\n    trigger: \".o_gantt_pill.opacity-25\",\n    content: \"Check that the filter is applied\",\n    auto: true,\n    run: function () {},\n}]});\n\nregistry.category(\"web_tour.tours\").add('planning_shift_switching_backend', {\n    url: '/web',\n    test: true,\n    steps: () => [{\n    trigger: '.o_app[data-menu-xmlid=\"planning.planning_menu_root\"]',\n    content: \"Get in the planning app\",\n}, {\n    trigger: '.o_gantt_pill :contains(\"bert\")',\n    content: \"Click on one of your shifts in the gantt view\",\n},\n{\n    trigger: \".popover-footer button\",\n    content: \"Click on the 'Edit' button in the popover\",\n    run: 'click',\n},\n{\n    trigger: 'button[name=\"action_switch_shift\"]',\n    content: \"Click on the 'Switch Shift' button on the Gantt Form view modal\",\n}, {\n    trigger: 'div.o_view_scale_selector > .scale_button_selection',\n    content: 'Toggle the view scale selector',\n}, {\n    trigger: 'div.o_view_scale_selector > .dropdown-menu',\n    content: 'Click on the dropdown button to change the scale of the gantt view',\n    extra_trigger: 'div.o_view_scale_selector .o_scale_button_day',\n}, {\n    trigger: '.o_gantt_pill :contains(\"bert\")',\n    content: \"Click on the unwanted shift in the gantt view again\",\n},\n{\n    trigger: \".popover-footer button\",\n    content: \"Click again on the 'Edit' button in the popover\",\n    run: 'click',\n},\n{\n    trigger: '.alert-warning:contains(\"The employee assigned would like to switch shifts with someone else.\")',\n    content: \"Check that the warning has been shown\",\n}, {\n    trigger: '.btn-close',\n    content: \"Click on the close button to hide the shift form modal\",\n}, {\n    trigger: '.o_planning_gantt',\n    isCheck: true,\n}]});\n\nregistry.category(\"web_tour.tours\").add('planning_assigning_unwanted_shift_backend', {\n    url: '/web',\n    test: true,\n    steps: () => [{\n    trigger: '.o_app[data-menu-xmlid=\"planning.planning_menu_root\"]',\n    content: \"Get in the planning app\",\n}, {\n    trigger: '.o_gantt_pill :contains(\"bert\")',\n    content: \"Click on the unwanted shift of the employee\",\n},\n{\n    trigger: \".popover-footer button\",\n    content: \"Click on the 'Edit' button in the popover\",\n    run: 'click',\n},\n{\n    trigger: \".o_field_widget[name='resource_id'] input\",\n    content: \"Assign this shift to another employee.\",\n    run: 'text joseph',\n}, {\n    trigger: \".o-autocomplete--dropdown-item > a:contains('joseph')\",\n    auto: true,\n    in_modal: false,\n}, {\n    trigger: \"button[special='save']\",\n    content: \"Save this shift once it is ready.\",\n}, {\n    trigger: '.o_gantt_pill :contains(\"joseph\")',\n    content: \"Click again on the newly assigned shift\",\n}, {\n    trigger: '.o_popover',\n    content: \"Check the popover opened\",\n    isCheck: true,\n}]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nconst todayDate = function () {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n\n    return `${month}/${day}/${year} 10:00:00`;\n};\n\nregistry.category(\"web_tour.tours\").add(\"calendar_appointments_hour_tour\", {\n    url: \"/web\",\n    test: true,\n    steps: () => [\n        stepUtils.showAppsMenuItem(),\n        {\n            trigger: '.o_app[data-menu-xmlid=\"calendar.mail_menu_calendar\"]',\n            content: \"Open Calendar\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o-calendar-button-new\",\n            content: \"Create a new event\",\n            run: \"click\",\n        },\n        {\n            trigger: \"#name_0\",\n            content: \"Give a name to the new event\",\n            run: \"text TEST EVENT\",\n        },\n        {\n            trigger: \"#start_0\",\n            content: \"Give a date to the new event\",\n            run: `text ${todayDate()}`,\n        },\n        {\n            trigger: \"#duration_0\",\n            content: \"Give a duration to the new event\",\n            run: \"text 02:00\",\n        },\n        {\n            trigger: \".fa-cloud-upload\",\n            content: \"Save the new event\",\n            run: \"click\",\n        },\n        {\n            trigger: \".o_back_button\",\n            content: \"Go back to Calendar view\",\n            run: \"click\",\n        },\n        {\n            trigger: '.scale_button_selection',\n            content: \"Click to change calendar view\",\n            run: \"click\",\n        },\n        {\n            trigger: '.dropdown-item:contains(\"Month\")',\n            content: \"Change the calendar view to Month\",\n            run: \"click\",\n        },\n        {\n            trigger: '.fc-day-header:contains(\"Mon\")',\n            content: \"Check the day is properly displayed\",\n        },\n        {\n            trigger: '.fc-time:contains(\"10:00\")',\n            content: \"Check the time is properly displayed\",\n        },\n        {\n            trigger: '.o_event_title:contains(\"TEST EVENT\")',\n            content: \"Check the event title\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"test_calendar_delete_tour\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Select filter (everybody)\",\n            trigger: 'div[data-value=\"all\"] input',\n        },\n        {\n            content: \"Click on the event (focus + waiting)\",\n            trigger: 'a .fc-content:contains(\"Test Event\")',\n            async run() {\n                $('a .fc-content:contains(\"Test Event\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n                $('a .fc-content:contains(\"Test Event\")').click();\n            },\n        },\n        {\n            content: \"Delete the event\",\n            trigger: \".o_cw_popover_delete\",\n        },\n        {\n            content: \"Validate the deletion\",\n            trigger: 'button:contains(\"Delete\")',\n            async run() {\n                $('button:contains(\"Delete\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n            },\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"test_calendar_decline_tour\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Click on the event (focus + waiting)\",\n            trigger: 'a .fc-content:contains(\"Test Event\")',\n            async run() {\n                $('a .fc-content:contains(\"Test Event\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n                $('a .fc-content:contains(\"Test Event\")').click();\n            },\n        },\n        {\n            content: \"Delete the event\",\n            trigger: \".o_cw_popover_delete\",\n        },\n        {\n            content: \"Wait declined status\",\n            trigger: \".o_attendee_status_declined\",\n            isCheck: true,\n        },\n    ],\n});\n\nregistry.category(\"web_tour.tours\").add(\"test_calendar_decline_with_everybody_filter_tour\", {\n    test: true,\n    steps: () => [\n        {\n            content: \"Select filter (everybody)\",\n            trigger: 'div[data-value=\"all\"] input',\n        },\n        {\n            content: \"Click on the event (focus + waiting)\",\n            trigger: 'a .fc-content:contains(\"Test Event\")',\n            async run() {\n                $('a .fc-content:contains(\"Test Event\")').click();\n                await new Promise((r) => setTimeout(r, 1000));\n                $('a .fc-content:contains(\"Test Event\")').click();\n            },\n        },\n        {\n            content: \"Delete the event\",\n            trigger: \".o_cw_popover_delete\",\n        },\n        {\n            content: \"Select filter (everybody)\",\n            trigger: 'div[data-value=\"all\"] input',\n        },\n        {\n            content: \"Wait declined status\",\n            trigger: \".o_attendee_status_declined\",\n            isCheck: true,\n        },\n    ],\n});\n", "/** @odoo-module **/\n\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n*/\nfunction patchSurveyWidget() {\n    const SurveyFormWidget = odoo.loader.modules.get('@survey/js/survey_form')[Symbol.for('default')]\n    SurveyFormWidget.include({\n        _submitForm: function () {\n            this.fadeInOutDelay = 0;\n            return this._super.apply(this, arguments);\n        }\n    });\n}\n\n/**\n * This tour will test that, for the demo certification allowing 2 attempts, a user can\n * try and fail twice and will no longer be able to take the certification.\n */\n\nimport { registry } from \"@web/core/registry\";\n\nvar patch = [{\n    content: \"Patching Survey Widget\",\n    trigger: 'body',\n    run: function(){\n        patchSurveyWidget();\n    }\n}]\n\nvar failSteps = [{ // Page-1\n    content: \"Clicking on Start Certification\",\n    trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n}, { // Question: Do we sell Acoustic Bloc Screens?\n    content: \"Selecting answer 'No'\",\n    trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"No\")',\n}, { // Question: Select all the existing products\n    content: \"Ticking answer 'Fanta'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Fanta\")'\n}, {\n    content: \"Ticking answer 'Drawer'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n}, {\n    content: \"Ticking answer 'Conference chair'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n}, { // Question: Select all the available customizations for our Customizable Desk\n    content: \"Ticking answer 'Color'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n}, {\n    content: \"Ticking answer 'Height'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Height\")'\n}, { // Question: How many versions of the Corner Desk do we have?\n    content: \"Selecting answer '2'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n}, { // Question: Do you think we have missing products in our catalog? (not rated)\n    content: \"Missing products\",\n    trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n    run: \"text I don't know products enough to be able to answer that\",\n}, { // Page-2 Question: How much do we sell our Cable Management Box?\n    content: \"Selecting answer '$80'\",\n    trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n}, { // Question: Select all the products that sell for $100 or more\n    content: \"Ticking answer 'Corner Desk Right Sit'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n}, {\n    content: \"Ticking answer 'Desk Combination'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n}, {\n    content: \"Ticking answer 'Office Chair Black'\",\n    trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Office Chair Black\")'\n}, { // Question: What do you think about our prices (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Correctly priced\")',\n}, { // Page-3 Question: How many days is our money-back guarantee?\n    content: \"Inputting answer '60'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n    run: 'text 60'\n}, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n    content: \"Inputting answer '01/06/2020'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n    run: 'text 01/06/2020'\n}, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n    content: \"Inputting answer '01/06/2021 00:00:01'\",\n    trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n    run: 'text 01/06/2021 00:00:01'\n}, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n}, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n    trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n}, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n    content: \"Inputting answer '0'\",\n    trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n    run: 'text 0'\n}, {\n    content: \"Finish Survey\",\n    trigger: 'button[type=\"submit\"]',\n}];\n\nvar retrySteps = [{\n    trigger: 'a:contains(\"Retry\")'\n}];\n\nvar lastSteps = [{\n    trigger: 'h1:contains(\"Thank you!\")',\n    run: function () {\n        if ($('a:contains(\"Retry\")').length === 0) {\n            $('h1:contains(\"Thank you!\")').addClass('tour_success');\n        }\n    }\n}, {\n    trigger: 'h1.tour_success',\n    isCheck: true,\n}];\n\nregistry.category(\"web_tour.tours\").add('test_certification_failure', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac',\n    steps: () => [].concat(patch, failSteps, retrySteps, failSteps, lastSteps) });\n", "/** @odoo-module **/\n\n/**\n * Speed up fade-in fade-out to avoid useless delay in tests.\n */\nfunction patchSurveyWidget() {\n    const SurveyFormWidget = odoo.loader.modules.get('@survey/js/survey_form')[Symbol.for('default')]\n    SurveyFormWidget.include({\n        _submitForm: function () {\n            this.fadeInOutDelay = 0;\n            return this._super.apply(this, arguments);\n        }\n    });\n}\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('test_certification_success', {\n    test: true,\n    url: '/survey/start/4ead4bc8-b8f2-4760-a682-1fde8daaaaac',\n    steps: () => [{\n        content: \"Patching Survey Widget\",\n        trigger: 'body',\n        run: function(){\n            patchSurveyWidget();\n        }\n    }, { // Page-1\n        content: \"Clicking on Start Certification\",\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Certification\")',\n    }, { // Question: Do we sell Acoustic Bloc Screens?\n        content: \"Selecting answer 'Yes'\",\n        trigger: 'div.js_question-wrapper:contains(\"Do we sell Acoustic Bloc Screens\") label:contains(\"Yes\")',\n    }, { // Question: Select all the existing products\n        content: \"Ticking answer 'Chair floor protection'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Chair floor protection\")'\n    }, {\n        content: \"Ticking answer 'Drawer'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Drawer\")'\n    }, {\n        content: \"Ticking answer 'Conference chair'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the existing products\") label:contains(\"Conference chair\")'\n    }, { // Question: Select all the available customizations for our Customizable Desk\n        content: \"Ticking answer 'Color'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Color\")'\n    }, {\n        content: \"Ticking answer 'Legs'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the available customizations for our Customizable Desk\") label:contains(\"Legs\")'\n    }, { // Question: How many versions of the Corner Desk do we have?\n        content: \"Selecting answer '2'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many versions of the Corner Desk do we have\") label:contains(\"2\")',\n    }, { // Question: Do you think we have missing products in our catalog? (not rated)\n        content: \"Missing products\",\n        trigger: 'div.js_question-wrapper:contains(\"Do you think we have missing products in our catalog\") textarea',\n        run: \"text I think we should make more versions of the customizable desk, it's such an amazing product!\",\n    }, { // Page-2 Question: How much do we sell our Cable Management Box?\n        content: \"Selecting answer '$80' (wrong one)\",\n        trigger: 'div.js_question-wrapper:contains(\"How much do we sell our Cable Management Box\") label:contains(\"$80\")',\n    }, { // Question: Select all the products that sell for $100 or more\n        content: \"Ticking answer 'Corner Desk Right Sit'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Corner Desk Right Sit\")'\n    }, {\n        content: \"Ticking answer 'Desk Combination'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Desk Combination\")'\n    }, {\n        content: \"Ticking answer 'Large Desk'\",\n        trigger: 'div.js_question-wrapper:contains(\"Select all the products that sell for $100 or more\") label:contains(\"Large Desk\")'\n    }, { // Question: What do you think about our prices (not rated)?\n        content: \"Selecting answer 'Underpriced'\",\n        trigger: 'div.js_question-wrapper:contains(\"What do you think about our prices\") label:contains(\"Underpriced\")',\n    }, { // Page-3 Question: How many days is our money-back guarantee?\n        content: \"Inputting answer '30'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many days is our money-back guarantee\") input',\n        run: 'text 30'\n    }, { // Question: If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it?\n        content: \"Inputting answer '01/08/2020'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a product on 6 January 2020, what is the latest day we expect to ship it\") input',\n        run: 'text 01/08/2020'\n    }, { // Question: If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire?\n        content: \"Inputting answer '01/07/2021 00:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"If a customer purchases a 1 year warranty on 6 January 2020, when do we expect the warranty to expire\") input',\n        run: 'text 01/07/2021 00:00:01'\n    }, { // Question: What day to you think is best for us to start having an annual sale (not rated)?\n        content: \"Inputting answer '01/01/2021'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day to you think is best for us to start having an annual sale (not rated)\") input',\n        run: 'text 01/01/2021'\n    }, { // Question: What day and time do you think most customers are most likely to call customer service (not rated)?\n        content: \"Inputting answer '01/01/2021 13:00:01'\",\n        trigger: 'div.js_question-wrapper:contains(\"What day and time do you think most customers are most likely to call customer service (not rated)\") input',\n        run: 'text 01/01/2021 13:00:01'\n    }, { // Question: How many chairs do you think we should aim to sell in a year (not rated)?\n        content: \"Inputting answer '1000'\",\n        trigger: 'div.js_question-wrapper:contains(\"How many chairs do you think we should aim to sell in a year (not rated)\") input',\n        run: 'text 1000'\n    }, {\n        content: \"Finish Survey\",\n        trigger: 'button[type=\"submit\"]',\n    }, {\n        content: \"Thank you\",\n        trigger: 'h1:contains(\"Thank you!\")',\n    }, {\n        content: \"test passed\",\n        trigger: 'div:contains(\"Congratulations, you have passed the test!\")',\n        isCheck: true,\n    }\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('test_survey', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae',\n    steps: () => [\n    // Page-1\n    {\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live\") input',\n        run: 'text Mordor-les-bains',\n    }, {\n        content: 'Answer Where do you live',\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth\") input',\n        run: 'text 05/05/1980',\n    }, {\n        content: 'Answer How frequently do you buy products online',\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online\") label:contains(\"Once a month\")',\n    }, {\n        content: 'Answer How many times did you order products on our website',\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website\") input',\n        run: 'text 12',\n    }, {\n        content: 'Submit and go to Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    {\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text This is great. Really.',\n    }, {\n        content: 'Click Submit and finish the survey',\n        trigger: 'button[value=\"finish\"]',\n    },\n    // Final page\n    {\n        content: 'Thank you',\n        trigger: 'h1:contains(\"Thank you!\")',\n        isCheck: true,\n    }\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { TourError } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('test_survey_chained_conditional_questions', {\n    test: true,\n    url: '/survey/start/3cfadce3-3f7e-41da-920d-10fa0eb19527',\n    steps: () => [\n    {\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Answer Q1 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Answer Q2 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 1\")',\n        extra_trigger: 'div.js_question-wrapper:contains(\"Q4\")',\n    }, {\n        content: 'Answer Q3 with Answer 1',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Answer Q1 with Answer 3',  // This should hide Q2 and Q4 but not Q3.\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 3\")',\n    }, {\n        content: 'Check that Q2 was hidden',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\");\n            expectHiddenQuestion(\"Q4\");\n        },\n    }, {\n        content: 'Answer Q3 with Answer 2',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Answer Q1 with Answer 2',  // This should hide all other questions.\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Check that only question 1 is now visible',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\", \"Q2's trigger is gone.\");\n            expectHiddenQuestion(\"Q3\", \"No reason to show it now.\");\n            expectHiddenQuestion(\"Q4\", \"No reason to show it now.\");\n        },\n    }, {\n        content: 'Answer Q1 with Answer 3',  // This shows Q3.\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 3\")',\n    }, {\n        content: 'Check that questions Q2 and Q4 are hidden',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\", \"Q2 should stay hidden.\");\n            expectHiddenQuestion(\"Q4\", \"Q4 should stay hidden.\");\n        },\n    }, {\n        content: 'Answer Q3 with Answer 2',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Answer Q1 with Answer 2',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Check that only question 1 is now the only one visible again',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        run : () => {\n            expectHiddenQuestion(\"Q2\", \"Q2's trigger is gone, again.\");\n            expectHiddenQuestion(\"Q3\", \"As Q2's gone, so should this one.\");\n            expectHiddenQuestion(\"Q4\", \"No reason to show it now.\");\n        },\n    }, {\n        content: 'Click Submit and finish the survey',\n        trigger: 'button[value=\"finish\"]',\n    },\n    // Final page\n    {\n        content: 'Thank you',\n        trigger: 'h1:contains(\"Thank you!\")',\n        isCheck: true,\n    }\n\n]});\n\nexport function expectHiddenQuestion (questionTitle, msg){\n    if ($(`div.js_question-wrapper.d-none:contains('${questionTitle}')`).length !== 1) {\n        throw new TourError(msg);\n    }\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { expectHiddenQuestion } from \"@survey/../tests/tours/survey_chained_conditional_questions\";\n\nregistry.category(\"web_tour.tours\").add('test_survey_conditional_question_on_different_page', {\n    test: true,\n    url: '/survey/start/1cb935bd-2399-4ed1-9e10-c649318fb4dc',\n    steps: () => [\n        {\n            content: 'Click on Start',\n            trigger: 'button.btn:contains(\"Start\")',\n        }, {\n            content: 'Answer Q1 with Answer 1',\n            trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 1\")',\n        }, {\n            content: 'Go to next page',\n            trigger: 'button[value=\"next\"]',\n        }, {\n            content: 'Check that Q3 is visible',\n            trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n            isCheck: true,\n        }, {\n            content: 'Answer Q2 with Answer 2',\n            trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 2\")',\n        }, {\n            content: 'Check that Q3 is still visible',\n            trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n            isCheck: true,\n        }, {\n            content: 'Go back',\n            trigger: 'button[value=\"previous\"]',\n        }, {\n            content: 'Answer Q1 with Answer 2',\n            trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n        }, {\n            content: 'Go to next page',\n            trigger: 'button[value=\"next\"]',\n        }, {\n            content: 'Check that Q3 is hidden',\n            trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n            run : () => expectHiddenQuestion(\"Q3\", \"Q3 should be hidden as q1_a1 trigger is not selected anymore\"),\n        }, {\n            content: 'Answer Q2 with Answer 1',\n            trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 1\")',\n        }, {\n            content: 'Check that Q3 is now visible again',\n            trigger: 'div.js_question-wrapper:contains(\"Q3\")',\n            isCheck: true,\n        }\n    ],\n});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('survey_tour_test_survey_form_triggers', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: 'Go to Survey',\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n    }, {\n        content: \"Create a new survey\",\n        trigger: \".o-kanban-button-new\",\n    }, {\n        content: \"Set the Survey's title\",\n        trigger: \".o_field_widget[name=title] textarea\",\n        run: \"text Test survey\",\n    }, {\n        content: \"Add a first question\",\n        trigger: \"td.o_field_x2many_list_row_add a\",\n    }, {\n        content: \"Set the first question's title\",\n        trigger: \".modal-content .o_field_widget[name=title] input\",\n        run: \"text Question 1\",\n    },\n    ...addTwoAnswers(),\n    ...saveAndNew(),\n    {\n        content: \"Set the second question's title\",\n        trigger: \".o_field_widget[name=title] input\",\n        run: \"text Question 2\",\n        in_modal: true,\n    },\n    ...addTwoAnswers(),\n    ...changeTab(\"options\"),\n    {\n        content: \"Set a trigger for the first question\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Set the first question's first answer as trigger\",\n        trigger: 'ul.ui-autocomplete a:contains(\"Question 1 : Answer A\")',\n        run: 'click',\n        in_modal: true,\n    },\n    ...changeTab(\"answers\"),\n    ...saveAndNew(),\n    {\n        content: \"Set the third question's title\",\n        trigger: \".o_field_widget[name=title] input\",\n        run: \"text Question 3\",\n        in_modal: true,\n    },\n    ...addTwoAnswers(),\n    ...changeTab(\"options\"),\n    {\n        content: \"Set a trigger for the second question\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Set the second question's second answer as trigger\",\n        trigger: 'ul.ui-autocomplete a:contains(\"Question 2 : Answer B\")',\n        run: 'click',\n        in_modal: true,\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 2 has 'normal' trigger icon\",\n        trigger: \"tr:contains('Question 2') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Check that Question 3 has 'normal' trigger icon\",\n        trigger: \"tr:contains('Question 3') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Move Question 3 above its trigger (Question 2)\",\n        trigger: \"tr.o_data_row:nth-child(3) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(2)\",\n    }, {\n        content: \"Check that Question 3 has 'warning' trigger icon\",\n        trigger: \"tr:contains('Question 3') button i.fa-exclamation-triangle\",\n        isCheck: true,\n    }, {\n        content: \"Open that question to check the server's misplacement evaluation agrees\",\n        trigger: \"tr.o_data_row td:contains('Question 3')\",\n        run: \"click\",\n    }, {\n        content: \"Check that an alert is shown\",\n        trigger: \".o_form_sheet_bg div:first-child.alert-warning:contains('positioned before some or all of its triggers')\",\n        in_modal: true,\n    },\n    ...changeTab(\"options\"),\n    {\n        content: \"Remove invalid trigger\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] span:contains('Question 2') a.o_delete\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Check that the alert is gone\",\n        trigger: `.o_form_sheet_bg div:first-child:not(.alert-warning).o_form_sheet`,\n        in_modal: true,\n        isCheck: true,\n    }, {\n        content: \"Choose a new valid trigger\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Set the first question's second answer as trigger, then\",\n        trigger: 'ul.ui-autocomplete a:contains(\"Question 1 : Answer B\")',\n        run: 'click',\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 3 has its 'normal' trigger icon back\",\n        trigger: \"tr:contains('Question 3') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Move Question 3 back below Question 2\",\n        trigger: \"tr.o_data_row:nth-child(2) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(3)\",\n    }, {\n        content: \"Open that question again\",\n        trigger: \"tr.o_data_row td:contains('Question 3')\",\n        run: \"click\",\n    },\n    ...changeTab(\"options\"),\n    {\n        content: \"Add a second trigger to confirm we can now use Question 2 again\",\n        trigger: \".modal-content .o_field_widget[name=triggering_answer_ids] input\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Add the second question's second answer as trigger, then\",\n        trigger: '.modal-content ul.ui-autocomplete a:contains(\"Question 2 : Answer B\")',\n        run: \"click\",\n    },\n    ...stepUtils.saveForm(),\n    // Move question 1 below question 3,\n    {\n        content: \"Move Question 1 back below Question 3\",\n        trigger: \"tr.o_data_row:nth-child(1) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(3)\",\n    }, {\n        content: \"Check that Question 3 has 'warning' trigger icon\",\n        trigger: \"tr:contains('Question 3') button i.fa-exclamation-triangle\",\n        isCheck: true,\n    }, {\n        content: \"Open that question again\",\n        trigger: \"tr.o_data_row td:contains('Question 3')\",\n        run: \"click\",\n    }, {\n        content: \"Check that an alert is shown also when only one trigger is misplaced\",\n        trigger: \".o_form_sheet_bg div:first-child.alert-warning:contains('positioned before some or all of its triggers')\",\n        in_modal: true,\n    },\n    ...changeTab(\"options\"),\n    {\n        content: \"Remove temporarily used trigger\",\n        trigger: \".o_field_widget[name=triggering_answer_ids] span:contains('Question 1') a.o_delete\",\n        run: \"click\",\n        in_modal: true,\n    }, {\n        content: \"Check that the alert is gone in this case too\",\n        trigger: `.o_form_sheet_bg div:first-child:not(.alert-warning).o_form_sheet`,\n        in_modal: true,\n        isCheck: true,\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 3 has its 'normal' trigger icon back\",\n        trigger: \"tr:contains('Question 3') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Move Question 1 back above Question 2\",\n        trigger: \"tr.o_data_row:nth-child(3) td[name=sequence]\",\n        run: \"drag_and_drop_native div[name=question_and_page_ids] table tbody tr:nth-child(1)\",\n    },\n    // Deleting trigger answers or whole question gracefully remove the trigger automatically\n    {\n        content: \"Open Question 2 again\",\n        trigger: \"tr.o_data_row td:contains('Question 2')\",\n        run: \"click\",\n    }, {\n        content: \"Delete Answer B\",\n        trigger: \"div[name=suggested_answer_ids] tr:contains('Answer B') button[name=delete]\",\n    },\n    ...stepUtils.saveForm(),\n    {\n        content: \"Check that Question 3 no longer has a trigger icon\",\n        trigger: \"div[name=question_and_page_ids] tr:contains('Question 3') div.o_widget_survey_question_trigger:not(:has(button))\",\n        allowInvisible: true,\n        isCheck: true,\n    }, {\n        content: \"Check that Question 2 however still has a trigger icon\",\n        trigger: \"tr:contains('Question 2') button i.fa-code-fork\",\n        isCheck: true,\n    }, {\n        content: \"Delete Question 1\",\n        trigger: \"tr:contains('Question 1') button[name=delete]\",\n        run: \"click\",\n    }, {\n        content: \"Check that now Question 2 too does no longer have a trigger icon\",\n        trigger: \"tr:contains('Question 2') div.o_widget_survey_question_trigger:not(:has(button))\",\n        allowInvisible: true,\n        isCheck: true,\n    }, {\n        content: 'Go back to Kanban View',\n        trigger: '[data-menu-xmlid=\"survey.menu_survey_form\"]',\n    }, {\n        content: \"Check that we arrived on the kanban view\",\n        trigger: \".o-kanban-button-new\",\n        isCheck: true,\n    }\n]});\n\nfunction addTwoAnswers() {\n    return [\n        {\n            content: \"Add the first answer\",\n            trigger: \"div[name=suggested_answer_ids] .o_field_x2many_list_row_add a\",\n            in_modal: true,\n        }, {\n            trigger: 'tr.o_selected_row div[name=value] input',\n            run: 'text Answer A',\n            in_modal: true,\n        }, {\n            content: \"Add the second answer\",\n            trigger: \"div[name=suggested_answer_ids] .o_field_x2many_list_row_add a\",\n            in_modal: true,\n        }, {\n            trigger: 'tr:nth-child(2).o_selected_row div[name=value] input',\n            run: 'text Answer B',\n            in_modal: true,\n        }\n    ];\n}\n\nfunction saveAndNew() {\n    return [\n        {\n            content: \"Click Save & New\",\n            trigger: \"button.o_form_button_save_new\",\n            in_modal: true,\n        }, {\n            content: \"Wait for the dialog to render new question form\",\n            // suggested_answer_ids required even though in_modal is specified...\n            trigger: \"div[name=suggested_answer_ids] .o_list_table tbody tr:first-child:not(.o_data_row)\", // empty answers list\n            in_modal: true,\n            isCheck: true,\n        }\n    ];\n}\n\n\nfunction changeTab(tabName) {\n    // Currently, .modal-content is required even though \"in_modal\"\n    return [\n        {\n            content: `Go to ${tabName} tab`,\n            trigger: `.modal-content a[name=${tabName}].nav-link`,\n            in_modal: true\n        }, {\n            content: `Wait for tab ${tabName} tab`,\n            trigger: `.modal-content a[name=${tabName}].nav-link.active`,\n            in_modal: true,\n            isCheck: true,\n        }\n    ];\n}\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\nregistry.category(\"web_tour.tours\").add('test_survey_prefill', {\n    test: true,\n    url: '/survey/start/b137640d-14d4-4748-9ef6-344caaaaaae',\n    steps: () => [{      // Page-1\n        trigger: 'button.btn.btn-primary.btn-lg:contains(\"Start Survey\")',\n    }, { // Question: Where do you live?\n        trigger: 'div.js_question-wrapper:contains(\"Where do you live?\") input',\n        run: 'text Grand-Rosiere',\n    }, { // Question: When is your date of birth?\n        trigger: 'div.js_question-wrapper:contains(\"When is your date of birth?\") input',\n        run: 'text 05/05/1980',\n    }, { // Question: How frequently do you buy products online?\n        trigger: 'div.js_question-wrapper:contains(\"How frequently do you buy products online?\") label:contains(\"Once a week\")',\n    }, { // Question: How many times did you order products on our website?\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input',\n        run: 'text 42',\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    },\n    // Page-2\n    { // Question: Which of the following words would you use to describe our products?\n        content: 'Answer Which of the following words would you use to describe our products (High Quality)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\")',\n    }, {\n        content: 'Answer Which of the following words would you use to describe our products (Good value for money)',\n        trigger: 'div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\")',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The new layout and design is fresh and up-to-date)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") td:first',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (It is easy to find the product that I want)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The tool to compare the products is useful to make a choice)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") td:eq(3)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (The checkout process is clear and secure)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") td:eq(2)',\n    }, {\n        content: 'Answer What do your think about our new eCommerce (I have added products to my wishlist)',\n        trigger: 'div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") td:last',\n    }, {\n        content: 'Answer Do you have any other comments, questions, or concerns',\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: 'text Is the prefill working?',\n    }, {\n        // Go back to previous page\n        content: 'Click on the previous page name in the breadcrumb',\n        trigger: 'ol.breadcrumb a:first',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input');\n            if ($inputQ3.val() === '42.0') {\n                $('.o_survey_title').addClass('prefilled');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled',\n        run: function () {\n            // check that all the answers are prefilled in Page 1\n            var $inputQ1 = $('div.js_question-wrapper:contains(\"Where do you live?\") input');\n            if ($inputQ1.val() !== 'Grand-Rosiere') {\n                return;\n            }\n\n            var $inputQ2 = $('div.js_question-wrapper:contains(\"When is your date of birth?\") input');\n            if ($inputQ2.val() !== '05/05/1980') {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"How frequently do you buy products online?\") label:contains(\"Once a week\") input');\n            if (!$inputQ3.is(':checked')) {\n                return;\n            }\n\n            var $inputQ4 = $('div.js_question-wrapper:contains(\"How many times did you order products on our website?\") input');\n            if ($inputQ4.val() !== '42.0') {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success'\n    }, {\n        content: 'Click on Next Page',\n        trigger: 'button[value=\"next\"]',\n    }, {\n        trigger: 'div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea',\n        run: function () {\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() === \"Is the prefill working?\") {\n                $('.o_survey_title').addClass('prefilled2');\n            }\n        }\n    }, {\n        trigger: '.o_survey_title.prefilled2',\n        run: function () {\n            // check that all the answers are prefilled in Page 2\n            var $input1Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"High quality\") input');\n            if (!$input1Q1.is(':checked')) {\n                return;\n            }\n\n            var $input2Q1 = $('div.js_question-wrapper:contains(\"Which of the following words would you use to describe our products\") label:contains(\"Good value for money\") input');\n            if (!$input2Q1.is(':checked')) {\n                return;\n            }\n\n            var $input1Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The new layout and design is fresh and up-to-date\") input:first');\n            if (!$input1Q2.is(':checked')) {\n                return;\n            }\n\n            var $input2Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"It is easy to find the product that I want\") input:eq(2)');\n            if (!$input2Q2.is(':checked')) {\n                return;\n            }\n\n            var $input3Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The tool to compare the products is useful to make a choice\") input:eq(3)');\n            if (!$input3Q2.is(':checked')) {\n                return;\n            }\n\n            var $input4Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"The checkout process is clear and secure\") input:eq(2)');\n            if (!$input4Q2.is(':checked')) {\n                return;\n            }\n\n            var $input5Q2 = $('div.js_question-wrapper:contains(\"What do your think about our new eCommerce\") tr:contains(\"I have added products to my wishlist\") input:last');\n            if (!$input5Q2.is(':checked')) {\n                return;\n            }\n\n            var $inputQ3 = $('div.js_question-wrapper:contains(\"Do you have any other comments, questions, or concerns\") textarea');\n            if ($inputQ3.val() !== \"Is the prefill working?\") {\n                return;\n            }\n\n            $('.o_survey_title').addClass('tour_success_2');\n        }\n    }, {\n        trigger: '.o_survey_title.tour_success_2',\n        isCheck: true,\n    }\n]});\n", "/** @odoo-module **/\n\nimport { registry } from '@web/core/registry';\n\nregistry.category('web_tour.tours').add('test_survey_roaming_mandatory_questions', {\n    test: true,\n    url: '/survey/start/853ebb30-40f2-43bf-a95a-bbf0e367a365',\n    steps: () => [{\n        content: 'Click on Start',\n        trigger: 'button.btn:contains(\"Start\")',\n    }, {\n        content: 'Skip question Q1',\n        trigger: 'button.btn:contains(\"Continue\")',\n    }, {\n        content: 'Skip question Q2',\n        extra_trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n        trigger: 'button.btn:contains(\"Continue\")',\n    }, {\n        content: 'Check if Q3 button is Submit',\n        trigger: 'button.btn:contains(\"Submit\")',\n        isCheck: true,\n    }, {\n        content: 'Go back to Q2',\n        trigger: 'button.btn[value=\"previous\"]',\n    }, {\n        content: 'Check if the alert box is present',\n        trigger: 'div.o_survey_question_error span',\n        isCheck: true,\n    }, {\n        content: 'Skip question Q2 again',\n        trigger: 'button.btn:contains(\"Continue\")',\n    }, {\n        content: 'Answer Q3',\n        trigger: 'div.js_question-wrapper:contains(\"Q3\") label:contains(\"Answer 1\")',\n    }, {\n        content: 'Click on Submit',\n        trigger: 'button.btn:contains(\"Submit\")',\n    }, {\n        content: 'Check if question is Q1',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        isCheck: true,\n    }, {\n        content: 'Click on \"Next Skipped\" button',\n        trigger: 'button.btn:contains(\"Next Skipped\")',\n    }, {\n        content: 'Check if question is Q2',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n        isCheck: true,\n    }, {\n        content: 'Click on \"Next Skipped\" button',\n        trigger: 'button.btn:contains(\"Next Skipped\")',\n    }, {\n        content: 'Check if question is Q1 again (should loop on skipped questions)',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\")',\n        isCheck: true,\n    }, {\n        content: 'Answer Q1',\n        trigger: 'div.js_question-wrapper:contains(\"Q1\") label:contains(\"Answer 2\")',\n    }, {\n        content: 'Check if the visible question is the skipped question Q2',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\")',\n        isCheck: true,\n    }, {\n        content: 'Answer Q2',\n        trigger: 'div.js_question-wrapper:contains(\"Q2\") label:contains(\"Answer 3\")',\n    }, {\n        content: 'Click on Submit',\n        trigger: 'button.btn:contains(\"Submit\")',\n    }, {\n        content: 'Check if the survey is done',\n        trigger: 'div.o_survey_finished h1:contains(\"Thank you!\")',\n        isCheck: true,\n    }],\n});\n", "/** @odoo-module **/\n\nfunction patchSessionManager() {\n    const { DateTime } = luxon;\n    const SessionManager = odoo.loader.modules.get('@survey/js/survey_session_manage')[Symbol.for('default')]\n    /**\n     * Small override for test/tour purposes.\n     */\n    SessionManager.include({\n        /**\n         * - Trigger the fetch of answer results immediately at the start.\n         * (Instead of wasting 2 seconds waiting after the start).\n         * - Set the fade in/out time to 1 ms to avoid unnecessary delays.\n         * - Avoid refreshing the results every 2 seconds\n         */\n        start: function () {\n            var self = this;\n            return this._super.apply(this, arguments)\n                .then(this._refreshResults.bind(this))\n                .then(function () {\n                    self.fadeInOutTime = 1;\n                    clearInterval(self.resultsRefreshInterval);\n                });\n        },\n\n        /**\n         * Force the timer to \"now\" to avoid introducing potential test breaking\n         * timely variables (rpc/small server delay/...) if the start_question_time flickers.\n         */\n        _startTimer: function () {\n            this.$el.data('timer', DateTime.utc());\n            return this._super.apply(this, arguments);\n        }\n    })\n};\n\n\n\nexport default patchSessionManager;\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { zip } from \"@web/core/utils/arrays\";\nimport { TourError } from \"@web_tour/tour_service/tour_utils\";\nimport { accessSurveysteps } from \"./survey_tour_session_tools\";\n\nlet rootWidget = null;\n\n/**\n * Since the chart is rendered using SVG, we can't use jQuery triggers to check if everything\n * is correctly rendered.\n * This helper method returns the chart data (Chartjs framework specific) in the following structure:\n * [{ value, backgroundColor, labelColor }]\n */\nconst getChartData = () => {\n    const chartData = [];\n    const surveyManagePublicWidget = rootWidget.publicWidgets.find((widget) => {\n        return widget.$el.hasClass('o_survey_session_manage');\n    });\n\n    if (!surveyManagePublicWidget) {\n        return chartData;\n    }\n\n    surveyManagePublicWidget.resultsChart.chart.data.datasets[0].data.forEach((value, index)=> {\n        chartData.push({\n            value: value,\n            backgroundColor: surveyManagePublicWidget.resultsChart._getBackgroundColor({dataIndex: index}),\n            labelColor: surveyManagePublicWidget.resultsChart._getLabelColor({dataIndex: index}),\n        });\n    });\n\n    return chartData;\n};\n\nconst nextScreen = () => {\n    const e = $.Event('keydown');\n    e.key = \"ArrowRight\";\n    $(document).trigger(e);\n};\n\nconst previousScreen = () => {\n    const e = $.Event('keydown');\n    e.key = \"ArrowLeft\";\n    $(document).trigger(e);\n};\n\nconst REGULAR_ANSWER_COLOR = '#212529';\nconst CORRECT_ANSWER_COLOR = '#2CBB70';\nconst WRONG_ANSWER_COLOR = '#D9534F';\n\nconst INDEX_TO_ORDINAL = {\n    0: 'First',\n    1: 'Second',\n    2: 'Third',\n    3: 'Fourth',\n};\n\n/**\n * Check answer appearance (opacity and color).\n *\n * @param {string} answerLabel\n * @param {{backgroundColor: string, labelColor: string, value?: number}} shownAnswer\n * @param {\"correct\"|\"incorrect\"|\"regular\"} expectedAnswerType\n */\nconst checkAnswerAppearance = (answerLabel, shownAnswer, expectedAnswerType) => {\n    if (expectedAnswerType === 'correct') {\n        if (!shownAnswer.backgroundColor.includes('0.8') || shownAnswer.labelColor !== CORRECT_ANSWER_COLOR) {\n            throw new TourError(`${answerLabel} should be shown as \"correct\"!`);\n        }\n    } else if (expectedAnswerType === 'incorrect') {\n        if (!shownAnswer.backgroundColor.includes('0.2') || shownAnswer.labelColor !== WRONG_ANSWER_COLOR) {\n            throw new TourError(`${answerLabel} should be shown as \"incorrect\"!`);\n        }\n    } else if (expectedAnswerType === 'regular') {\n        if (!shownAnswer.backgroundColor.includes('0.8') || shownAnswer.labelColor !== REGULAR_ANSWER_COLOR) {\n            throw new TourError(`${answerLabel} should not be shown as \"correct\" or \"incorrect\"!`);\n        }\n    } else {\n        throw new Error(`Unsupported answer type.`);\n    }\n};\n\nconst checkAnswerValue = (answerLabel, shownAnswerValue, expectedAnswerValue) => {\n    if (shownAnswerValue !== expectedAnswerValue) {\n        throw new TourError(expectedAnswerValue === 0 ?\n            `${answerLabel} should not be picked by any user!` :\n            `${answerLabel} should be picked by ${expectedAnswerValue} users!`\n        );\n    }\n};\n\n/**\n * Check the answers count, values and appearance.\n *\n * @param {{value: number, backgroundColor: string, color: string}[]} chartData Data returned by `getChartData`.\n * @param {{value: number, type: \"correct\" | \"incorrect\" | \"regular\"}[]} expectedAnswersData\n */\nconst checkAnswers = (chartData, expectedAnswersData) => {\n    checkAnswersCount(chartData, expectedAnswersData.length);\n\n    zip(chartData, expectedAnswersData).forEach(([shownAnswerData, expectedAnswerData], answerIndex) => {\n        const answerLabel = `${INDEX_TO_ORDINAL[answerIndex]} answer`;\n        checkAnswerValue(answerLabel, shownAnswerData.value, expectedAnswerData.value);\n        checkAnswerAppearance(answerLabel, shownAnswerData, expectedAnswerData.type);\n    });\n};\n\nconst checkAnswersAllZeros = (chartData) => {\n    if (chartData.find(answerData => answerData !== 0).length) {\n        throw new TourError('Chart data should all be 0!');\n    }\n};\n\nconst checkAnswersCount = (chartData, expectedCount) => {\n    if (chartData.length !== expectedCount) {\n        throw new TourError(`Chart data should contain ${expectedCount} records!`);\n    }\n};\n\n/**\n * Tour that will test the whole survey session from the host point of view.\n *\n * Break down of the main points:\n * - Open the 'session manager' (the session was already created by a previous tour)\n * - Display the nickname question, and move to the next one (as answers are not displayed)\n * - Check answers are correctly displayed for the 3 'simple' question types (text, date, datetime)\n * - Move to the choice question and check that answers are displayed\n *   (The check is rather complex, see 'getChartData' for details)\n * - If everything is correctly displayed, move to the next question\n * - On the scored choice question, check that the screens are correctly chained:\n *   no results displayed -> results displayed -> correct/incorrect answers -> leaderboard\n * - On the scored + timed multiple choice question, check the same than previous question,\n *   except that the results are supposed to be displayed automatically when the question timer runs out\n * - Test the 'back' behavior and check that screens are reversed correctly\n * - Check that our final leaderboard is correct based on attendees answers\n * - Close the survey session\n */\nregistry.category(\"web_tour.tours\").add('test_survey_session_manage_tour', {\n    url: \"/web\",\n    test: true,\n    steps: () => [].concat(accessSurveysteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    isCheck: true // check nickname question is displayed\n}, {\n    trigger: 'body',\n    run: async () => { rootWidget = await odoo.loader.modules.get('root.widget'); }\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    isCheck: true // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    isCheck: true // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    isCheck: true // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    isCheck: true // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: previousScreen\n}, {\n    trigger: 'h1:contains(\"Text Question\")',\n    isCheck: true // check text question is displayed\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"3 / 3\")',\n    isCheck: true // check we have 3 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 1 is the best\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 2 rulez\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"Attendee 3 will crush you\")',\n    isCheck: true // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    isCheck: true // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010\")',\n    isCheck: true // check attendee 1 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: '.o_survey_session_progress_small:contains(\"2 / 3\")',\n    isCheck: true // check we have 2 answers\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"10/10/2010 10:00:00\")',\n    isCheck: true // check attendee 2 answer is displayed\n}, {\n    trigger: '.o_survey_session_text_answer_container:contains(\"11/11/2011 15:55:55\")',\n    isCheck: true // check attendee 3 answer is displayed\n}, {\n    trigger: 'h1',\n    run: nextScreen\n}, {\n    trigger: 'h1:contains(\"Regular Simple Choice\")',\n    // Wait for answers' data to be fetched (see commit message).\n    extra_trigger: '.o_survey_session_progress_small[style*=\"width: 100%\"]',\n    run: () => {\n        checkAnswers(getChartData(), [\n            {value: 2, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n            {value: 0, type: \"regular\"},\n        ]);\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    run: () => {\n        const chartData = getChartData();\n        checkAnswersCount(chartData, 4);\n        checkAnswersAllZeros(chartData);\n\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    // Wait for progressbar to be updated (\"late\" enough DOM change after onNext() is triggered).\n    extra_trigger: '.o_survey_session_progress_small[style*=\"width: 100%\"]',\n    run: () => {\n        checkAnswers(getChartData(), [\n            {value: 1, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n            {value: 0, type: \"regular\"},\n        ]);\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Scored Simple Choice\")',\n    // Wait for Button to be updated (\"late\" enough DOM change after onNext() is triggered).\n    extra_trigger: '.o_survey_session_navigation_next_label:contains(\"Show Leaderboard\")',\n    run: () => {\n        checkAnswers(getChartData(), [\n            {value: 1, type: \"correct\"},\n            {value: 1, type: \"incorrect\"},\n            {value: 1, type: \"incorrect\"},\n            {value: 0, type: \"incorrect\"},\n        ]);\n        nextScreen();\n        nextScreen();\n    }\n}, {\n    trigger: 'h1:contains(\"Timed Scored Multiple Choice\")',\n    run: ()=> {\n        const chartData = getChartData();\n        checkAnswersCount(chartData, 3);\n        checkAnswersAllZeros(chartData);\n\n        // after 1 second, results are displayed automatically because question timer runs out\n        // we add 1 extra second because of the way the timer works:\n        // it only triggers the time_up event 1 second AFTER the delay is passed\n        setTimeout(() => {\n            checkAnswers(getChartData(), [\n                {value: 2, type: \"regular\"},\n                {value: 2, type: \"regular\"},\n                {value: 1, type: \"regular\"},\n            ]);\n\n            nextScreen();\n            checkAnswers(getChartData(), [\n                {value: 2, type: \"correct\"},\n                {value: 2, type: \"correct\"},\n                {value: 1, type: \"incorrect\"},\n            ]);\n\n            nextScreen();\n        }, 2100);\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    isCheck: true // Final Leaderboard is displayed\n}, {\n    trigger: 'h1',\n    run: () => {\n        // previous screen testing\n        previousScreen();\n        checkAnswers(getChartData(), [\n            {value: 2, type: \"correct\"},\n            {value: 2, type: \"correct\"},\n            {value: 1, type: \"incorrect\"},\n        ]);\n\n        previousScreen();\n        checkAnswers(getChartData(), [\n            {value: 2, type: \"regular\"},\n            {value: 2, type: \"regular\"},\n            {value: 1, type: \"regular\"},\n        ]);\n\n        previousScreen();\n        checkAnswersAllZeros(getChartData());\n\n        // Now we go forward to the \"Final Leaderboard\" again (3 times)\n        for (let i = 0; i < 3; i++) {\n            nextScreen();\n        }\n    }\n}, {\n    trigger: 'h1:contains(\"Final Leaderboard\")',\n    isCheck: true // Final Leaderboard is displayed\n}, {\n    trigger: '.o_survey_session_close:has(\"i.fa-close\")'\n}, {\n    trigger: 'button[name=\"action_start_session\"]',\n    isCheck: true // check that we can start another session\n}])});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { accessSurveysteps } from \"./survey_tour_session_tools\";\n\n/**\n * Small tour that will open the session manager and check\n * that the attendees are accounted for, then start the session\n * by going to the first question.\n */\nregistry.category(\"web_tour.tours\").add('test_survey_session_start_tour', {\n    url: \"/web\",\n    test: true,\n    steps: () => [].concat(accessSurveysteps, [{\n    trigger: 'button[name=\"action_open_session_manager\"]',\n}, {\n    trigger: '.o_survey_session_attendees_count:contains(\"3\")',\n    run: function () {\n        /* We want to test 2 things: (1) that the attendees count is right\n           on the rendered xml template and (2) that the attendees count\n           gets correctly updated every 2 seconds via JS.\n\n           This step did verify the one on the xml template, we now change\n           the value back to 0 to test that in 2 seconds it'll be updated\n           by JS.\n\n           The \"waitrpc\" class just serves to rule out concurrency issues\n           between this step's run and the next step's trigger. */\n        const elem = document.querySelector('.o_survey_session_attendees_count');\n        elem.classList.add(\"waitrpc\");\n        elem.textContent = '0';\n    }\n}, {\n    trigger: '.o_survey_session_attendees_count.waitrpc:contains(\"3\")',\n    isCheck: true\n}, {\n    trigger: 'h1',\n    run: function () {\n        var e = $.Event('keydown');\n        e.key = \"ArrowRight\";\n        $(document).trigger(e); // start session\n    }\n}, {\n    trigger: 'h1:contains(\"Nickname\")',\n    run: function () {} // check first question is displayed\n}])});\n", "/** @odoo-module **/\n\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\n/**\n * Tool that gathers common steps to every 'survey session' tours.\n */\nexport const accessSurveysteps = [\n    stepUtils.showAppsMenuItem(),\n    {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: \"community\",\n    },\n    {\n        trigger: '.o_app[data-menu-xmlid=\"survey.menu_surveys\"]',\n        edition: \"enterprise\",\n    },\n    {\n        trigger: '.oe_kanban_card:contains(\"User Session Survey\")',\n    },\n];\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nregistry.category(\"web_tour.tours\").add('hr_skills_tour', {\n    test: true,\n    url: '/web',\n    steps: () => [\n    stepUtils.showAppsMenuItem(),\n    {\n        content: \"Open Employees app\",\n        trigger: \".o_app[data-menu-xmlid='hr.menu_hr_root']\",\n    },\n    {\n        content: \"Create a new employee\",\n        trigger: \".o-kanban-button-new\",\n    },\n    {\n        content: \"Pick a name\",\n        trigger: \".o_field_widget[name='name'] input\",\n        run: \"text Jony McHallyFace\",\n    },\n    {\n        content: \"Save\",\n        trigger: \".o_form_button_save\",\n    },\n    {\n        content: \"Add a new Resume experience\",\n        trigger: \".o_field_resume_one2many tr.o_resume_group_header button.btn-secondary\",\n    },\n    {\n        content: \"Enter some company name\",\n        trigger: \".modal-body .o_field_widget[name='name'] input\",\n        run: \"text Mamie Rock\",\n    },\n    {\n        content: \"Set start date\",\n        trigger: \".o_field_widget[name='date_start'] input\",\n        run: \"text 12/05/2017\",\n    },\n    {\n        content: \"Give some description\",\n        trigger: \".o_field_widget[name='description'] textarea\",\n        run: \"text Sang some songs and played some music\",\n    },\n    {\n        content: \"Save it\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Edit newly created experience\",\n        trigger: \".o_resume_line_title:contains('Mamie Rock')\",\n        run: \"click\",\n    },\n    {\n        content: \"Change type\",\n        trigger: \".o_field_widget[name='line_type_id'] input\",\n        run: \"text Experience\",\n    },\n    {\n        content: \"Choose experience\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Experience\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save experience change\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Add a new Skill\",\n        trigger: \".o_field_skills_one2many button:contains('Pick a skill from the list')\",\n    },\n    {\n        content: \"Select Music\",\n        trigger: \".o_field_widget[name='skill_type_id'] label:contains('Best Music')\",\n        run: \"click\",\n    },\n    {\n        content: \"Select a song\",\n        trigger: \".o_field_widget[name='skill_id'] input\",\n        run: \"text Fortun\",\n    },\n    {\n        content: \"Choose the song\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Fortunate Son\")',\n        run: \"click\",\n    },\n    {\n        content: \"Select a level\",\n        trigger: \".o_field_widget[name='skill_level_id'] input\",\n        run: \"text Level\",\n    },\n    {\n        content: \"Choose the level\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Level 2\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save new skill\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Check if item is added\",\n        trigger: \".o_data_row td.o_data_cell:contains('Fortunate Son')\",\n        run: () => {},\n    },\n    {\n        content: \"Add a new Skill\",\n        trigger: \".o_field_skills_one2many button:contains('ADD')\",\n    },\n    {\n        content: \"Select a song\", // \"Music\" should be already selected\n        trigger: \".o_field_widget[name='skill_id'] input\",\n        run: \"text Mary\",\n    },\n    {\n        content: \"Choose the song\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Oh Mary\")',\n        run: \"click\",\n    },\n    {\n        content: \"Select a level\",\n        trigger: \".o_field_widget[name='skill_level_id'] input\",\n        run: \"text Level 7\",\n    },\n    {\n        content: \"Choose the level\",\n        trigger: '.ui-autocomplete .ui-menu-item a:contains(\"Level 7\")',\n        run: \"click\",\n    },\n    {\n        content: \"Save new skill\",\n        trigger: \".o_form_button_save\",\n        in_modal: true,\n        run: \"click\",\n    },\n    {\n        content: \"Check if item is added\",\n        trigger: \".o_data_row td.o_data_cell:contains('Oh Mary')\",\n        run: () => {},\n    },\n    ...stepUtils.saveForm(),\n]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\n\n// This tour relies on data created on the Python test.\nregistry.category(\"web_tour.tours\").add('sale_external_optional_products', {\n    test: true,\n    url: '/my/quotes',\n    steps: () => [\n    {\n        content: \"open the test SO\",\n        trigger: 'a:containsExact(\"test\")',\n    },\n    {\n        content: \"add the optional product\",\n        trigger: '.js_add_optional_products',\n    },\n    {\n        content: \"increase the quantity of the optional product by 1\",\n        extra_trigger: 'li a:contains(\"Communication history\")', // Element on the left\n        trigger: '.js_update_line_json:nth(1)',\n    },\n    {\n        content: \"wait for the quantity to be updated\",\n        trigger: 'input.js_quantity:propValue(2.0)',\n        extra_trigger: 'li a:contains(\"Communication history\")',\n        run() {},\n    },\n    {\n        content: \"delete the optional line\",\n        trigger: '.js_update_line_json:nth(2)',\n    },\n    {\n        content: \"wait for line to be deleted and show up again in optional products\",\n        trigger: '.js_add_optional_products',\n        run() {}, // it should not click\n    },\n]});\n", "/* @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\n/**\n * This tour depends on data created by python test in charge of launching it.\n * It is not intended to work when launched from interface. It is needed to test\n * an action (action manager) which is not possible to test with QUnit.\n * @see mail_enterprise/tests/test_discuss_channel_expand.py\n */\nregistry\n    .category(\"web_tour.tours\")\n    .add(\"mail_enterprise/static/tests/tours/discuss_channel_expand_test_tour.js\", {\n        test: true,\n        steps: () => [\n            {\n                content:\n                    \"Click on 'Open Actions Menu' in the chat window header to show expand button\",\n                trigger:\n                    '.o-mail-ChatWindow:contains(\"test-mail-channel-expand-tour\") [title=\"Open Actions Menu\"]',\n            },\n            {\n                content: \"Click on expand button to open channel in Discuss\",\n                trigger:\n                    '.o-mail-ChatWindow:contains(\"test-mail-channel-expand-tour\") [title=\"Open in Discuss\"]',\n            },\n            {\n                content:\n                    \"Check that first message of #test-mail-channel-expand-tour is shown in Discuss app\",\n                trigger:\n                    '.o-mail-Discuss-content .o-mail-Message-body:contains(\"test-message-mail-channel-expand-tour\")',\n                run: () => {},\n            },\n        ],\n    });\n", "/** @odoo-module **/\n\nimport { jsonrpc } from \"@web/core/network/rpc_service\";\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openRoot() {\n    return [{\n        content: \"return to client root to avoid race condition\",\n        trigger: 'body',\n        run() {\n            $('body').addClass('wait');\n            window.location = '/web';\n        }\n    }, {\n        content: \"wait for client reload\",\n        trigger: 'body:not(.wait)',\n        run() {}\n    }];\n}\nfunction openUserProfileAtSecurityTab() {\n    return [{\n        content: 'Open user account menu',\n        trigger: '.o_user_menu .dropdown-toggle',\n        run: 'click',\n    }, {\n        content: \"Open preferences / profile screen\",\n        trigger: '[data-menu=settings]',\n        run: 'click',\n    }, {\n        content: \"Switch to security tab\",\n        trigger: 'a[role=tab]:contains(\"Account Security\")',\n        run: 'click',\n    }];\n}\n\n/**\n * Checks that the TOTP button is in the specified state (true = enabled =\n * can disable, false = disabled = can enable), then closes the profile dialog\n * if it's one (= hr not installed).\n *\n * If no totp state is provided, just checks that the toggle exists.\n */\nfunction closeProfileDialog({content, totp_state}) {\n    let trigger;\n    switch (totp_state) {\n    case true: trigger = 'button[name=action_totp_disable]'; break;\n    case false: trigger = 'button[name=action_totp_enable_wizard]'; break;\n    case undefined: trigger = 'button.o_auth_2fa_btn'; break;\n    default: throw new Error(`Invalid totp state ${totp_state}`)\n    }\n\n    return [{\n        content,\n        trigger,\n        run() {\n            const $modal = this.$anchor.parents('.o_dialog');\n            if ($modal.length) {\n                $modal.find('button[name=preference_cancel]').click()\n            }\n        }\n    }, {\n        trigger: 'body',\n        async run() {\n            while (document.querySelector('.o_dialog')) {\n                await Promise.resolve();\n            }\n            this.$anchor.addClass('dialog-closed');\n        },\n    }, {\n        trigger: 'body.dialog-closed',\n        run() {},\n    }];\n}\n\nregistry.category(\"web_tour.tours\").add('totp_tour_setup', {\n    test: true,\n    url: '/web',\n    steps: () => [...openUserProfileAtSecurityTab(), {\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_enable_wizard]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"When requested to do so\")',\n    run() {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    async run(helpers) {\n        const $secret = this.$anchor.closest('div').find('[name=secret] span:first-child');\n        const $copyBtn = $secret.find('button');\n        $copyBtn.remove();\n        const token = await jsonrpc('/totphook', {\n            secret: $secret.text()\n        });\n        helpers.text(token, '[name=code] input');\n        helpers.click('button.btn-primary:contains(Activate)');\n        $('body').addClass('got-token')\n    }\n}, {\n    content: 'wait for rpc',\n    trigger: 'body.got-token',\n    run() {}\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: true,\n}),\n]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_enabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        // TODO: if tours are ever async-aware the click should get moved out,\n        //       but currently there's no great way to make the tour wait until\n        //       we've retrieved and set the token: `:empty()` is aboutthe text\n        //       content of the HTML element, not the JS value property. We\n        //       could set a class but that's really no better than\n        //       procedurally clicking the button after we've set the input.\n        const token = await jsonrpc('/totphook');\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run() {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_device', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"check remember device box\",\n    trigger: 'label[for=switch-remember]',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    async run(helpers) {\n        const token = await jsonrpc('/totphook')\n        helpers.text(token);\n        helpers.click('button:contains(\"Log in\")');\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run: 'click',\n}, {\n    content: \"click the Log out button\",\n    trigger: '.dropdown-item[data-menu=logout]',\n}, {\n    content: \"check that we're back on the login page or go to it\",\n    trigger: 'input#login, a:contains(Log in)'\n}, {\n    content: \"input login again\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password again',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button again\",\n    trigger: 'button:contains(\"Log in\")',\n},  {\n    content: \"check we're logged in without 2FA\",\n    trigger: \".o_user_menu .dropdown-toggle\",\n    run() {}\n},\n// now go and disable two-factor authentication would be annoying to do in a separate tour\n// because we'd need to login & totp again as HttpCase.authenticate can't\n// succeed w/ totp enabled\n...openUserProfileAtSecurityTab(),\n{\n    content: \"Open totp wizard\",\n    trigger: 'button[name=action_totp_disable]',\n}, {\n    content: \"Check that we have to enter enhanced security mode and input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text demo',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n},\n...openRoot(),\n...openUserProfileAtSecurityTab(),\n...closeProfileDialog({\n    content: \"Check that the button has changed\",\n    totp_state: false\n}),\n]});\n\nregistry.category(\"web_tour.tours\").add('totp_login_disabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text demo',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text demo',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n},\n// normally we'd end the tour here as it's all we care about but there are a\n// bunch of ongoing queries from the loading of the web client which cause\n// issues, so go and open the preferences / profile screen to make sure\n// everything settles down\n...openUserProfileAtSecurityTab(),\n// close the dialog if that makes sense\n...closeProfileDialog({})\n]});\n\nconst columns = {};\nregistry.category(\"web_tour.tours\").add('totp_admin_disables', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), {\n    content: 'Go to settings',\n    trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n}, {\n    content: 'Wait for page',\n    trigger: '.o_menu_brand:contains(\"Settings\")',\n    run() {}\n}, {\n    content: \"Open Users menu\",\n    trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n}, {\n    content: \"Open Users view\",\n    trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n    run(helpers) {\n        // funny story: the users view we're trying to reach, sometimes we're\n        // already there, but if we re-click the next step executes before the\n        // action has the time to re-load, the one after that doesn't, and our\n        // selection get discarded by the action reloading, so here try to\n        // see if we're already on the users action through the breadcrumb and\n        // just close the menu if so\n        const $crumb = $('.breadcrumb');\n        if ($crumb.text().indexOf('Users') === -1) {\n            // on general settings page, click menu\n            helpers.click();\n        } else {\n            // else close menu\n            helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n        }\n    }\n}, {\n    content: \"Find Demo User\",\n    trigger: 'td.o_data_cell:contains(\"demo\")',\n    run(helpers) {\n        const $titles = this.$anchor.closest('table').find('tr:first th');\n        for (let i=0; i<$titles.length; ++i) {\n            columns[$titles[i].getAttribute('data-name')] = i;\n        }\n        const $row = this.$anchor.closest('tr');\n        const sel = $row.find('.o_list_record_selector input[type=checkbox]');\n        helpers.click(sel);\n    }\n}, {\n    content: \"Open Actions menu\",\n    trigger: 'button.dropdown-toggle:contains(\"Action\")'\n}, {\n    content: \"Select totp remover\",\n    trigger: 'span.dropdown-item:contains(Disable two-factor authentication)'\n}, { // enhanced security yo\n    content: \"Check that we have to enter enhanced security mode & input password\",\n    extra_trigger: 'div:contains(\"enter your password\")',\n    trigger: '[name=password] input',\n    run: 'text admin',\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, ...closeProfileDialog({\n    content: \"check that demo user has been de-totp'd\",\n    totp_state: false,\n}),\n]})\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { stepUtils } from \"@web_tour/tour_service/tour_utils\";\n\nfunction openAccountSettingsTab() {\n    return [{\n        content: 'Go to settings',\n        trigger: '[data-menu-xmlid=\"base.menu_administration\"]'\n    }, {\n        content: 'Wait for page',\n        trigger: '.o_menu_brand:contains(\"Settings\")',\n        run: () => {}\n    }, {\n        content: \"Open Users menu\",\n        trigger: '[data-menu-xmlid=\"base.menu_users\"]'\n    }, {\n        content: \"Open Users view\",\n        trigger: '[data-menu-xmlid=\"base.menu_action_res_users\"]',\n        run: function (helpers) {\n            // funny story: the users view we're trying to reach, sometimes we're\n            // already there, but if we re-click the next step executes before the\n            // action has the time to re-load, the one after that doesn't, and our\n            // selection get discarded by the action reloading, so here try to\n            // see if we're already on the users action through the breadcrumb and\n            // just close the menu if so\n            const $crumb = $('.breadcrumb');\n            if ($crumb.text().indexOf('Users') === -1) {\n                // on general settings page, click menu\n                helpers.click();\n            } else {\n                // else close menu\n                helpers.click($('[data-menu-xmlid=\"base.menu_users\"]'));\n            }\n        }\n    }];\n}\n\nregistry.category(\"web_tour.tours\").add('totp_admin_self_invite', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(admin)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that user cannot invite themselves to use 2FA.\",\n    trigger: \"body\",\n    run: function () {\n        const inviteBtn = $('button:contains(Invite to use 2FA)')[0];\n        if (!inviteBtn) {\n            $('body').addClass('CannotInviteYourself');\n        }\n    }\n}, {\n    content: \"check that user cannot invite themself.\",\n    trigger: \"body.CannotInviteYourself\",\n    isCheck: true,\n}]});\n\nregistry.category(\"web_tour.tours\").add('totp_admin_invite', {\n    test: true,\n    url: '/web',\n    steps: () => [stepUtils.showAppsMenuItem(), ...openAccountSettingsTab(), {\n    content: \"open the user's form\",\n    trigger: \"td.o_data_cell:contains(demo)\",\n}, {\n    content: \"go to Account security Tab\",\n    trigger: \"a.nav-link:contains(Account Security)\",\n}, {\n    content: \"check that demo user can be invited to use 2FA.\",\n    trigger: \"button:contains(Invite to use 2FA)\",\n    isCheck: true,\n}]});\n", "/** @odoo-module **/\n\nimport { registry } from \"@web/core/registry\";\nimport { jsonrpc } from \"@web/core/network/rpc_service\";\n\nregistry.category(\"web_tour.tours\").add('totportal_tour_setup', {\n    test: true,\n    url: '/my/security',\n    steps: () => [{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_enable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check the wizard has opened\",\n    trigger: 'li:contains(\"scan the barcode below\")',\n    run: () => {}\n}, {\n    content: \"Get secret from collapsed div\",\n    trigger: 'a:contains(\"Cannot scan it?\")',\n    run: async function(helpers) {\n        const secret = this.$anchor.closest('div').find('span[name=\"secret\"]').text();\n        const token = await jsonrpc('/totphook', {\n            secret\n        });\n        helpers._text(helpers._get_action_values('input[name=code]'), token);\n        helpers._click(helpers._get_action_values('button.btn-primary:contains(Activate)'));\n    }\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Disable two-factor authentication)',\n    run: () => {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totportal_login_enabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"expect totp screen\",\n    trigger: 'label:contains(Authentication Code)',\n}, {\n    content: \"input code\",\n    trigger: 'input[name=totp_token]',\n    run: async function (helpers) {\n        const token = await jsonrpc('/totphook');\n        helpers._text(helpers._get_action_values(), token);\n        // FIXME: is there a way to put the button as its own step trigger without\n        //        the tour straight blowing through and not waiting for this?\n        helpers._click(helpers._get_action_values('button:contains(\"Log in\")'));\n    }\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(My account)\",\n    run: () => {}\n}, {\n    content: \"go back to security\",\n    trigger: \"a:contains(Security)\",\n},{\n    content: \"Open totp wizard\",\n    trigger: 'button#auth_totp_portal_disable',\n}, {\n    content: \"Check that we have to enter enhanced security mode\",\n    trigger: 'div:contains(\"enter your password\")',\n    run: () => {},\n}, {\n    content: \"Input password\",\n    trigger: '[name=password]',\n    run: 'text portal', // FIXME: better way to do this?\n}, {\n    content: \"Confirm\",\n    trigger: \"button:contains(Confirm Password)\",\n}, {\n    content: \"Check that the button has changed\",\n    trigger: 'button:contains(Enable two-factor authentication)',\n    run: () => {}\n}]});\n\nregistry.category(\"web_tour.tours\").add('totportal_login_disabled', {\n    test: true,\n    url: '/',\n    steps: () => [{\n    content: \"check that we're on the login page or go to it\",\n    trigger: 'input#login, a:contains(Sign in)'\n}, {\n    content: \"input login\",\n    trigger: 'input#login',\n    run: 'text portal',\n}, {\n    content: 'input password',\n    trigger: 'input#password',\n    run: 'text portal',\n}, {\n    content: \"click da button\",\n    trigger: 'button:contains(\"Log in\")',\n}, {\n    content: \"check we're logged in\",\n    trigger: \"h3:contains(My account)\",\n    run: () => {}\n}]});\n", "/** @odoo-module **/\n\n/**\n * Add custom steps to go to map and gantt view in Project app\n */\nimport { registry } from \"@web/core/registry\";\nimport \"@project/../tests/tours/project_tour\";\nimport { patch } from \"@web/core/utils/patch\";\n\nfunction openProjectUpdateAndReturnToTasks(view, viewClass) {\n    return [{\n            trigger: '.o_project_updates_breadcrumb',\n            content: 'Open Project Update from view : ' + view,\n            extra_trigger: \".\" + viewClass,\n        }, {\n            trigger: \".o-kanban-button-new\",\n            content: \"Create a new update from project task view : \" + view,\n            extra_trigger: '.o_project_update_kanban_view',\n        }, {\n            trigger: \"button.o_form_button_cancel\",\n            content: \"Discard project update from project task view : \" + view,\n        }, {\n            trigger: \".o_switch_view.o_list\",\n            content: \"Go to list of project update from view \" + view,\n        }, {\n            trigger: '.o_back_button',\n            content: 'Go back to the task view : ' + view,\n            // extra_trigger: '.o_list_table', // FIXME: [XBO] uncomment it when sample data will be displayed after discarding creation of project update record.\n        },\n    ];\n}\n\npatch(registry.category(\"web_tour.tours\").get(\"project_test_tour\"), {\n    steps() {\n        const originalSteps = super.steps();\n        const taskCreationStepIndex = originalSteps.findIndex((step) => step.id === \"quick_create_tasks\");\n\n        originalSteps.splice(taskCreationStepIndex + 1, 0, {\n            trigger: '.o_switch_view.o_gantt',\n            content: 'Open Gantt View',\n        }, {\n            trigger: '.o_gantt_button_add',\n            content: 'Add a task in gantt',\n        });\n\n        originalSteps.splice(originalSteps.length, 0, {\n            trigger: \".o_gantt_progress_bar\",\n            content: \"See user progress bar\",\n            run: function () {\n                const $progressbar = $(\".o_gantt_progress_bar:eq(0)\");\n                if ($progressbar.length) {\n                    if ($progressbar.find(\"span:eq(0)\")[0].style.width === '') {\n                        console.error(\"Progress bar should be displayed\");\n                    }\n                    if (!$progressbar[0].classList.contains(\"o_gantt_group_danger\")) {\n                        console.error(\"Progress bar should be displayed in danger\");\n                    }\n                } else {\n                    console.error(\"Not able to select progressbar\");\n                }\n            }\n        }, ...openProjectUpdateAndReturnToTasks(\"Gantt\", \"o_gantt_view\"), {\n            trigger: '.o_switch_view.o_map',\n            content: 'Open Map View',\n        }, ...openProjectUpdateAndReturnToTasks(\"Map\", \"o_map_view\"));\n\n        return originalSteps;\n    }\n});\n", "/** @odoo-module */\n\nimport { registry } from \"@web/core/registry\";\n\nconst planningTestTour = registry.category(\"web_tour.tours\").get(\"planning_test_tour\");\n\nregistry.category(\"web_tour.tours\").add('sale_planning_test_tour', {\n    url: '/web',\n    test: true,\n    steps: () => [\n        ...planningTestTour.steps(), {\n            trigger: \".o_gantt_cell.o_gantt_hoverable\",\n            content: \"Click on magnify icon to see list of sale order\",\n        }, {\n            trigger: \"tr.o_data_row td[data-tooltip='Junior Developer']\",\n            content: \"Select the slot and plan orders\",\n            run: 'click',\n        }, {\n            trigger: \".o_gantt_pill span:contains(Junior Developer)\",\n            content: \"Check the naming format when SO is selected from magnify icon\",\n            run: function () {},\n        },\n    ],\n});\n", "/** @odoo-module */\n\n/**\n * Add custom step to check allow_billable during project creation\n * to be able to set a partner on project/tasks.\n */\nimport { registry } from \"@web/core/registry\";\nimport \"@project/../tests/tours/project_tour\";\nimport { patch } from \"@web/core/utils/patch\";\n\npatch(registry.category(\"web_tour.tours\").get(\"project_test_tour\"), {\n    steps() {\n        const originalSteps = super.steps();\n        const projectCreationStepIndex = originalSteps.findIndex((step) => step.id === \"project_creation\");\n        originalSteps.splice(projectCreationStepIndex, 0, {\n            trigger: \"div[name='allow_billable'] input\",\n        });\n\n        return originalSteps;\n    }\n})\n", "window.__odooIgnoreMissingDependencies = false;\n"], "file": "/web/assets/4b86258/web.__assets_tests_call__.js", "sourceRoot": "../../../"}